(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-c18178ac"],{"26d4":function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("h2",[e._v(e._s(e.$t("app.aside.nav.list")))]),n("p",{staticClass:"tip"},[e._v(" 高性能的虚拟列表"),n("span",{staticClass:"orange"},[e._v("（最大可以支撑 80w 行）")]),e._v("，用于处理将大数组按需切割成可视区 items 条数，使渲染性能大幅提升，查看 "),n("router-link",{staticClass:"link",attrs:{to:{name:"VXEAPI",params:{name:"list"}}}},[e._v("API")]),n("br"),n("span",{staticClass:"red"},[e._v("（注：必须固定容器高度和行高）")])],1),n("p",[n("vxe-button",{on:{click:function(t){return e.loadData1(10)}}},[e._v("加载10条")]),n("vxe-button",{on:{click:function(t){return e.loadData1(500)}}},[e._v("加载500条")]),n("vxe-button",{on:{click:function(t){return e.loadData1(1e4)}}},[e._v("加载1w条")]),n("vxe-button",{on:{click:function(t){return e.loadData1(1e5)}}},[e._v("加载10w条")]),n("vxe-button",{on:{click:function(t){return e.loadData1(3e5)}}},[e._v("加载30w条")]),n("vxe-button",{on:{click:function(t){return e.loadData1(5e5)}}},[e._v("加载50w条")])],1),n("p",[n("vxe-list",{staticClass:"my-list",attrs:{height:"240",loading:e.loading1,data:e.list1},scopedSlots:e._u([{key:"default",fn:function(t){var i=t.items;return e._l(i,(function(t,i){return n("div",{key:i,staticClass:"my-list-item"},[e._v(e._s(t.label))])}))}}])})],1),n("div",{staticClass:"vxe-row"},[n("div",{staticClass:"vxe-col--4"},[n("vxe-list",{staticClass:"my-list",attrs:{height:"200",data:e.list2},scopedSlots:e._u([{key:"default",fn:function(t){var i=t.items;return e._l(i,(function(t,i){return n("div",{key:i,staticClass:"my-list-item"},[e._v(e._s(t.label))])}))}}])})],1),n("div",{staticClass:"vxe-col--4"},[n("vxe-list",{staticClass:"my-list",attrs:{height:"200",data:e.list3},scopedSlots:e._u([{key:"default",fn:function(t){var i=t.items;return e._l(i,(function(t,i){return n("div",{key:i,staticClass:"my-list-item"},[n("img",{attrs:{src:"https://n.sinaimg.cn/sinacn17/w120h120/20180314/89fc-fyscsmv5911424.gif",height:"28"}}),n("span",[e._v(e._s(t.label))])])}))}}])})],1),n("div",{staticClass:"vxe-col--4"},[n("vxe-list",{staticClass:"my-ul-list",attrs:{height:"200",data:e.list4,"scroll-y":{sItem:"li"}},scopedSlots:e._u([{key:"default",fn:function(t){var i=t.items;return[n("ul",e._l(i,(function(t,i){return n("li",{key:i},[n("img",{attrs:{src:"https://pic2.zhimg.com/50/v2-f7031359103859e1ed38559715ef5f3f_hd.gif",height:"28"}}),n("span",[e._v(e._s(t.label))])])})),0)]}}])})],1),n("div",{staticClass:"vxe-col--12"},[n("vxe-list",{staticClass:"my-table-list",attrs:{height:"200",data:e.list5,"scroll-y":{gt:60,sItem:".my-tr"}},scopedSlots:e._u([{key:"default",fn:function(t){var i=t.items;return[n("table",[n("tbody",e._l(i,(function(t){return n("tr",{key:t.id,staticClass:"my-tr"},[n("td",[e._v(e._s(t.label)+" - 列1")]),n("td",[e._v(e._s(t.label)+" - 列2")]),n("td",[e._v(e._s(t.label)+" - 列3")])])})),0)])]}}])})],1)]),n("p",{staticClass:"tip"},[e._v("实现高性能的虚拟树列表：1.拍平树结构 2.构建列表树结构 3.处理展开收缩")]),n("p",[n("vxe-button",{on:{click:function(t){return e.loadTree6(6)}}},[e._v("加载30条")]),n("vxe-button",{on:{click:function(t){return e.loadTree6(15)}}},[e._v("加载2000条")]),n("vxe-button",{on:{click:function(t){return e.loadTree6(45)}}},[e._v("加载2w条")]),n("vxe-button",{on:{click:function(t){return e.loadTree6(100)}}},[e._v("加载5w条")]),n("vxe-button",{on:{click:function(t){return e.loadTree6(200)}}},[e._v("加载10w条")]),n("vxe-button",{on:{click:function(t){return e.allTreeExpand(!0)}}},[e._v("全部展开")]),n("vxe-button",{on:{click:function(t){return e.allTreeExpand(!1)}}},[e._v("全部收起")])],1),n("p",[n("vxe-list",{staticClass:"my-tree",attrs:{height:"240",loading:e.loading6,data:e.list6},scopedSlots:e._u([{key:"default",fn:function(t){var i=t.items;return e._l(i,(function(t){return n("div",{key:t.id,staticClass:"my-tree-item",class:["level-"+t._LEVEL,{"has-child":t._HAS_CHILDREN,"is-expand":t._EXPAND}],style:{paddingLeft:20*t._LEVEL+"px"}},[n("i",{staticClass:"tree-icon fa fa-chevron-right",on:{click:function(n){return e.toggleTreeNode(t)}}}),n("span",{staticClass:"tree-label"},[e._v(e._s(t.label))])])}))}}])})],1),n("pre",[e._v("    "),n("pre-code",[e._v("\n      | Arrow Up ↑ | 匀速向上滚动数据 |\n      | Arrow Down ↓ | 匀速向下滚动数据 |\n      | Arrow Left ← | 匀速向左滚动数据 |\n      | Arrow Right → | 匀速向右滚动数据 |\n      | Page Up | 向上翻页滚动 |\n      | Page Down | 向下翻页滚动 |\n      | Spacebar | 翻页滚动 |\n      | Home | 滚动到顶部 |\n      | End | 滚动到底部 |\n    ")]),e._v("\n  ")],1),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("pre-code",{staticClass:"html"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("pre-code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n    "),n("pre-code",{staticClass:"css"},[e._v(e._s(e.demoCodes[2]))]),e._v("\n  ")],1)])},l=[],s=(n("fb6a"),n("99af"),n("4de4"),n("d3b7"),n("c695")),a=n.n(s),c=n("a388"),o=n.n(c),d={data:function(){return{loading1:!1,loading6:!1,list1:[],list2:[],list3:[],list4:[],list5:[],list6:[],mockList:[],demoCodes:['\n        <p>\n          <vxe-button @click="loadData1(10)">加载10条</vxe-button>\n          <vxe-button @click="loadData1(500)">加载500条</vxe-button>\n          <vxe-button @click="loadData1(10000)">加载1w条</vxe-button>\n          <vxe-button @click="loadData1(100000)">加载10w条</vxe-button>\n          <vxe-button @click="loadData1(300000)">加载30w条</vxe-button>\n          <vxe-button @click="loadData1(500000)">加载50w条</vxe-button>\n        </p>\n\n        <p>\n          <vxe-list height="240" class="my-list" :loading="loading1" :data="list1">\n            <template #default="{ items }">\n              <div class="my-list-item" v-for="(item, index) in items" :key="index">{{ item.label }}</div>\n            </template>\n          </vxe-list>\n        </p>\n\n        <div class="vxe-row">\n          <div class="vxe-col--4">\n            <vxe-list class="my-list" height="200" :data="list2">\n              <template #default="{ items }">\n                <div class="my-list-item" v-for="(item, index) in items" :key="index">{{ item.label }}</div>\n              </template>\n            </vxe-list>\n          </div>\n          <div class="vxe-col--4">\n            <vxe-list class="my-list" height="200" :data="list3">\n              <template #default="{ items }">\n                <div class="my-list-item" v-for="(item, index) in items" :key="index">\n                  <img src="https://n.sinaimg.cn/sinacn17/w120h120/20180314/89fc-fyscsmv5911424.gif" height="28">\n                  <span>{{ item.label }}</span>\n                </div>\n              </template>\n            </vxe-list>\n          </div>\n          <div class="vxe-col--4">\n            <vxe-list class="my-ul-list" height="200" :data="list4" :scroll-y="{sItem: \'li\'}">\n              <template #default="{ items }">\n                <ul>\n                  <li v-for="(item, index) in items" :key="index">\n                    <img src="https://pic2.zhimg.com/50/v2-f7031359103859e1ed38559715ef5f3f_hd.gif" height="28">\n                    <span>{{ item.label }}</span>\n                  </li>\n                </ul>\n              </template>\n            </vxe-list>\n          </div>\n          <div class="vxe-col--12">\n            <vxe-list class="my-table-list" height="200" :data="list5" :scroll-y="{gt: 60, sItem: \'.my-tr\'}">\n              <template #default="{ items }">\n                <table>\n                  <tbody>\n                    <tr class="my-tr" v-for="(item, index) in items" :key="index">\n                      <td>{{ item.label }} - 列1</td>\n                      <td>{{ item.label }} - 列2</td>\n                      <td>{{ item.label }} - 列3</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </template>\n            </vxe-list>\n          </div>\n        </div>\n\n        <p class="tip">实现高性能的虚拟树列表：1.拍平树结构 2.构建列表树结构 3.处理展开收缩</p>\n\n        <p>\n          <vxe-button @click="loadTree6(6)">加载30条</vxe-button>\n          <vxe-button @click="loadTree6(15)">加载2000条</vxe-button>\n          <vxe-button @click="loadTree6(45)">加载2w条</vxe-button>\n          <vxe-button @click="loadTree6(100)">加载5w条</vxe-button>\n          <vxe-button @click="loadTree6(200)">加载10w条</vxe-button>\n          <vxe-button @click="allTreeExpand(true)">全部展开</vxe-button>\n          <vxe-button @click="allTreeExpand(false)">全部收起</vxe-button>\n        </p>\n\n        <p>\n          <vxe-list height="240" class="my-tree" :loading="loading6" :data="list6">\n            <template #default="{ items }">\n              <div\n                class="my-tree-item"\n                v-for="item in items"\n                :key="item.id"\n                :class="[`level-${item._LEVEL}`, {\'has-child\': item._HAS_CHILDREN, \'is-expand\': item._EXPAND}]"\n                :style="{paddingLeft: `${item._LEVEL * 20}px`}">\n                <i class="tree-icon fa fa-chevron-right" @click="toggleTreeNode(item)"></i>\n                <span class="tree-label">{{ item.label }}</span>\n              </div>\n            </template>\n          </vxe-list>\n        </p>\n        ',"\n        import XEUtils from 'xe-utils'\n        import VXETable from 'vxe-table'\n        \n        export default {\n          data () {\n            return {\n              loading1: false,\n              loading6: false,\n              list1: [],\n              list2: [],\n              list3: [],\n              list4: [],\n              list5: [],\n              list6: [],\n              mockList: []\n            }\n          },\n          created () {\n            this.loadData1(500)\n            this.loadTree6(10)\n            this.list2 = this.getList(40)\n            this.list3 = this.getList(400)\n            this.list4 = this.getList(2000)\n            this.list5 = this.getList(4000)\n          },\n          methods: {\n            getList (size) {\n              const mockList = this.mockList\n              if (size > mockList.length) {\n                for (let index = mockList.length; index < size; index++) {\n                  mockList.push({\n                    id: index,\n                    label: `row_${index}`\n                  })\n                }\n              }\n              return mockList.slice(0, size)\n            },\n            getTree (size) {\n              const result = []\n              let idKey = 0\n              for (let index = 0; index < size; index++) {\n                const item = {\n                  id: ++idKey,\n                  label: `节点 ${index}`\n                }\n                if (index) {\n                  if (index % 33 === 0) {\n                    const childList = []\n                    for (let cIndex = 0; cIndex < 1000; cIndex++) {\n                      childList.push({\n                        id: ++idKey,\n                        label: `子节点 ${index}-${cIndex}`,\n                        children: [\n                          { label: `子节点 ${index}-${cIndex}-0` },\n                          { label: `子节点 ${index}-${cIndex}-1` },\n                          { label: `子节点 ${index}-${cIndex}-2` },\n                          { label: `子节点 ${index}-${cIndex}-3` },\n                          { label: `子节点 ${index}-${cIndex}-4` },\n                          { label: `子节点 ${index}-${cIndex}-5` },\n                          { label: `子节点 ${index}-${cIndex}-6` },\n                          { label: `子节点 ${index}-${cIndex}-7` }\n                        ]\n                      })\n                    }\n                    item.children = childList\n                  } else if (index % 22 === 0) {\n                    const childList = []\n                    for (let cIndex = 0; cIndex < 500; cIndex++) {\n                      childList.push({\n                        id: ++idKey,\n                        label: `子节点 ${index}-${cIndex}`,\n                        children: [\n                          { label: `子节点 ${index}-${cIndex}-0` },\n                          { label: `子节点 ${index}-${cIndex}-1` },\n                          { label: `子节点 ${index}-${cIndex}-2` }\n                        ]\n                      })\n                    }\n                    item.children = childList\n                  } else if (index % 9 === 0) {\n                    const childList = []\n                    for (let cIndex = 0; cIndex < 200; cIndex++) {\n                      childList.push({\n                        id: ++idKey,\n                        label: `子节点 ${index}-${cIndex}`,\n                        children: [\n                          { label: `子节点 ${index}-${cIndex}-0` },\n                          { label: `子节点 ${index}-${cIndex}-1` },\n                          { label: `子节点 ${index}-${cIndex}-2` },\n                          { label: `子节点 ${index}-${cIndex}-4` },\n                          { label: `子节点 ${index}-${cIndex}-5` }\n                        ]\n                      })\n                    }\n                    item.children = childList\n                  } else if (index % 6 === 0) {\n                    const childList = []\n                    for (let cIndex = 0; cIndex < 100; cIndex++) {\n                      childList.push({\n                        id: ++idKey,\n                        label: `子节点 ${index}-${cIndex}`,\n                        children: [\n                          { label: `子节点 ${index}-${cIndex}-0` },\n                          { label: `子节点 ${index}-${cIndex}-1` },\n                          { label: `子节点 ${index}-${cIndex}-2` },\n                          { label: `子节点 ${index}-${cIndex}-3` }\n                        ]\n                      })\n                    }\n                    item.children = childList\n                  } else if (index % 3 === 0) {\n                    const childList = []\n                    for (let cIndex = 0; cIndex < 10; cIndex++) {\n                      childList.push({\n                        id: ++idKey,\n                        label: `子节点 ${index}-${cIndex}`,\n                        children: [\n                          { label: `子节点 ${index}-${cIndex}-0` },\n                          { label: `子节点 ${index}-${cIndex}-1` }\n                        ]\n                      })\n                    }\n                    item.children = childList\n                  }\n                }\n                result.push(item)\n              }\n              return result\n            },\n            loadData1 (size) {\n              // 模拟后台\n              this.loading1 = true\n              setTimeout(() => {\n                this.list1 = this.getList(size)\n                this.loading1 = false\n                const startTime = Date.now()\n                this.$nextTick(() => {\n                  VXETable.modal.message({ content: `渲染 ${size} 行，用时 ${Date.now() - startTime}毫秒`, status: 'info' })\n                })\n              }, 200)\n            },\n            loadTree6 (size) {\n              // 模拟后台\n              this.loading6 = true\n              setTimeout(() => {\n                const trerData = this.getTree(size)\n                // 将树结构拍平，构建列表树结构\n                XEUtils.eachTree(trerData, (item, index, items, paths, parent, nodes) => {\n                  // 层级\n                  item._LEVEL = nodes.length - 1\n                  // 是否展开\n                  item._EXPAND = false\n                  // 是否可视\n                  item._VISIBLE = !item._LEVEL\n                  // 是否有子节点\n                  item._HAS_CHILDREN = item.children && item.children.length > 0\n                  // 是否叶子节点\n                  item._IS_LEAF = !item._HAS_CHILDREN\n                })\n                this.tree6 = trerData\n                this.refreshTree()\n                this.loading6 = false\n                const startTime = Date.now()\n                this.$nextTick(() => {\n                  VXETable.modal.message({ content: `渲染 ${this.fullList6.length} 行，用时 ${Date.now() - startTime}毫秒`, status: 'info' })\n                })\n              }, 200)\n            },\n            toggleTreeNode (row) {\n              if (row._HAS_CHILDREN) {\n                this.setTreeExpand(row, !row._EXPAND)\n              }\n            },\n            setTreeExpand (row, isExpand) {\n              const matchObj = XEUtils.findTree(this.tree6, item => item === row)\n              row._EXPAND = isExpand\n              if (matchObj) {\n                XEUtils.eachTree(matchObj.item.children, (item, index, items, path, parent) => {\n                  item._VISIBLE = parent ? parent._EXPAND && parent._VISIBLE : isExpand\n                })\n              }\n              this.refreshTree()\n            },\n            allTreeExpand (isExpand) {\n              if (isExpand) {\n                XEUtils.eachTree(this.tree6, item => {\n                  item._EXPAND = item._HAS_CHILDREN\n                  item._VISIBLE = true\n                })\n              } else {\n                XEUtils.eachTree(this.tree6, item => {\n                  item._EXPAND = false\n                  item._VISIBLE = !item._LEVEL\n                })\n              }\n              this.refreshTree()\n            },\n            refreshTree () {\n              const treeList = XEUtils.toTreeArray(this.tree6)\n              this.fullList6 = treeList\n              this.list6 = treeList.filter(item => item._VISIBLE)\n            }\n          }\n        }\n        ","\n        .my-list {\n          border: 1px solid #e8eaec;\n        }\n        .my-list .my-list-item {\n          height: 28px;\n          padding-left: 15px;\n        }\n        .my-ul-list {\n          border: 1px solid #e8eaec;\n        }\n        .my-ul-list li {\n          height: 40px;\n        }\n        .my-table-list {\n          border: 1px solid #e8eaec;\n        }\n        .my-table-list table {\n          width: 100%;\n          text-align: center;\n        }\n        .my-table-list .my-tr {\n          height: 32px;\n        }\n        .my-table-list .my-tr:hover {\n          background-color: #f5f7fa;\n        }\n        .my-table-list td {\n          border-right: 1px solid #e8eaec;\n        }\n        .my-tree {\n          padding: 0 10px;\n          border: 1px solid #e8eaec;\n        }\n        .my-tree .my-tree-item {\n          height: 32px;\n          line-height: 32px;\n        }\n        .my-tree .my-tree-item.has-child .tree-icon {\n          visibility: visible;\n          transition: all 0.3s;\n        }\n        .my-tree .my-tree-item.is-expand .tree-icon {\n          transform: rotate(90deg);\n        }\n        .my-tree .tree-icon {\n          cursor: pointer;\n          width: 20px;\n          line-height: 20px;\n          text-align: center;\n          visibility: hidden;\n          user-select: none;\n        }\n        "]}},created:function(){this.loadData1(500),this.loadTree6(10),this.list2=this.getList(40),this.list3=this.getList(400),this.list4=this.getList(2e3),this.list5=this.getList(4e3)},methods:{getList:function(e){var t=this.mockList;if(e>t.length)for(var n=t.length;n<e;n++)t.push({id:n,label:"row_".concat(n)});return t.slice(0,e)},getTree:function(e){for(var t=[],n=0,i=0;i<e;i++){var l={id:++n,label:"节点 ".concat(i)};if(i)if(i%33===0){for(var s=[],a=0;a<1e3;a++)s.push({id:++n,label:"子节点 ".concat(i,"-").concat(a),children:[{label:"子节点 ".concat(i,"-").concat(a,"-0")},{label:"子节点 ".concat(i,"-").concat(a,"-1")},{label:"子节点 ".concat(i,"-").concat(a,"-2")},{label:"子节点 ".concat(i,"-").concat(a,"-3")},{label:"子节点 ".concat(i,"-").concat(a,"-4")},{label:"子节点 ".concat(i,"-").concat(a,"-5")},{label:"子节点 ".concat(i,"-").concat(a,"-6")},{label:"子节点 ".concat(i,"-").concat(a,"-7")}]});l.children=s}else if(i%22===0){for(var c=[],o=0;o<500;o++)c.push({id:++n,label:"子节点 ".concat(i,"-").concat(o),children:[{label:"子节点 ".concat(i,"-").concat(o,"-0")},{label:"子节点 ".concat(i,"-").concat(o,"-1")},{label:"子节点 ".concat(i,"-").concat(o,"-2")}]});l.children=c}else if(i%9===0){for(var d=[],r=0;r<200;r++)d.push({id:++n,label:"子节点 ".concat(i,"-").concat(r),children:[{label:"子节点 ".concat(i,"-").concat(r,"-0")},{label:"子节点 ".concat(i,"-").concat(r,"-1")},{label:"子节点 ".concat(i,"-").concat(r,"-2")},{label:"子节点 ".concat(i,"-").concat(r,"-4")},{label:"子节点 ".concat(i,"-").concat(r,"-5")}]});l.children=d}else if(i%6===0){for(var h=[],x=0;x<100;x++)h.push({id:++n,label:"子节点 ".concat(i,"-").concat(x),children:[{label:"子节点 ".concat(i,"-").concat(x,"-0")},{label:"子节点 ".concat(i,"-").concat(x,"-1")},{label:"子节点 ".concat(i,"-").concat(x,"-2")},{label:"子节点 ".concat(i,"-").concat(x,"-3")}]});l.children=h}else if(i%3===0){for(var m=[],u=0;u<10;u++)m.push({id:++n,label:"子节点 ".concat(i,"-").concat(u),children:[{label:"子节点 ".concat(i,"-").concat(u,"-0")},{label:"子节点 ".concat(i,"-").concat(u,"-1")}]});l.children=m}t.push(l)}return t},loadData1:function(e){var t=this;this.loading1=!0,setTimeout((function(){t.list1=t.getList(e),t.loading1=!1;var n=Date.now();t.$nextTick((function(){o.a.modal.message({content:"渲染 ".concat(e," 行，用时 ").concat(Date.now()-n,"毫秒"),status:"info"})}))}),200)},loadTree6:function(e){var t=this;this.loading6=!0,setTimeout((function(){var n=t.getTree(e);a.a.eachTree(n,(function(e,t,n,i,l,s){e._LEVEL=s.length-1,e._EXPAND=!1,e._VISIBLE=!e._LEVEL,e._HAS_CHILDREN=e.children&&e.children.length>0,e._IS_LEAF=!e._HAS_CHILDREN})),t.tree6=n,t.refreshTree(),t.loading6=!1;var i=Date.now();t.$nextTick((function(){o.a.modal.message({content:"渲染 ".concat(t.fullList6.length," 行，用时 ").concat(Date.now()-i,"毫秒"),status:"info"})}))}),200)},toggleTreeNode:function(e){e._HAS_CHILDREN&&this.setTreeExpand(e,!e._EXPAND)},setTreeExpand:function(e,t){var n=a.a.findTree(this.tree6,(function(t){return t===e}));e._EXPAND=t,n&&a.a.eachTree(n.item.children,(function(e,n,i,l,s){e._VISIBLE=s?s._EXPAND&&s._VISIBLE:t})),this.refreshTree()},allTreeExpand:function(e){e?a.a.eachTree(this.tree6,(function(e){e._EXPAND=e._HAS_CHILDREN,e._VISIBLE=!0})):a.a.eachTree(this.tree6,(function(e){e._EXPAND=!1,e._VISIBLE=!e._LEVEL})),this.refreshTree()},refreshTree:function(){var e=a.a.toTreeArray(this.tree6);this.fullList6=e,this.list6=e.filter((function(e){return e._VISIBLE}))}}},r=d,h=(n("d297"),n("2877")),x=Object(h["a"])(r,i,l,!1,null,"62340082",null);t["default"]=x.exports},d297:function(e,t,n){"use strict";n("d89f")},d89f:function(e,t,n){}}]);