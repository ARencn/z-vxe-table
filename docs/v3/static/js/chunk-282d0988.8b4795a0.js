(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-282d0988"],{"857a":function(n,t,e){var o=e("e330"),i=e("1d80"),a=e("577e"),r=/"/g,l=o("".replace);n.exports=function(n,t,e,o){var d=a(i(n)),c="<"+t;return""!==e&&(c+=" "+e+'="'+l(a(o),r,"&quot;")+'"'),c+">"+d+"</"+t+">"}},af03:function(n,t,e){var o=e("d039");n.exports=function(n){return o((function(){var t=""[n]('"');return t!==t.toLowerCase()||t.split('"').length>3}))}},b55c:function(n,t,e){"use strict";e.r(t);var o=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("p",{staticClass:"tip"},[n._v("显示表尾，服务端计算表尾合计")]),e("vxe-grid",{ref:"xGrid",attrs:{border:"","show-overflow":"","show-header-overflow":"","show-footer-overflow":"","show-footer":"",height:"500","row-id":"id","footer-method":n.footerMethod,"checkbox-config":{checkField:"checked",labelField:"id"},loading:n.loading}}),e("p",{staticClass:"demo-code"},[n._v(n._s(n.$t("app.body.button.showCode")))]),e("pre",[n._v("    "),e("pre-code",{staticClass:"xml"},[n._v(n._s(n.demoCodes[0]))]),n._v("\n    "),e("pre-code",{staticClass:"javascript"},[n._v(n._s(n.demoCodes[1]))]),n._v("\n  ")],1)],1)},i=[],a=(e("d3b7"),e("3ca3"),e("ddb0"),e("99af"),e("d81d"),e("c7cd"),e("159b"),e("a630"),{data:function(){return{loading:!1,colIndex:0,rowIndex:1,footerData:[],demoCodes:['\n        <vxe-grid\n          border\n          show-overflow\n          show-header-overflow\n          show-footer-overflow\n          show-footer\n          ref="xGrid"\n          height="500"\n          row-id="id"\n          :footer-method="footerMethod"\n          :checkbox-config="{checkField: \'checked\', labelField: \'id\'}"\n          :loading="loading">\n        </vxe-grid>\n\n        ',"\n        export default {\n          data () {\n            return {\n              loading: false,\n              colIndex: 0,\n              rowIndex: 1,\n              footerData: []\n            }\n          },\n          created () {\n            // 动态定义，阻断 vue 对大数据双向绑定，提升加载速度\n            this.allData = []\n            this.allColumn = []\n            this.init()\n          },\n          methods: {\n            init () {\n              this.loading = true\n              Promise.all([\n                // 模拟后台获取列信息\n                this.findColumnList(400).then(data => {\n                  const allColumn = this.allData.concat(data)\n                  if (this.$refs.xGrid) {\n                    this.$refs.xGrid.loadColumn(allColumn)\n                  }\n                  this.allColumn = allColumn\n                  // 模拟后台获取合计数据\n                  this.footerData = [\n                  allColumn.map((column, columnIndex) => {\n                    if (columnIndex === 0) {\n                      return '平均'\n                    }\n                    return `平_${columnIndex}`\n                  }),\n                  allColumn.map((column, columnIndex) => {\n                    if (columnIndex === 0) {\n                      return '和值'\n                    }\n                    return `和_${columnIndex}`\n                  })\n                ]\n                }),\n                this.findDataList(800).then(data => {\n                  this.allData = this.allData.concat(data)\n                  if (this.$refs.xGrid) {\n                    this.$refs.xGrid.loadData(this.allData)\n                  }\n                })\n              ]).then(() => {\n                this.loading = false\n              })\n            },\n            findColumnList (size) {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const columns = []\n                  for (let index = 0; index < size; index++) {\n                    const key = this.colIndex++\n                    const config = {\n                      field: key ? `col_${key}` : 'id',\n                      title: key ? `标题_${key}` : 'ID',\n                      width: 140\n                    }\n                    if (!key) {\n                      config.type = 'checkbox'\n                    }\n                    if (key < 2) {\n                      config.fixed = 'left'\n                    }\n                    columns.push(config)\n                  }\n                  resolve(columns)\n                }, 250)\n              })\n            },\n            findDataList (size) {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const list = []\n                  for (let index = 0; index < size; index++) {\n                    const key = this.rowIndex++\n                    const item = { id: key, checked: false }\n                    // 由于生成数据比较耗时，所以固定生成1000字段\n                    Array.from(new Array(1000)).forEach((num, cIndex) => {\n                      item[`col_${cIndex}`] = `内容_${cIndex}_${index}`\n                    })\n                    list.push(item)\n                  }\n                  resolve(list)\n                }, 250)\n              })\n            },\n            footerMethod () {\n              return this.footerData\n            }\n          }\n        }\n        "]}},created:function(){this.allData=[],this.allColumn=[],this.init()},methods:{init:function(){var n=this;this.loading=!0,Promise.all([this.findColumnList(400).then((function(t){var e=n.allData.concat(t);n.$refs.xGrid&&n.$refs.xGrid.loadColumn(e),n.allColumn=e,n.footerData=[e.map((function(n,t){return 0===t?"平均":"平_".concat(t)})),e.map((function(n,t){return 0===t?"和值":"和_".concat(t)}))]})),this.findDataList(800).then((function(t){n.allData=n.allData.concat(t),n.$refs.xGrid&&n.$refs.xGrid.loadData(n.allData)}))]).then((function(){n.loading=!1}))},findColumnList:function(n){var t=this;return new Promise((function(e){setTimeout((function(){for(var o=[],i=0;i<n;i++){var a=t.colIndex++,r={field:a?"col_".concat(a):"id",title:a?"标题_".concat(a):"ID",width:140};a||(r.type="checkbox"),a<2&&(r.fixed="left"),o.push(r)}e(o)}),250)}))},findDataList:function(n){var t=this;return new Promise((function(e){setTimeout((function(){for(var o=[],i=function(n){var e=t.rowIndex++,i={id:e,checked:!1};Array.from(new Array(1e3)).forEach((function(t,e){i["col_".concat(e)]="内容_".concat(e,"_").concat(n)})),o.push(i)},a=0;a<n;a++)i(a);e(o)}),250)}))},footerMethod:function(){return this.footerData}}}),r=a,l=e("2877"),d=Object(l["a"])(r,o,i,!1,null,null,null);t["default"]=d.exports},c7cd:function(n,t,e){"use strict";var o=e("23e7"),i=e("857a"),a=e("af03");o({target:"String",proto:!0,forced:a("fixed")},{fixed:function(){return i(this,"tt","","")}})}}]);