(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-6ee2194a"],{"4df4":function(n,t,e){"use strict";var o=e("da84"),i=e("0366"),l=e("c65b"),a=e("7b0b"),r=e("9bdd"),s=e("e95a"),c=e("68ee"),d=e("07fa"),u=e("8418"),f=e("9a1f"),h=e("35a1"),v=o.Array;n.exports=function(n){var t=a(n),e=c(this),o=arguments.length,x=o>1?arguments[1]:void 0,m=void 0!==x;m&&(x=i(x,o>2?arguments[2]:void 0));var b,g,C,k,p,_,D=h(t),w=0;if(!D||this==v&&s(D))for(b=d(t),g=e?new this(b):v(b);b>w;w++)_=m?x(t[w],w):t[w],u(g,w,_);else for(k=f(t,D),p=k.next,g=e?new this:[];!(C=l(p,k)).done;w++)_=m?r(k,x,[C.value,w],!0):C.value,u(g,w,_);return g.length=w,g}},"857a":function(n,t,e){var o=e("e330"),i=e("1d80"),l=e("577e"),a=/"/g,r=o("".replace);n.exports=function(n,t,e,o){var s=l(i(n)),c="<"+t;return""!==e&&(c+=" "+e+'="'+r(l(o),a,"&quot;")+'"'),c+">"+s+"</"+t+">"}},"99af":function(n,t,e){"use strict";var o=e("23e7"),i=e("da84"),l=e("d039"),a=e("e8b5"),r=e("861d"),s=e("7b0b"),c=e("07fa"),d=e("8418"),u=e("65f0"),f=e("1dde"),h=e("b622"),v=e("2d00"),x=h("isConcatSpreadable"),m=9007199254740991,b="Maximum allowed index exceeded",g=i.TypeError,C=v>=51||!l((function(){var n=[];return n[x]=!1,n.concat()[0]!==n})),k=f("concat"),p=function(n){if(!r(n))return!1;var t=n[x];return void 0!==t?!!t:a(n)},_=!C||!k;o({target:"Array",proto:!0,forced:_},{concat:function(n){var t,e,o,i,l,a=s(this),r=u(a,0),f=0;for(t=-1,o=arguments.length;t<o;t++)if(l=-1===t?a:arguments[t],p(l)){if(i=c(l),f+i>m)throw g(b);for(e=0;e<i;e++,f++)e in l&&d(r,f,l[e])}else{if(f>=m)throw g(b);d(r,f++,l)}return r.length=f,r}})},"9bdd":function(n,t,e){var o=e("825a"),i=e("2a62");n.exports=function(n,t,e,l){try{return l?t(o(e)[0],e[1]):t(e)}catch(a){i(n,"throw",a)}}},a630:function(n,t,e){var o=e("23e7"),i=e("4df4"),l=e("1c7e"),a=!l((function(n){Array.from(n)}));o({target:"Array",stat:!0,forced:a},{from:i})},af03:function(n,t,e){var o=e("d039");n.exports=function(n){return o((function(){var t=""[n]('"');return t!==t.toLowerCase()||t.split('"').length>3}))}},c7cd:function(n,t,e){"use strict";var o=e("23e7"),i=e("857a"),l=e("af03");o({target:"String",proto:!0,forced:l("fixed")},{fixed:function(){return i(this,"tt","","")}})},f1bd:function(n,t,e){"use strict";e.r(t);var o=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[n._m(0),e("vxe-toolbar",{attrs:{loading:n.loading},scopedSlots:n._u([{key:"buttons",fn:function(){return[e("vxe-button",{on:{click:function(t){return n.loadList(20)}}},[n._v("+20条")]),e("vxe-button",{on:{click:function(t){return n.loadList(50)}}},[n._v("+50条")]),e("vxe-button",{on:{click:function(t){return n.loadList(100)}}},[n._v("+100条")]),e("vxe-button",{on:{click:function(t){return n.loadList(300)}}},[n._v("+300条")]),e("vxe-button",{on:{click:function(t){return n.removeList(20)}}},[n._v("-20条")]),e("vxe-button",{on:{click:function(t){return n.removeList(50)}}},[n._v("-50条")]),e("vxe-button",{on:{click:function(t){return n.loadColumns(10)}}},[n._v("+10列")]),e("vxe-button",{on:{click:function(t){return n.loadColumns(30)}}},[n._v("+30列")]),e("vxe-button",{on:{click:function(t){return n.loadColumns(50)}}},[n._v("+50列")]),e("vxe-button",{on:{click:function(t){return n.removeColumn(10)}}},[n._v("-10列")]),e("vxe-button",{on:{click:function(t){return n.removeColumn(20)}}},[n._v("-20列")]),e("vxe-button",{on:{click:function(t){return n.$refs.xGrid.scrollTo(1e3,2e3)}}},[n._v("x=1000,y=2000")]),e("vxe-button",{on:{click:function(t){return n.$refs.xGrid.clearScroll()}}},[n._v("清除滚动")])]},proxy:!0}])}),e("vxe-grid",{ref:"xGrid",attrs:{border:"","show-overflow":"","show-header-overflow":"",height:"500","row-id":"id","checkbox-config":{checkField:"checked",labelField:"id"},loading:n.loading}}),e("p",{staticClass:"demo-code"},[n._v(n._s(n.$t("app.body.button.showCode")))]),e("pre",[n._v("    "),e("pre-code",{staticClass:"xml"},[n._v(n._s(n.demoCodes[0]))]),n._v("\n    "),e("pre-code",{staticClass:"javascript"},[n._v(n._s(n.demoCodes[1]))]),n._v("\n  ")],1)],1)},i=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("p",{staticClass:"tip"},[n._v(" 虚拟滚动渲染，更加复杂局部递增数据、局部递增列、固定列"),e("br")])}],l=(e("d3b7"),e("3ca3"),e("ddb0"),e("99af"),e("fb6a"),e("c7cd"),e("159b"),e("a630"),{data:function(){return{loading:!1,colIndex:0,rowIndex:1,demoCodes:['\n        <vxe-toolbar :loading="loading">\n          <template #buttons>\n            <vxe-button @click="loadList(20)">+20条</vxe-button>\n            <vxe-button @click="loadList(50)">+50条</vxe-button>\n            <vxe-button @click="loadList(100)">+100条</vxe-button>\n            <vxe-button @click="loadList(300)">+300条</vxe-button>\n            <vxe-button @click="removeList(20)">-20条</vxe-button>\n            <vxe-button @click="removeList(50)">-50条</vxe-button>\n            <vxe-button @click="loadColumns(10)">+10列</vxe-button>\n            <vxe-button @click="loadColumns(30)">+30列</vxe-button>\n            <vxe-button @click="loadColumns(50)">+50列</vxe-button>\n            <vxe-button @click="removeColumn(10)">-10列</vxe-button>\n            <vxe-button @click="removeColumn(20)">-20列</vxe-button>\n            <vxe-button @click="$refs.xGrid.scrollTo(1000, 2000)">x=1000,y=2000</vxe-button>\n            <vxe-button @click="$refs.xGrid.clearScroll()">清除滚动</vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-grid\n          border\n          show-overflow\n          show-header-overflow\n          ref="xGrid"\n          height="500"\n          row-id="id"\n          :checkbox-config="{checkField: \'checked\', labelField: \'id\'}"\n          :loading="loading">\n        </vxe-grid>\n        ',"\n        export default {\n          data () {\n            return {\n              loading: false,\n              colIndex: 0,\n              rowIndex: 0\n            }\n          },\n          created () {\n            // 动态定义，阻断 vue 对大数据双向绑定，提升加载速度\n            this.allData = []\n            this.allColumn = []\n            this.init()\n          },\n          methods: {\n            init () {\n              this.loading = true\n              Promise.all([\n                this.findColumnList(200).then(data => {\n                  this.allColumn = this.allColumn.concat(data)\n                  this.$refs.xGrid.loadColumn(this.allColumn)\n                }),\n                this.findDataList(600).then(data => {\n                  this.allData = this.allData.concat(data)\n                  this.$refs.xGrid.loadData(this.allData)\n                })\n              ]).then(() => {\n                this.loading = false\n              })\n            },\n            removeColumn (size) {\n              this.loading = true\n              if (this.allColumn.length > size) {\n                this.allColumn = this.allColumn.slice(0, this.allColumn.length - size)\n                if (this.$refs.xGrid) {\n                  this.$refs.xGrid.loadColumn(this.allColumn)\n                }\n                this.loading = false\n              }\n            },\n            loadColumns (size) {\n              this.loading = true\n              this.findColumnList(size).then(data => {\n                this.allColumn = this.allColumn.concat(data)// 局部追加并保存全量数据\n                this.$refs.xGrid.loadColumn(this.allColumn)\n                this.loading = false\n              })\n            },\n            removeList (size) {\n              this.loading = true\n              setTimeout(() => {\n                if (this.allData.length > size) {\n                  this.allData = this.allData.slice(0, this.allData.length - size)\n                  if (this.$refs.xGrid) {\n                    this.$refs.xGrid.loadData(this.allData)\n                  }\n                }\n                this.loading = false\n              }, 100)\n            },\n            loadList (size) {\n              this.loading = true\n              this.findDataList(size).then(data => {\n                this.allData = this.allData.concat(data)// 局部追加并保存全量数据\n                this.$refs.xGrid.loadData(this.allData)\n                this.loading = false\n              })\n            },\n            findColumnList (size) {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  var columns = []\n                  for (var index = 0; index < size; index++) {\n                    let key = this.colIndex++\n                    let config = {\n                      field: key ? `col_${key}` : 'id',\n                      title: key ? `标题_${key}` : 'ID',\n                      width: 140\n                    }\n                    if (!key) {\n                      config.type = 'checkbox'\n                    }\n                    if (key < 2) {\n                      config.type = 'checkbox'\n                      config.fixed = 'left'\n                    }\n                    columns.push(config)\n                  }\n                  resolve(columns)\n                }, 250)\n              })\n            },\n            findDataList (size) {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  var list = []\n                  for (var index = 0; index < size; index++) {\n                    let key = this.rowIndex++\n                    let item = { id: key, checked: false }\n                    // 由于生成数据比较耗时，所以固定生成1000字段\n                    Array.from(new Array(1000)).forEach((num, cIndex) => {\n                      item[`col_${cIndex}`] = `内容_${cIndex}_${index}`\n                    })\n                    list.push(item)\n                  }\n                  resolve(list)\n                }, 250)\n              })\n            }\n          }\n        }\n        "]}},created:function(){this.allData=[],this.allColumn=[],this.init()},methods:{init:function(){var n=this;this.loading=!0,Promise.all([this.findColumnList(200).then((function(t){n.allColumn=n.allColumn.concat(t),n.$refs.xGrid&&n.$refs.xGrid.loadColumn(n.allColumn)})),this.findDataList(600).then((function(t){n.allData=n.allData.concat(t),n.$refs.xGrid&&n.$refs.xGrid.loadData(n.allData)}))]).then((function(){n.loading=!1}))},removeColumn:function(n){this.loading=!0,this.allColumn.length>n&&(this.allColumn=this.allColumn.slice(0,this.allColumn.length-n),this.$refs.xGrid&&this.$refs.xGrid.loadColumn(this.allColumn),this.loading=!1)},loadColumns:function(n){var t=this;this.loading=!0,this.findColumnList(n).then((function(n){t.allColumn=t.allColumn.concat(n),t.$refs.xGrid&&t.$refs.xGrid.loadColumn(t.allColumn),t.loading=!1}))},removeList:function(n){var t=this;this.loading=!0,setTimeout((function(){t.allData.length>n&&(t.allData=t.allData.slice(0,t.allData.length-n),t.$refs.xGrid&&t.$refs.xGrid.loadData(t.allData)),t.loading=!1}),100)},loadList:function(n){var t=this;this.loading=!0,this.findDataList(n).then((function(n){t.allData=t.allData.concat(n),t.$refs.xGrid&&t.$refs.xGrid.loadData(t.allData),t.loading=!1}))},findColumnList:function(n){var t=this;return new Promise((function(e){setTimeout((function(){for(var o=[],i=0;i<n;i++){var l=t.colIndex++,a={field:l?"col_".concat(l):"id",title:l?"标题_".concat(l):"ID",width:140};l||(a.type="checkbox"),l<2&&(a.fixed="left"),o.push(a)}e(o)}),250)}))},findDataList:function(n){var t=this;return new Promise((function(e){setTimeout((function(){for(var o=[],i=function(n){var e=t.rowIndex++,i={id:e,checked:!1};Array.from(new Array(1e3)).forEach((function(t,e){i["col_".concat(e)]="内容_".concat(e,"_").concat(n)})),o.push(i)},l=0;l<n;l++)i(l);e(o)}),250)}))}}}),a=l,r=e("2877"),s=Object(r["a"])(a,o,i,!1,null,null,null);t["default"]=s.exports},fb6a:function(n,t,e){"use strict";var o=e("23e7"),i=e("da84"),l=e("e8b5"),a=e("68ee"),r=e("861d"),s=e("23cb"),c=e("07fa"),d=e("fc6a"),u=e("8418"),f=e("b622"),h=e("1dde"),v=e("f36a"),x=h("slice"),m=f("species"),b=i.Array,g=Math.max;o({target:"Array",proto:!0,forced:!x},{slice:function(n,t){var e,o,i,f=d(this),h=c(f),x=s(n,h),C=s(void 0===t?h:t,h);if(l(f)&&(e=f.constructor,a(e)&&(e===b||l(e.prototype))?e=void 0:r(e)&&(e=e[m],null===e&&(e=void 0)),e===b||void 0===e))return v(f,x,C);for(o=new(void 0===e?b:e)(g(C-x,0)),i=0;x<C;x++,i++)x in f&&u(o,i,f[x]);return o.length=i,o}})}}]);