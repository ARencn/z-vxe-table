(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-4b2e8c75"],{"4df4":function(e,n,a){"use strict";var t=a("da84"),l=a("0366"),r=a("c65b"),i=a("7b0b"),s=a("9bdd"),m=a("e95a"),o=a("68ee"),d=a("07fa"),c=a("8418"),v=a("9a1f"),g=a("35a1"),u=t.Array;e.exports=function(e){var n=i(e),a=o(this),t=arguments.length,h=t>1?arguments[1]:void 0,f=void 0!==h;f&&(h=l(h,t>2?arguments[2]:void 0));var b,p,x,w,y,_,C=g(n),S=0;if(!C||this==u&&m(C))for(b=d(n),p=a?new this(b):u(b);b>S;S++)_=f?h(n[S],S):n[S],c(p,S,_);else for(w=v(n,C),y=w.next,p=a?new this:[];!(x=r(y,w)).done;S++)_=f?s(w,h,[x.value,S],!0):x.value,c(p,S,_);return p.length=S,p}},"8f8e":function(e,n,a){"use strict";a.r(n);var t=function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("div",[e._m(0),a("vxe-table",{attrs:{resizable:"",loading:e.loading,"tree-config":e.tableTreeConfig,data:e.tableData}},[a("vxe-table-column",{attrs:{field:"name",title:"名称","tree-node":"",formatter:e.formatName}}),a("vxe-table-column",{attrs:{field:"level",title:"级别"}}),a("vxe-table-column",{attrs:{field:"age",title:"年龄"}}),a("vxe-table-column",{attrs:{field:"rate",title:"分数"}})],1),a("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),a("pre",[e._v("    "),a("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),a("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},l=[function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("p",{staticClass:"tip"},[e._v(" 基于树表格实现分组汇总"),a("br"),a("span",{staticClass:"red"},[e._v("(注：树结构不支持大量数据，如果数据量超过 500 条，请谨慎使用！)")])])}],r=(a("d3b7"),a("159b"),a("a630"),a("3ca3"),a("99af"),a("b0c0"),a("c695")),i=a.n(r),s=a("f4e8"),m=a.n(s),o={data:function(){return{loading:!1,tableData:[],tableTreeConfig:{children:"children",accordion:!0,expandAll:!1},demoCodes:['\n        <vxe-table\n          resizable\n          :loading="loading"\n          :tree-config="tableTreeConfig"\n          :data="tableData">\n          <vxe-table-column field="name" title="名称" tree-node :formatter="formatName"></vxe-table-column>\n          <vxe-table-column field="level" title="级别"></vxe-table-column>\n          <vxe-table-column field="age" title="年龄"></vxe-table-column>\n          <vxe-table-column field="rate" title="分数"></vxe-table-column>\n        </vxe-table>\n        ',"\n        export default {\n          data () {\n            return {\n              loading: false,\n              tableData: [],\n              tableTreeConfig: {\n                children: 'children',\n                accordion: true, // 一层只允许展开一个节点\n                expandAll: false // 默认是否全部展开\n              }\n            }\n          },\n          created () {\n            this.loading = true\n            this.findList().then(data => {\n              this.tableData = this.getGroupSummary(data)\n              this.loading = false\n            })\n          },\n          methods: {\n            findList () {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  let list = [\n                    {\n                      name: '一班',\n                      level: '',\n                      age: '',\n                      rate: '',\n                      children: [\n                        { name: 'test7', rate: 9, age: 24, level: 1 },\n                        { name: 'test6', rate: 14, age: 20, level: 3 },\n                        {\n                          name: '第一组',\n                          level: '',\n                          age: '',\n                          rate: '',\n                          children: [\n                            { name: 'test85', rate: 13, age: 32, level: 1 },\n                            { name: 'test37', rate: 9, age: 29, level: 4 },\n                            { name: 'test93', rate: 22, age: 28, level: 5 },\n                            { name: 'test90', rate: 55, age: 26, level: 2 }\n                          ]\n                        },\n                        { name: 'test32', rate: 11, age: 21, level: 1 }\n                      ]\n                    },\n                    {\n                      name: '二班',\n                      level: '',\n                      age: '',\n                      rate: '',\n                      children: [\n                        { name: 'test15', rate: 13, age: 32, level: 1 },\n                        { name: 'test44', rate: 9, age: 29, level: 4 },\n                        {\n                          name: '第一组',\n                          level: '',\n                          age: '',\n                          rate: '',\n                          children: [\n                            { name: 'test37', rate: 9, age: 29, level: 4 },\n                            { name: 'test93', rate: 22, age: 28, level: 5 }\n                          ]\n                        },\n                        {\n                          name: '第二组',\n                          level: '',\n                          age: '',\n                          rate: '',\n                          children: [\n                            { name: 'test74', rate: 11, age: 32, level: 5 },\n                            { name: 'test99', rate: 23, age: 18, level: 4 },\n                            {\n                              name: '第一排',\n                              level: '',\n                              age: '',\n                              rate: '',\n                              children: [\n                                { name: 'test48', rate: 77, age: 29, level: 4 },\n                                { name: 'test38', rate: 34, age: 21, level: 2 }\n                              ]\n                            },\n                            { name: 'test16', rate: 22, age: 26, level: 5 }\n                          ]\n                        },\n                        { name: 'test91', rate: 16, age: 27, level: 5 },\n                        {\n                          name: '第三组',\n                          level: '',\n                          age: '',\n                          rate: '',\n                          children: [\n                            { name: 'test77', rate: 11, age: 35, level: 1 },\n                            { name: 'test89', rate: 40, age: 18, level: 4 },\n                            { name: 'test10', rate: 22, age: 20, level: 2 }\n                          ]\n                        }\n                      ]\n                    },\n                    {\n                      name: '三班',\n                      level: '',\n                      age: '',\n                      rate: '',\n                      children: [\n                        { name: 'test6', rate: 3, age: 22, level: 2 },\n                        { name: 'test2', rate: 5, age: 25, level: 3 },\n                        { name: 'test42', rate: 17, age: 35, level: 4 }\n                      ]\n                    }\n                  ]\n                  resolve(list)\n                }, 300)\n              })\n            },\n            formatName ({ row }) {\n              return row.children && row.children.length ? `${row.name} (${row.num}人)` : row.name\n            },\n            // 计算逻辑\n            handleSummary  (children) {\n              return {\n                num: XEUtils.sum(children, 'num'),\n                level: Math.floor(XEUtils.sum(children, 'level')),\n                age: parseInt(XEUtils.mean(children, 'age')),\n                rate: XEUtils.sum(children, 'rate')\n              }\n            },\n            getGroupSummary (data) {\n              XEUtils.eachTree(data, (row, index, items, path, parent, nodes) => {\n                let children = row.children\n                if (children && children.length) {\n                  // 合计子节点\n                  Object.assign(row, this.handleSummary(children))\n                } else {\n                  row.num = 1\n                  if (index === items.length - 1) {\n                    // 全量汇总\n                    for (let len = nodes.length - 2; len >= 0; len--) {\n                      Object.assign(nodes[len], this.handleSummary(nodes[len].children))\n                    }\n                  }\n                }\n              }, this.tableTreeConfig)\n              return data\n            }\n          }\n        }\n        "]}},created:function(){var e=this;this.loading=!0,this.findList().then((function(n){e.tableData=e.getGroupSummary(n),e.loading=!1}))},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){m.a.highlightBlock(e)}))},methods:{findList:function(){return new Promise((function(e){setTimeout((function(){var n=[{name:"一班",level:"",age:"",rate:"",children:[{name:"test7",rate:9,age:24,level:1},{name:"test6",rate:14,age:20,level:3},{name:"第一组",level:"",age:"",rate:"",children:[{name:"test85",rate:13,age:32,level:1},{name:"test37",rate:9,age:29,level:4},{name:"test93",rate:22,age:28,level:5},{name:"test90",rate:55,age:26,level:2}]},{name:"test32",rate:11,age:21,level:1}]},{name:"二班",level:"",age:"",rate:"",children:[{name:"test15",rate:13,age:32,level:1},{name:"test44",rate:9,age:29,level:4},{name:"第一组",level:"",age:"",rate:"",children:[{name:"test37",rate:9,age:29,level:4},{name:"test93",rate:22,age:28,level:5}]},{name:"第二组",level:"",age:"",rate:"",children:[{name:"test74",rate:11,age:32,level:5},{name:"test99",rate:23,age:18,level:4},{name:"第一排",level:"",age:"",rate:"",children:[{name:"test48",rate:77,age:29,level:4},{name:"test38",rate:34,age:21,level:2}]},{name:"test16",rate:22,age:26,level:5}]},{name:"test91",rate:16,age:27,level:5},{name:"第三组",level:"",age:"",rate:"",children:[{name:"test77",rate:11,age:35,level:1},{name:"test89",rate:40,age:18,level:4},{name:"test10",rate:22,age:20,level:2}]}]},{name:"三班",level:"",age:"",rate:"",children:[{name:"test6",rate:3,age:22,level:2},{name:"test2",rate:5,age:25,level:3},{name:"test42",rate:17,age:35,level:4}]}];e(n)}),300)}))},formatName:function(e){var n=e.row;return n.children&&n.children.length?"".concat(n.name," (").concat(n.num,"人)"):n.name},handleSummary:function(e){return{num:i.a.sum(e,"num"),level:Math.floor(i.a.sum(e,"level")),age:parseInt(i.a.mean(e,"age")),rate:i.a.sum(e,"rate")}},getGroupSummary:function(e){var n=this;return i.a.eachTree(e,(function(e,a,t,l,r,i){var s=e.children;if(s&&s.length)Object.assign(e,n.handleSummary(s));else if(e.num=1,a===t.length-1)for(var m=i.length-2;m>=0;m--)Object.assign(i[m],n.handleSummary(i[m].children))}),this.tableTreeConfig),e}}},d=o,c=a("2877"),v=Object(c["a"])(d,t,l,!1,null,null,null);n["default"]=v.exports},"9bdd":function(e,n,a){var t=a("825a"),l=a("2a62");e.exports=function(e,n,a,r){try{return r?n(t(a)[0],a[1]):n(a)}catch(i){l(e,"throw",i)}}},a630:function(e,n,a){var t=a("23e7"),l=a("4df4"),r=a("1c7e"),i=!r((function(e){Array.from(e)}));t({target:"Array",stat:!0,forced:i},{from:l})}}]);