(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5b8fc876"],{"4df4":function(n,t,e){"use strict";var o=e("da84"),a=e("0366"),l=e("c65b"),r=e("7b0b"),c=e("9bdd"),i=e("e95a"),d=e("68ee"),s=e("07fa"),u=e("8418"),v=e("9a1f"),b=e("35a1"),h=o.Array;n.exports=function(n){var t=r(n),e=d(this),o=arguments.length,f=o>1?arguments[1]:void 0,w=void 0!==f;w&&(f=a(f,o>2?arguments[2]:void 0));var x,m,k,g,_,p,C=b(t),A=0;if(!C||this==h&&i(C))for(x=s(t),m=e?new this(x):h(x);x>A;A++)p=w?f(t[A],A):t[A],u(m,A,p);else for(g=v(t,C),_=g.next,m=e?new this:[];!(k=l(_,g)).done;A++)p=w?c(g,f,[k.value,A],!0):k.value,u(m,A,p);return m.length=A,m}},"9bdd":function(n,t,e){var o=e("825a"),a=e("2a62");n.exports=function(n,t,e,l){try{return l?t(o(e)[0],e[1]):t(e)}catch(r){a(n,"throw",r)}}},a630:function(n,t,e){var o=e("23e7"),a=e("4df4"),l=e("1c7e"),r=!l((function(n){Array.from(n)}));o({target:"Array",stat:!0,forced:r},{from:a})},e3eb:function(n,t,e){"use strict";e.r(t);var o=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("p",{staticClass:"tip"},[n._v(" 虚拟滚动渲染，左右固定列"),e("span",{staticClass:"orange"},[n._v("（最大可以支撑 5w 列、30w 行）")]),e("br"),n._v(" 大数据不建议使用双向绑定的 "),e("table-api-link",{attrs:{name:"data"}}),n._v(" 属性（vue 监听会大数据会短暂的卡顿），建议使用 "),e("table-api-link",{attrs:{prop:"loadData"}}),n._v("/"),e("table-api-link",{attrs:{prop:"loadColumn"}}),n._v(" 函数"),e("br"),n._v(" 对于多选 type="),e("table-column-api-link",{attrs:{prop:"checkbox"}}),n._v(" 当数据量海量时应该绑定 "),e("table-api-link",{attrs:{prop:"checkField"}}),n._v(" 属性渲染速度更快"),e("br"),e("span",{staticClass:"red"},[n._v("(注：如果要启用横向虚拟滚动，不支持分组表头)")])],1),e("vxe-grid",{ref:"xGrid",attrs:{border:"","show-overflow":"","show-header-overflow":"","highlight-hover-row":"","highlight-current-row":"",height:"600",loading:n.loading,toolbar:{slots:{buttons:"toolbar_buttons"}},"checkbox-config":{checkField:"checked",labelField:"nickname"}},scopedSlots:n._u([{key:"toolbar_buttons",fn:function(){return[e("vxe-button",{on:{click:function(t){return n.loadColumnAndData(1e4,1e4)}}},[n._v("1w列1w条")]),e("vxe-button",{on:{click:function(t){return n.loadColumnAndData(1e4,5e4)}}},[n._v("1w列5w条")]),e("vxe-button",{on:{click:function(t){return n.loadColumnAndData(1e4,1e5)}}},[n._v("1w列10w条")]),e("vxe-button",{on:{click:function(t){return n.loadColumnAndData(1e4,1e5)}}},[n._v("1w列20w条")]),e("vxe-button",{on:{click:function(t){return n.loadColumnAndData(2e4,5e4)}}},[n._v("2w列5w条")]),e("vxe-button",{on:{click:function(t){return n.loadColumnAndData(2e4,1e5)}}},[n._v("2w列10w条")]),e("vxe-button",{on:{click:function(t){return n.loadColumnAndData(2e4,2e5)}}},[n._v("2w列20w条")]),e("vxe-button",{on:{click:function(t){return n.$refs.xGrid.setAllCheckboxRow(!0)}}},[n._v("所有选中")]),e("vxe-button",{on:{click:function(t){return n.$refs.xGrid.clearCheckboxRow()}}},[n._v("清除选中")]),e("vxe-button",{on:{click:n.getSelectEvent}},[n._v("获取选中")])]},proxy:!0}])}),n._m(0),e("p",{staticClass:"demo-code"},[n._v(n._s(n.$t("app.body.button.showCode")))]),e("pre",[n._v("    "),e("code",{staticClass:"xml"},[n._v(n._s(n.demoCodes[0]))]),n._v("\n    "),e("code",{staticClass:"javascript"},[n._v(n._s(n.demoCodes[1]))]),n._v("\n  ")])],1)},a=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("pre",[n._v("    "),e("code",[n._v("\n      | Arrow Up ↑ | 匀速向上滚动数据 |\n      | Arrow Down ↓ | 匀速向下滚动数据 |\n      | Arrow Left ← | 匀速向左滚动数据 |\n      | Arrow Right → | 匀速向右滚动数据 |\n      | Page Up | 向上翻页滚动 |\n      | Page Down | 向下翻页滚动 |\n      | Spacebar | 翻页滚动 |\n      | Home | 滚动到顶部 |\n      | End | 滚动到底部 |\n    ")]),n._v("\n  ")])}],l=(e("d3b7"),e("159b"),e("a630"),e("3ca3"),e("ddb0"),e("99af"),e("628a")),r=e.n(l),c=e("f4e8"),i=e.n(c),d={data:function(){return{loading:!1,demoCodes:['\n        <vxe-grid\n          border\n          show-overflow\n          show-header-overflow\n          highlight-hover-row\n          highlight-current-row\n          ref="xGrid"\n          height="600"\n          :loading="loading"\n          :toolbar="{slots: {buttons: \'toolbar_buttons\'}}"\n          :checkbox-config="{checkField: \'checked\', labelField: \'nickname\'}">\n          <template v-slot:toolbar_buttons>\n            <vxe-button @click="loadColumnAndData(10000, 10000)">1w列1w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(10000, 50000)">1w列5w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(10000, 100000)">1w列10w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(10000, 100000)">1w列20w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(20000, 50000)">2w列5w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(20000, 100000)">2w列10w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(20000, 200000)">2w列20w条</vxe-button>\n            <vxe-button @click="$refs.xGrid.setAllCheckboxRow(true)">所有选中</vxe-button>\n            <vxe-button @click="$refs.xGrid.clearCheckboxRow()">清除选中</vxe-button>\n            <vxe-button @click="getSelectEvent">获取选中</vxe-button>\n          </template>\n        </vxe-grid>\n        ',"\n        export default {\n          data () {\n            return {\n              loading: false\n            }\n          },\n          created () {\n            this.loadColumnAndData(600, 600)\n          },\n          methods: {\n            loadColumnAndData (colSize, rowSize) {\n              this.loading = true\n              Promise.all([\n                XEAjax.mockColumns(colSize),\n                XEAjax.mockList(rowSize)\n              ]).then(rest => {\n                const columns = rest[0]\n                const data = rest[1]\n                const startTime = Date.now()\n                const xGrid = this.$refs.xGrid\n                // 使用函数式加载，阻断 vue 对大数组的双向绑定\n                if (xGrid) {\n                  Promise.all([\n                    xGrid.reloadColumn(columns),\n                    xGrid.reloadData(data)\n                  ]).then(() => {\n                    this.$XModal.message({ message: `渲染 ${colSize} 列 ${rowSize} 行，用时 ${Date.now() - startTime}毫秒`, status: 'info' })\n                    this.loading = false\n                  })\n                }\n              })\n            },\n            getSelectEvent () {\n              let selectRecords = this.$refs.xGrid.getCheckboxRecords()\n              this.$XModal.alert(selectRecords.length)\n            }\n          }\n        }\n        "]}},created:function(){this.loadColumnAndData(600,600)},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(n){i.a.highlightBlock(n)}))},methods:{loadColumnAndData:function(n,t){var e=this;this.loading=!0,Promise.all([r.a.mockColumns(n),r.a.mockList(t)]).then((function(o){var a=o[0],l=o[1],r=Date.now(),c=e.$refs.xGrid;c&&Promise.all([c.reloadColumn(a),c.reloadData(l)]).then((function(){e.$XModal.message({message:"渲染 ".concat(n," 列 ").concat(t," 行，用时 ").concat(Date.now()-r,"毫秒"),status:"info"}),e.loading=!1}))}))},getSelectEvent:function(){var n=this.$refs.xGrid.getCheckboxRecords();this.$XModal.alert(n.length)}}},s=d,u=e("2877"),v=Object(u["a"])(s,o,a,!1,null,null,null);t["default"]=v.exports}}]);