(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c8867"],{"54f8":function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._m(0),n("vxe-toolbar",{attrs:{refresh:{query:e.reload},export:"",print:"",custom:""},scopedSlots:e._u([{key:"buttons",fn:function(){return[n("vxe-button",{on:{click:e.insertEvent}},[e._v(e._s(e.$t("app.body.button.insert")))]),n("vxe-button",{on:{click:e.saveEvent}},[e._v("保存")])]},proxy:!0}])}),n("vxe-table",{ref:"xTree",attrs:{resizable:"","show-overflow":"","export-config":"","keep-source":"","row-id":"id",loading:e.loading,"tree-config":e.treeConfig,"edit-config":{trigger:"click",mode:"row",showStatus:!0},data:e.tableData}},[n("vxe-table-column",{attrs:{type:"checkbox",width:"60"}}),n("vxe-table-column",{attrs:{field:"name",title:"Name","tree-node":""}}),n("vxe-table-column",{attrs:{field:"size",title:"Size","edit-render":{name:"input"}}}),n("vxe-table-column",{attrs:{field:"type",title:"Type","edit-render":{name:"input"}}}),n("vxe-table-column",{attrs:{field:"date",title:"Date","edit-render":{name:"$input",props:{type:"date"}}}})],1),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},o=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticClass:"tip"},[e._v(" 增删改查、工具栏"),n("br"),n("span",{staticClass:"red"},[e._v("（注：内置的 CRUD 管理器是不支持插入子节点的，如果要往子节点插入或删除节点数据，可以直接操作数据源）")])])}],i=(n("d3b7"),n("159b"),n("a630"),n("3ca3"),n("99af"),n("c695")),a=n.n(i),s=n("1487"),l=n.n(s),d={data:function(){return{loading:!1,tableData:[],removeList:[],treeConfig:{children:"children"},demoCodes:['\n        <vxe-toolbar :refresh="{query: reload}" export print custom>\n          <template v-slot:buttons>\n            <vxe-button @click="insertEvent">{{ $t(\'app.body.button.insert\') }}</vxe-button>\n            <vxe-button @click="saveEvent">保存</vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-table\n          resizable\n          show-overflow\n          export-config\n          keep-source\n          ref="xTree"\n          row-id="id"\n          :loading="loading"\n          :tree-config="treeConfig"\n          :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n          :data="tableData">\n          <vxe-table-column type="checkbox" width="60"></vxe-table-column>\n          <vxe-table-column field="name" title="Name" tree-node></vxe-table-column>\n          <vxe-table-column field="size" title="Size" :edit-render="{name: \'input\'}"></vxe-table-column>\n          <vxe-table-column field="type" title="Type" :edit-render="{name: \'input\'}"></vxe-table-column>\n          <vxe-table-column field="date" title="Date" :edit-render="{name: \'$input\', props: {type: \'date\'}}"></vxe-table-column>\n        </vxe-table>\n        ',"\n        export default {\n          data () {\n            return {\n              loading: false,\n              ttableData: [],\n              removeList: [],\n              treeConfig: {\n                children: 'children'\n              }\n            }\n          },\n          created () {\n            this.findList()\n          },\n          methods: {\n            findList () {\n              this.loading = true\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  this.tableData = XEUtils.clone(window.MOCK_TREE_DATA_LIST, true)\n                  this.loading = false\n                  resolve(this.tableData)\n                }, 300)\n              })\n            },\n            insertEvent () {\n              const xTree = this.$refs.xTree\n              const newRow = {\n                name: '新数据',\n                date: XEUtils.toDateString(new Date(), 'yyyy-MM-dd')\n              }\n              xTree.insert(newRow).then(({ row }) => xTree.setActiveRow(row))\n            },\n            reload () {\n              // 清除所有状态\n              this.$refs.xTree.clearAll()\n              return this.findList()\n            },\n            saveEvent () {\n              const { insertRecords, updateRecords } = this.$refs.xTree.getRecordset()\n              this.$XModal.alert(`insertRecords=${insertRecords.length} updateRecords=${updateRecords.length}`)\n            }\n          }\n        }\n        "]}},created:function(){this.findList()},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){l.a.highlightBlock(e)}))},methods:{findList:function(){var e=this;return this.loading=!0,new Promise((function(t){setTimeout((function(){e.tableData=a.a.clone(window.MOCK_TREE_DATA_LIST,!0),e.loading=!1,t(e.tableData)}),300)}))},insertEvent:function(){var e=this.$refs.xTree,t={name:"新数据",date:a.a.toDateString(new Date,"yyyy-MM-dd")};e.insert(t).then((function(t){var n=t.row;return e.setActiveRow(n)}))},reload:function(){return this.$refs.xTree.clearAll(),this.findList()},saveEvent:function(){var e=this.$refs.xTree.getRecordset(),t=e.insertRecords,n=e.updateRecords;this.$XModal.alert("insertRecords=".concat(t.length," updateRecords=").concat(n.length))}}},c=d,u=n("2877"),v=Object(u["a"])(c,r,o,!1,null,null,null);t["default"]=v.exports}}]);