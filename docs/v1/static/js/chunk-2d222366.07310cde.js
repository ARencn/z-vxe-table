(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d222366"],{ce3a:function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._m(0),n("vxe-grid",{ref:"xGrid",attrs:{border:"","show-overflow":"","keep-source":"",height:"460",loading:e.loading,data:e.tableData,columns:e.tableColumn,toolbar:e.tableToolbar,"edit-config":{trigger:"click",mode:"row"}},on:{"checkbox-change":e.checkboxChangeEvent,"checkbox-all":e.checkboxChangeEvent},scopedSlots:e._u([{key:"top",fn:function(){return[n("a-alert",{attrs:{type:"warning",message:"已选择 "+e.selectRecords.length+" 项",banner:""}})]},proxy:!0},{key:"toolbar_buttons",fn:function(){return[n("el-button",{on:{click:e.insertEvent}},[e._v("新增")]),n("el-button",{on:{click:e.saveEvent}},[e._v("保存")])]},proxy:!0}])}),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticClass:"tip"},[e._v(" 具体兼容请查看 "),n("a",{staticClass:"link",attrs:{href:"https://github.com/x-extends/vxe-table-plugin-antd",target:"_blank"}},[e._v("vxe-table-plugin-antd")]),e._v(" 插件的 API"),n("br"),n("span",{staticClass:"red"},[e._v("（注：该示例仅供参考，具体逻辑请自行实现）")])])}],a=(n("fb6a"),n("d3b7"),n("159b"),n("a630"),n("3ca3"),n("99af"),n("4de4"),n("628a")),l=n.n(a),o=n("1487"),d=n.n(o),s={data:function(){return{loading:!1,tableData:[],selectRecords:[],tableColumn:[{type:"checkbox",width:60},{type:"seq",title:"Number",width:80},{field:"name",title:"AInput",minWidth:140,editRender:{name:"AInput"}},{field:"role",title:"AAutoComplete",width:160,editRender:{name:"AAutoComplete",props:{dataSource:[]},events:{search:this.roleSearchEvent}}},{field:"age",title:"AInputNumber",width:160,editRender:{name:"AInputNumber",props:{max:35,min:18}}},{field:"sex",title:"ASelect",width:140,editRender:{name:"ASelect",options:[]}},{field:"sex1",title:"ASelect（不建议放在单元格）",width:260,editRender:{name:"ASelect",options:[],props:{mode:"multiple"}}},{field:"sex2",title:"ASelect",width:140,editRender:{name:"ASelect",optionGroups:[]}},{field:"region",title:"ACascader",width:200,editRender:{name:"ACascader",props:{options:[]}}},{field:"date7",title:"ADatePicker",width:140,editRender:{name:"ADatePicker",props:{type:"date",format:"YYYY/MM/DD"}}},{field:"date8",title:"AMonthPicker",width:140,editRender:{name:"AMonthPicker"}},{field:"date9",title:"AWeekPicker",width:140,editRender:{name:"AWeekPicker"}},{field:"date11",title:"ARangePicker",width:260,editRender:{name:"ARangePicker"}},{field:"date10",title:"ATimePicker",width:140,editRender:{name:"ATimePicker"}},{field:"attr1",title:"ATreeSelect",width:140,editRender:{name:"ATreeSelect",props:{treeData:[]}}},{field:"attr2",title:"ATreeSelect（不建议放在单元格）",width:300,editRender:{name:"ATreeSelect",props:{treeData:[],treeCheckable:!0}}},{field:"flag",title:"ASwitch",width:100,cellRender:{name:"ASwitch"}},{field:"rate",title:"ARate",width:200,cellRender:{name:"ARate"}}],tableToolbar:{slots:{buttons:"toolbar_buttons"}},restaurants:["前端","后端","开发","测试"],demoCodes:['\n        <vxe-grid\n          border\n          show-overflow\n          keep-source\n          ref="xGrid"\n          height="460"\n          :loading="loading"\n          :data="tableData"\n          :columns="tableColumn"\n          :toolbar="tableToolbar"\n          :edit-config="{trigger: \'click\', mode: \'row\'}"\n          @checkbox-change="checkboxChangeEvent"\n          @checkbox-all="checkboxChangeEvent">\n          <template v-slot:top>\n            <a-alert type="warning" :message="`已选择 ${selectRecords.length} 项`" banner></a-alert>\n          </template>\n          <template v-slot:toolbar_buttons>\n            <el-button @click="insertEvent">新增</el-button>\n            <el-button @click="saveEvent">保存</el-button>\n          </template>\n        </vxe-grid>\n        ',"\n        export default {\n          data () {\n            return {\n              loading: false,\n              tableData: [],\n              selectRecords: [],\n              tableColumn: [\n                { type: 'checkbox', width: 60 },\n                { type: 'seq', title: 'Number', width: 80 },\n                { field: 'name', title: 'AInput', minWidth: 140, editRender: { name: 'AInput' } },\n                { field: 'role', title: 'AAutoComplete', width: 160, editRender: { name: 'AAutoComplete', props: { dataSource: [] }, events: { search: this.roleSearchEvent } } },\n                { field: 'age', title: 'AInputNumber', width: 160, editRender: { name: 'AInputNumber', props: { max: 35, min: 18 } } },\n                { field: 'sex', title: 'ASelect', width: 140, editRender: { name: 'ASelect', options: [] } },\n                { field: 'sex1', title: 'ASelect（不建议放在单元格）', width: 260, editRender: { name: 'ASelect', options: [], props: { mode: 'multiple' } } },\n                { field: 'sex2', title: 'ASelect', width: 140, editRender: { name: 'ASelect', optionGroups: [] } },\n                { field: 'region', title: 'ACascader', width: 200, editRender: { name: 'ACascader', props: { options: [] } } },\n                { field: 'date7', title: 'ADatePicker', width: 140, editRender: { name: 'ADatePicker', props: { type: 'date', format: 'YYYY/MM/DD' } } },\n                { field: 'date8', title: 'AMonthPicker', width: 140, editRender: { name: 'AMonthPicker' } },\n                { field: 'date9', title: 'AWeekPicker', width: 140, editRender: { name: 'AWeekPicker' } },\n                { field: 'date11', title: 'ARangePicker', width: 260, editRender: { name: 'ARangePicker' } },\n                { field: 'date10', title: 'ATimePicker', width: 140, editRender: { name: 'ATimePicker' } },\n                { field: 'attr1', title: 'ATreeSelect', width: 140, editRender: { name: 'ATreeSelect', props: { treeData: [] } } },\n                { field: 'attr2', title: 'ATreeSelect（不建议放在单元格）', width: 300, editRender: { name: 'ATreeSelect', props: { treeData: [], treeCheckable: true } } },\n                { field: 'flag', title: 'ASwitch', width: 100, cellRender: { name: 'ASwitch' } },\n                { field: 'rate', title: 'ARate', width: 200, cellRender: { name: 'ARate' } }\n              ],\n              tableToolbar: {\n                slots: {\n                  buttons: 'toolbar_buttons'\n                }\n              },\n              restaurants: ['前端', '后端', '开发', '测试']\n            }\n          },\n          created () {\n            this.loading = true\n            setTimeout(() => {\n              this.tableData = window.MOCK_DATA_LIST.slice(0, 10)\n              this.loading = false\n            }, 500)\n            this.findSexList()\n            this.findRegionList()\n            this.findSexGroupList()\n            this.findTreeSelectList()\n          },\n          methods: {\n            findSexList () {\n              return XEAjax.get('/api/conf/sex/list').then(data => {\n                this.tableColumn[5].editRender.options = data\n                this.tableColumn[6].editRender.options = data\n              })\n            },\n            findRegionList () {\n              return XEAjax.get('/api/conf/region/list').then(data => {\n                this.tableColumn[8].editRender.props.options = data\n              })\n            },\n            findSexGroupList () {\n              let sexGroupList = [\n                {\n                  label: '分组1',\n                  options: [\n                    {\n                      label: '男',\n                      value: '1'\n                    }\n                  ]\n                },\n                {\n                  label: '分组2',\n                  options: [\n                    {\n                      label: '女',\n                      value: '0'\n                    }\n                  ]\n                }\n              ]\n              this.tableColumn[7].editRender.optionGroups = sexGroupList\n            },\n            findTreeSelectList () {\n              let treeData = [{\n                title: 'Node1',\n                value: '0-0',\n                key: '0-0',\n                children: [{\n                  title: 'Child Node1',\n                  value: '0-0-0',\n                  key: '0-0-0'\n                }]\n              }, {\n                title: 'Node2',\n                value: '0-1',\n                key: '0-1',\n                children: [{\n                  title: 'Child Node3',\n                  value: '0-1-0',\n                  key: '0-1-0',\n                  disabled: true\n                }, {\n                  title: 'Child Node4',\n                  value: '0-1-1',\n                  key: '0-1-1'\n                }, {\n                  title: 'Child Node5',\n                  value: '0-1-2',\n                  key: '0-1-2'\n                }]\n              }]\n              this.tableColumn[14].editRender.props.treeData = treeData\n              this.tableColumn[15].editRender.props.treeData = treeData\n            },\n            insertEvent () {\n              let xGrid = this.$refs.xGrid\n              let record = {\n                role: '',\n                age: 18,\n                sex1: [],\n                region: [],\n                flag: false,\n                rate: 2\n              }\n              xGrid.insert(record).then(({ row }) => xGrid.setActiveRow(row))\n            },\n            saveEvent () {\n              let { insertRecords, removeRecords, updateRecords } = this.$refs.xGrid.getRecordset()\n              if (insertRecords.length || removeRecords.length || updateRecords.length) {\n                this.$alert(`insertRecords=${insertRecords.length}; removeRecords=${removeRecords.length}; updateRecords=${updateRecords.length}`)\n              } else {\n                this.$alert('数据未改动！')\n              }\n            },\n            roleSearchEvent ({ row }, value) {\n              let dataSource = this.restaurants.filter(option => option.toUpperCase().indexOf((value || '').toUpperCase()) !== -1)\n              this.tableColumn[3].editRender.props.dataSource = dataSource\n            },\n            checkboxChangeEvent () {\n              this.selectRecords = this.$refs.xGrid.getCheckboxRecords()\n            }\n          }\n        }\n        "]}},created:function(){var e=this;this.loading=!0,setTimeout((function(){e.tableData=window.MOCK_DATA_LIST.slice(0,10),e.loading=!1}),500),this.findSexList(),this.findRegionList(),this.findSexGroupList(),this.findTreeSelectList()},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){d.a.highlightBlock(e)}))},methods:{findSexList:function(){var e=this;return l.a.get("/api/conf/sex/list").then((function(t){e.tableColumn[5].editRender.options=t,e.tableColumn[6].editRender.options=t}))},findRegionList:function(){var e=this;return l.a.get("/api/conf/region/list").then((function(t){e.tableColumn[8].editRender.props.options=t}))},findSexGroupList:function(){var e=[{label:"分组1",options:[{label:"男",value:"1"}]},{label:"分组2",options:[{label:"女",value:"0"}]}];this.tableColumn[7].editRender.optionGroups=e},findTreeSelectList:function(){var e=[{title:"Node1",value:"0-0",key:"0-0",children:[{title:"Child Node1",value:"0-0-0",key:"0-0-0"}]},{title:"Node2",value:"0-1",key:"0-1",children:[{title:"Child Node3",value:"0-1-0",key:"0-1-0",disabled:!0},{title:"Child Node4",value:"0-1-1",key:"0-1-1"},{title:"Child Node5",value:"0-1-2",key:"0-1-2"}]}];this.tableColumn[14].editRender.props.treeData=e,this.tableColumn[15].editRender.props.treeData=e},insertEvent:function(){var e=this.$refs.xGrid,t={role:"",age:18,sex1:[],region:[],flag:!1,rate:2};e.insert(t).then((function(t){var n=t.row;return e.setActiveRow(n)}))},saveEvent:function(){var e=this.$refs.xGrid.getRecordset(),t=e.insertRecords,n=e.removeRecords,i=e.updateRecords;t.length||n.length||i.length?this.$alert("insertRecords=".concat(t.length,"; removeRecords=").concat(n.length,"; updateRecords=").concat(i.length)):this.$alert("数据未改动！")},roleSearchEvent:function(e,t){var n=this.restaurants.filter((function(e){return-1!==e.toUpperCase().indexOf((t||"").toUpperCase())}));this.tableColumn[3].editRender.props.dataSource=n},checkboxChangeEvent:function(){this.selectRecords=this.$refs.xGrid.getCheckboxRecords()}}},c=s,h=n("2877"),u=Object(h["a"])(c,i,r,!1,null,null,null);t["default"]=u.exports}}]);