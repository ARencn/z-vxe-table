(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2fc6fb5c"],{7213:function(e,t,n){},"80f7":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("p",{staticClass:"tip"},[n("table-api-link",{attrs:{name:"vxe-table"}}),e._v(" 方式：使用 "),n("a",{staticClass:"link",attrs:{href:"https://www.npmjs.com/package/sortablejs",target:"_blank"}},[e._v("sortablejs")]),e._v(" 实现行拖动，由于直接操作了 Dom 节点，需要与 Vue 的数据同步，必须设置 "),n("table-api-link",{attrs:{prop:"row-key"}}),n("br"),n("span",{staticClass:"red"},[e._v("（注：该示例仅供参考，具体逻辑请自行实现）")])],1),n("vxe-table",{ref:"xTable1",staticClass:"sortable-row-demo",attrs:{border:"","row-key":"",data:e.tableData}},[n("vxe-table-column",{attrs:{width:"60"},scopedSlots:e._u([{key:"default",fn:function(){return[n("span",{staticClass:"drag-btn"},[n("i",{staticClass:"vxe-icon--menu"})])]},proxy:!0},{key:"header",fn:function(){return[n("vxe-tooltip",{attrs:{content:"按住后可以上下拖动排序！",enterable:""},model:{value:e.showHelpTip1,callback:function(t){e.showHelpTip1=t},expression:"showHelpTip1"}},[n("i",{staticClass:"vxe-icon--question",on:{click:function(t){e.showHelpTip1=!e.showHelpTip1}}})])]},proxy:!0}])}),n("vxe-table-column",{attrs:{field:"name",title:"Name"}}),n("vxe-table-column",{attrs:{field:"sex",title:"Sex"}}),n("vxe-table-column",{attrs:{field:"age",title:"Age"}}),n("vxe-table-column",{attrs:{field:"address",title:"Address","show-overflow":""}})],1),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n    "),n("code",{staticClass:"css"},[e._v(e._s(e.demoCodes[2]))]),e._v("\n  ")]),n("p",{staticClass:"tip"},[n("grid-api-link",{attrs:{name:"vxe-grid"}}),e._v(" 方式：树表格的移动也是一样的"),n("br"),e._v(" 由于树节点的深层结构，所以需要在树节点在变动之后调用 "),n("table-api-link",{attrs:{prop:"syncData"}}),e._v(" 方法刷新数据"),n("br"),n("span",{staticClass:"red"},[e._v("（注：该示例仅供参考，具体逻辑请自行实现，例如：限制自己不能往自己子节点拖动等...）")])],1),n("vxe-grid",{ref:"xTable2",staticClass:"sortable-tree-demo",attrs:{border:"","row-key":"",columns:e.tableColumn,data:e.tableTreeData,"tree-config":{children:"children"}}}),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[3]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[4]))]),e._v("\n    "),n("code",{staticClass:"css"},[e._v(e._s(e.demoCodes[5]))]),e._v("\n  ")])],1)},o=[],l=(n("fb6a"),n("d3b7"),n("159b"),n("a630"),n("3ca3"),n("a434"),n("1487")),r=n.n(l),s=n("aa47"),i=n("c695"),d=n.n(i),c={data:function(){var e=this,t=this.$createElement;return{showHelpTip1:!1,showHelpTip2:!1,tableData:[],tableColumn:[{width:60,slots:{default:function(){return[t("span",{class:"drag-btn"},[t("i",{class:"vxe-icon--menu"})])]},header:function(){return[t("vxe-tooltip",{attrs:{content:"按住后可以上下拖动排序！",enterable:!0},model:{value:e.showHelpTip2,callback:function(t){e.showHelpTip2=t}}},[t("i",{class:"vxe-icon--question",on:{click:function(){e.showHelpTip2=!e.showHelpTip2}}})])]}}},{field:"name",title:"Name",treeNode:!0},{field:"size",title:"Size"},{field:"type",title:"Type"},{field:"date",title:"Date"}],tableTreeData:[],demoCodes:['\n        <vxe-table\n          border\n          row-key\n          ref="xTable1"\n          class="sortable-row-demo"\n          :data="tableData">\n          <vxe-table-column width="60">\n            <template v-slot>\n              <span class="drag-btn">\n                <i class="vxe-icon--menu"></i>\n              </span>\n            </template>\n            <template v-slot:header>\n              <vxe-tooltip v-model="showHelpTip1" content="按住后可以上下拖动排序！" enterable>\n                <i class="vxe-icon--question" @click="showHelpTip1 = !showHelpTip1"></i>\n              </vxe-tooltip>\n            </template>\n          </vxe-table-column>\n          <vxe-table-column field="name" title="Name"></vxe-table-column>\n          <vxe-table-column field="sex" title="Sex"></vxe-table-column>\n          <vxe-table-column field="age" title="Age"></vxe-table-column>\n          <vxe-table-column field="address" title="Address" show-overflow></vxe-table-column>\n        </vxe-table>\n        ',"\n        export default {\n          data () {\n            return {\n              showHelpTip1: false,\n              tableData: []\n            }\n          },\n          created () {\n            this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n            this.rowDrop()\n          },\n          beforeDestroy () {\n            if (this.sortable) {\n              this.sortable.destroy()\n            }\n          },\n          methods: {\n            rowDrop () {\n              this.$nextTick(() => {\n                let xTable = this.$refs.xTable\n                this.sortable = Sortable.create(xTable.$el.querySelector('.body--wrapper>.vxe-table--body tbody'), {\n                  handle: '.drag-btn',\n                  onEnd: ({ newIndex, oldIndex }) => {\n                    let currRow = this.tableData.splice(oldIndex, 1)[0]\n                    this.tableData.splice(newIndex, 0, currRow)\n                  }\n                })\n              })\n            }\n          }\n        }\n        ","\n        .sortable-row-demo .drag-btn {\n          cursor: move;\n          font-size: 12px;\n        }\n        .sortable-row-demo .vxe-body--row.sortable-ghost,\n        .sortable-row-demo .vxe-body--row.sortable-chosen {\n          background-color: #dfecfb;\n        }\n        ",'\n        <vxe-grid\n          border\n          row-key\n          ref="xTable2"\n          class="sortable-tree-demo"\n          :columns="tableColumn"\n          :data="tableTreeData"\n          :tree-config="{children: \'children\'}"></vxe-grid>\n        ',"\n        export default {\n          data () {\n            return {\n              showHelpTip2: false,\n              tableTreeData: [],\n              tableColumn: [\n                {\n                  width: 60,\n                  slots: {\n                    default: () => {\n                      return [\n                        <span class=\"drag-btn\">\n                          <i class=\"vxe-icon--menu\"></i>\n                        </span>\n                      ]\n                    },\n                    header: () => {\n                      return [\n                        <vxe-tooltip v-model={ this.showHelpTip2 } content=\"按住后可以上下拖动排序！\" enterable>\n                          <i class=\"vxe-icon--question\" onClick={ () => { this.showHelpTip2 = !this.showHelpTip2 } }></i>\n                        </vxe-tooltip>\n                      ]\n                    }\n                  }\n                },\n                { field: 'name', title: 'Name', treeNode: true },\n                { field: 'size', title: 'Size' },\n                { field: 'type', title: 'Type' },\n                { field: 'date', title: 'Date' }\n              ]\n            }\n          },\n          created () {\n            this.tableTreeData = window.MOCK_DATA_LIST.slice(0)\n            this.treeDrop()\n          },\n          beforeDestroy () {\n            if (this.sortable) {\n              this.sortable.destroy()\n            }\n          },\n          methods: {\n            treeDrop () {\n              this.$nextTick(() => {\n                let xTable = this.$refs.xTable\n                this.sortable2 = Sortable.create(xTable.$el.querySelector('.body--wrapper>.vxe-table--body tbody'), {\n                  handle: '.drag-btn',\n                  onEnd: ({ item, oldIndex }) => {\n                    let options = { children: 'children' }\n                    let targetTrElem = item\n                    let wrapperElem = targetTrElem.parentNode\n                    let prevTrElem = targetTrElem.previousElementSibling\n                    let tableTreeData = this.tableTreeData\n                    let selfRow = xTable.getRowNode(targetTrElem).item\n                    let selfNode = XEUtils.findTree(tableTreeData, row => row === selfRow, options)\n                    if (prevTrElem) {\n                      // 移动到节点\n                      let prevRow = xTable.getRowNode(prevTrElem).item\n                      let prevNode = XEUtils.findTree(tableTreeData, row => row === prevRow, options)\n                      if (XEUtils.findTree(selfRow[options.children], row => prevRow === row, options)) {\n                        // 错误的移动\n                        let oldTrElem = wrapperElem.children[oldIndex]\n                        wrapperElem.insertBefore(targetTrElem, oldTrElem)\n                        return this.$XModal.message({ message: '不允许自己给自己拖动！', status: 'error' })\n                      }\n                      let currRow = selfNode.items.splice(selfNode.index, 1)[0]\n                      if (xTable.isTreeExpandByRow(prevRow)) {\n                        // 移动到当前的子节点\n                        prevRow[options.children].splice(0, 0, currRow)\n                      } else {\n                        // 移动到相邻节点\n                        prevNode.items.splice(prevNode.index + (selfNode.index < prevNode.index ? 0 : 1), 0, currRow)\n                      }\n                    } else {\n                      // 移动到第一行\n                      var currRow = selfNode.items.splice(selfNode.index, 1)[0]\n                      tableTreeData.unshift(currRow)\n                    }\n                    // 如果变动了树层级，需要刷新数据\n                    xTable.syncData()\n                  }\n                })\n              })\n            }\n          }\n        }\n        ","\n        .sortable-tree-demo .drag-btn {\n          cursor: move;\n          font-size: 12px;\n        }\n        .sortable-tree-demo .vxe-body--row.sortable-ghost,\n        .sortable-tree-demo .vxe-body--row.sortable-chosen {\n          background-color: #dfecfb;\n        }\n        "]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6),this.tableTreeData=d.a.clone(window.MOCK_TREE_DATA_LIST,!0),this.rowDrop(),this.treeDrop()},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){r.a.highlightBlock(e)}))},beforeDestroy:function(){this.sortable1&&this.sortable1.destroy(),this.sortable2&&this.sortable2.destroy()},methods:{rowDrop:function(){var e=this;this.$nextTick((function(){var t=e.$refs.xTable1;e.sortable1=s["a"].create(t.$el.querySelector(".body--wrapper>.vxe-table--body tbody"),{handle:".drag-btn",onEnd:function(t){var n=t.newIndex,a=t.oldIndex,o=e.tableData.splice(a,1)[0];e.tableData.splice(n,0,o)}})}))},treeDrop:function(){var e=this;this.$nextTick((function(){var t=e.$refs.xTable2;e.sortable2=s["a"].create(t.$el.querySelector(".body--wrapper>.vxe-table--body tbody"),{handle:".drag-btn",onEnd:function(n){var a=n.item,o=n.oldIndex,l={children:"children"},r=a,s=r.parentNode,i=r.previousElementSibling,c=e.tableTreeData,b=t.getRowNode(r).item,p=d.a.findTree(c,(function(e){return e===b}),l);if(i){var u=t.getRowNode(i).item,v=d.a.findTree(c,(function(e){return e===u}),l);if(d.a.findTree(b[l.children],(function(e){return u===e}),l)){var f=s.children[o];return s.insertBefore(r,f),e.$XModal.message({message:"不允许自己给自己拖动！",status:"error"})}var m=p.items.splice(p.index,1)[0];t.isTreeExpandByRow(u)?u[l.children].splice(0,0,m):v.items.splice(v.index+(p.index<v.index?0:1),0,m)}else{var h=p.items.splice(p.index,1)[0];c.unshift(h)}t.syncData()}})}))}}},b=c,p=(n("b69f"),n("2877")),u=Object(p["a"])(b,a,o,!1,null,null,null);t["default"]=u.exports},b69f:function(e,t,n){"use strict";n("7213")}}]);