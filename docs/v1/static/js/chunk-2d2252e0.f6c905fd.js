(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2252e0"],{e2fc:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("p",{staticClass:"tip"},[e._v("当一个表格高度需要自适应的时候可以通过 "),n("virtual-tree-api-link",{attrs:{prop:"max-height"}}),e._v(" 设置为最大高度")],1),n("vxe-virtual-tree",{ref:"xVTree",attrs:{border:"",resizable:"","row-key":"","export-config":"","max-height":"400",toolbar:{export:!0,zoom:!0},"tree-config":{children:"children"},columns:e.tableColumn,data:e.tableData},scopedSlots:e._u([{key:"buttons",fn:function(){return[n("vxe-button",{on:{click:function(t){return e.$refs.xVTree.setAllTreeExpand(!0)}}},[e._v("展开所有")]),n("vxe-button",{on:{click:function(t){return e.$refs.xVTree.clearTreeExpand()}}},[e._v("关闭所有")])]},proxy:!0}])}),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},r=[],l=(n("d3b7"),n("159b"),n("a630"),n("3ca3"),n("c695")),o=n.n(l),i=n("1487"),c=n.n(i),d={data:function(){return{tableData:[],tableColumn:[{field:"name",title:"app.body.label.name",treeNode:!0},{field:"size",title:"Size"},{field:"type",title:"Type"},{field:"date",title:"Date"}],demoCodes:['\n        <vxe-virtual-tree\n          border\n          resizable\n          row-key\n          export-config\n          ref="xVTree"\n          max-height="400"\n          :toolbar="{export: true, zoom: true}"\n          :tree-config="{children: \'children\'}"\n          :columns="tableColumn"\n          :data="tableData">\n          <template v-slot:buttons>\n            <vxe-button @click="$refs.xVTree.setAllTreeExpand(true)">展开所有</vxe-button>\n            <vxe-button @click="$refs.xVTree.clearTreeExpand()">关闭所有</vxe-button>\n          </template>\n        </vxe-virtual-tree>\n        ',"\n        export default {\n          data () {\n            return {\n              tableData: [],\n              tableColumn: [\n                { field: 'name', title: 'app.body.label.name', treeNode: true },\n                { field: 'size', title: 'Size' },\n                { field: 'type', title: 'Type' },\n                { field: 'date', title: 'Date' }\n              ]\n            }\n          },\n          created () {\n            this.tableData = window.MOCK_TREE_DATA_LIST\n          }\n        }\n        "]}},created:function(){this.tableData=o.a.clone(window.MOCK_TREE_DATA_LIST,!0)},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){c.a.highlightBlock(e)}))}},s=d,u=n("2877"),p=Object(u["a"])(s,a,r,!1,null,null,null);t["default"]=p.exports}}]);