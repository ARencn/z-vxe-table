(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ddb31"],{8300:function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[e._m(0),t("vxe-virtual-tree",{ref:"xVTree",attrs:{resizable:"","show-overflow":"","row-key":"",height:"500",loading:e.loading,data:e.tableData,toolbar:{slots:{buttons:"toolbar_buttons"}},"checkbox-config":{labelField:"name",checkField:"checked",halfField:"indeterminate"},"tree-config":{children:"children"},columns:e.tableColumn},scopedSlots:e._u([{key:"toolbar_buttons",fn:function(){return[t("vxe-button",{on:{click:function(n){return e.loadData(1e3)}}},[e._v("加载1k节点")]),t("vxe-button",{on:{click:function(n){return e.loadData(5e3)}}},[e._v("加载5k节点")]),t("vxe-button",{on:{click:function(n){return e.loadData(1e4)}}},[e._v("加载1w节点")]),t("vxe-button",{on:{click:function(n){return e.loadData(3e4)}}},[e._v("加载3w节点")]),t("vxe-button",{on:{click:function(n){return e.loadData(5e4)}}},[e._v("加载5w节点")]),t("vxe-button",{on:{click:function(n){return e.$refs.xVTree.setAllTreeExpand(!0)}}},[e._v("展开所有")]),t("vxe-button",{on:{click:function(n){return e.$refs.xVTree.setAllTreeExpand(!1)}}},[e._v("收起所有")]),t("vxe-button",{on:{click:e.getSelectionEvent}},[e._v("获取选中")])]},proxy:!0}])}),t("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),t("pre",[e._v("    "),t("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},i=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("p",{staticClass:"tip"},[e._v(" 树形虚拟滚动渲染"),t("span",{staticClass:"orange"},[e._v("（最大可以支撑 1w 列、10w 行）")]),e._v("，具体兼容请查看 "),t("a",{staticClass:"link",attrs:{href:"https://github.com/x-extends/vxe-table-plugin-virtual-tree",target:"_blank"}},[e._v("vxe-table-plugin-virtual-tree")]),e._v(" 插件的 API"),t("br"),t("span",{staticClass:"red"},[e._v("（注：启用纵向虚拟滚的后不支持动态行高）")])])}],o=(t("d3b7"),t("159b"),t("a630"),t("3ca3"),t("99af"),t("1487")),c=t.n(o),l={data:function(){return{loading:!1,tableData:[],tableColumn:[{type:"seq",title:"序号",width:100},{type:"checkbox",title:"Name",treeNode:!0},{field:"id",title:"ID"}],demoCodes:['\n        <vxe-virtual-tree\n          resizable\n          show-overflow\n          row-key\n          ref="xVTree"\n          height="500"\n          :loading="loading"\n          :data="tableData"\n          :toolbar="{slots: {buttons: \'toolbar_buttons\'}}"\n          :checkbox-config="{labelField: \'name\', checkField: \'checked\', halfField: \'indeterminate\'}"\n          :tree-config="{children: \'children\'}"\n          :columns="tableColumn">\n          <template v-slot:toolbar_buttons>\n            <vxe-button @click="loadData(1000)">加载1k节点</vxe-button>\n            <vxe-button @click="loadData(5000)">加载5k节点</vxe-button>\n            <vxe-button @click="loadData(10000)">加载1w节点</vxe-button>\n            <vxe-button @click="loadData(30000)">加载3w节点</vxe-button>\n            <vxe-button @click="loadData(50000)">加载5w节点</vxe-button>\n            <vxe-button @click="$refs.xVTree.setAllTreeExpand(true)">展开所有</vxe-button>\n            <vxe-button @click="$refs.xVTree.setAllTreeExpand(false)">收起所有</vxe-button>\n            <vxe-button @click="getSelectionEvent">获取选中</vxe-button>\n          </template>\n        </vxe-virtual-tree>\n        ',"\n        export default {\n          data () {\n            return {\n              loading: false,\n              tableData: [],\n              tableColumn: [\n                { type: 'seq', title: '序号', width: 100 },\n                { type: 'checkbox', title: 'Name', treeNode: true },\n                { field: 'id', title: 'ID' }\n              ]\n            }\n          },\n          created () {\n            this.loadData(500)\n          },\n          methods: {\n            loadData (size) {\n              this.loading = true\n              this.getTreeList(size).then(data => {\n                const startTime = Date.now()\n                this.tableData = data\n                this.loading = false\n                this.$nextTick(() => {\n                  this.$XModal.message({ message: `渲染 ${size} 行，用时 ${Date.now() - startTime}毫秒`, status: 'info' })\n                })\n              })\n            },\n            getTreeList (size) {\n              return new Promise(resolve => {\n                // 模拟后台生成树结构\n                setTimeout(() => {\n                  const len1 = size / 2\n                  const len2 = 3\n                  const len3 = 2\n                  const len4 = 2\n                  const len5 = 6\n                  const result = []\n                  const startIndex = 10000\n                  let ketIndex = 0\n                  for (let index1 = 0; index1 < len1; index1++) {\n                    if (ketIndex >= size) {\n                      break\n                    }\n                    const children1 = []\n                    for (let index2 = 0; index2 < len2; index2++) {\n                      if (ketIndex >= size) {\n                        break\n                      }\n                      const children2 = []\n                      for (let index3 = 0; index3 < len3; index3++) {\n                        if (ketIndex >= size) {\n                          break\n                        }\n                        const children3 = []\n                        for (let index4 = 0; index4 < len4; index4++) {\n                          if (ketIndex >= size) {\n                            break\n                          }\n                          const children4 = []\n                          for (let index5 = 0; index5 < len5; index5++) {\n                            if (ketIndex >= size) {\n                              break\n                            }\n                            const item5 = {\n                              id: startIndex + ketIndex++,\n                              name: `name${index1}_${index2}_${index3}_${index4}_${index5}`,\n                              checked: false,\n                              indeterminate: false,\n                              children: []\n                            }\n                            children4.push(item5)\n                          }\n                          const item4 = {\n                            id: startIndex + ketIndex++,\n                            name: `name${index1}_${index2}_${index3}_${index4}`,\n                            checked: false,\n                            indeterminate: false,\n                            children: children4\n                          }\n                          children3.push(item4)\n                        }\n                        const item3 = {\n                          id: startIndex + ketIndex++,\n                          name: `name${index1}_${index2}_${index3}`,\n                          checked: false,\n                          indeterminate: false,\n                          children: children3\n                        }\n                        children2.push(item3)\n                      }\n                      const item2 = {\n                        id: startIndex + ketIndex++,\n                        name: `name${index1}_${index2}`,\n                        checked: false,\n                        indeterminate: false,\n                        children: children2\n                      }\n                      children1.push(item2)\n                    }\n                    const item1 = {\n                      id: startIndex + ketIndex++,\n                      name: `name${index1}`,\n                      checked: false,\n                      indeterminate: false,\n                      children: children1\n                    }\n                    result.push(item1)\n                  }\n                  resolve(result)\n                }, 300)\n              })\n            },\n            getSelectionEvent () {\n              const selectRecords = this.$refs.xVTree.getCheckboxRecords()\n              this.$XModal.alert(selectRecords.length)\n            }\n          }\n        }\n        "]}},created:function(){this.loadData(500)},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){c.a.highlightBlock(e)}))},methods:{loadData:function(e){var n=this;this.loading=!0,this.getTreeList(e).then((function(t){var a=Date.now();n.tableData=t,n.loading=!1,n.$nextTick((function(){n.$XModal.message({message:"渲染 ".concat(e," 行，用时 ").concat(Date.now()-a,"毫秒"),status:"info"})}))}))},getTreeList:function(e){return new Promise((function(n){setTimeout((function(){for(var t=e/2,a=3,i=2,o=2,c=6,l=[],r=1e4,d=0,s=0;s<t;s++){if(d>=e)break;for(var u=[],x=0;x<a;x++){if(d>=e)break;for(var h=[],f=0;f<i;f++){if(d>=e)break;for(var v=[],b=0;b<o;b++){if(d>=e)break;for(var m=[],k=0;k<c;k++){if(d>=e)break;var _={id:r+d++,name:"name".concat(s,"_").concat(x,"_").concat(f,"_").concat(b,"_").concat(k),checked:!1,indeterminate:!1,children:[]};m.push(_)}var p={id:r+d++,name:"name".concat(s,"_").concat(x,"_").concat(f,"_").concat(b),checked:!1,indeterminate:!1,children:m};v.push(p)}var g={id:r+d++,name:"name".concat(s,"_").concat(x,"_").concat(f),checked:!1,indeterminate:!1,children:v};h.push(g)}var $={id:r+d++,name:"name".concat(s,"_").concat(x),checked:!1,indeterminate:!1,children:h};u.push($)}var w={id:r+d++,name:"name".concat(s),checked:!1,indeterminate:!1,children:u};l.push(w)}n(l)}),300)}))},getSelectionEvent:function(){var e=this.$refs.xVTree.getCheckboxRecords();this.$XModal.alert(e.length)}}},r=l,d=t("2877"),s=Object(d["a"])(r,a,i,!1,null,null,null);n["default"]=s.exports}}]);