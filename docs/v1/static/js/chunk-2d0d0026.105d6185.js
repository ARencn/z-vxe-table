(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d0026"],{"65c4":function(e,n,t){"use strict";t.r(n);var d=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("p",{staticClass:"tip"},[e._v("懒加载树表格、数据代理、右键菜单")]),t("vxe-grid",{ref:"xGrid",attrs:{border:"","show-overflow":"",resizable:"","keep-source":"","proxy-config":e.tableProxy,columns:e.tableColumn,toolbar:{slots:{buttons:"toolbar_buttons"}},"context-menu":{body:{options:e.bodyMenus},visibleMethod:e.visibleMethod},"edit-config":{trigger:"click",mode:"row",showStatus:!0},"tree-config":{lazy:!0,children:"children",hasChild:"hasChild",loadMethod:e.loadChildrenMethod}},on:{"context-menu-click":e.contextMenuClickEvent},scopedSlots:e._u([{key:"toolbar_buttons",fn:function(){return[t("vxe-button",{on:{click:e.getUpdateEvent}},[e._v("获取修改")])]},proxy:!0}])}),t("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),t("pre",[e._v("    "),t("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),t("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},o=[],a=(t("d3b7"),t("159b"),t("a630"),t("3ca3"),t("caad"),t("c695")),r=t.n(a),i=t("628a"),l=t.n(i),s=t("1487"),c=t.n(s),u={data:function(){return{tableProxy:{ajax:{query:function(){return l.a.get("/api/file/node/list",{parentId:null})}}},bodyMenus:[[{code:"clearLoaded",name:"清除加载状态",disabled:!1},{code:"reloadNodes",name:"重新加载子节点",disabled:!1},{code:"expand",name:"展开节点",disabled:!1},{code:"contract",name:"收起节点",disabled:!1}]],tableColumn:[{field:"id",title:"ID",width:180,treeNode:!0},{field:"name",title:"名称",editRender:{name:"input"}},{field:"size",title:"大小",editRender:{name:"input"}},{field:"createTime",title:"创建时间",formatter:this.formatterDate},{field:"updateTime",title:"修改时间",formatter:this.formatterDate}],demoCodes:['\n        <vxe-grid\n          border\n          show-overflow\n          resizable\n          keep-source\n          ref="xGrid"\n          :proxy-config="tableProxy"\n          :columns="tableColumn"\n          :toolbar="{slots: {buttons: \'toolbar_buttons\'}}"\n          :context-menu="{body: {options: bodyMenus}, visibleMethod}"\n          :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n          :tree-config="{lazy: true, children: \'children\', hasChild: \'hasChild\', loadMethod: loadChildrenMethod}"\n          @context-menu-click="contextMenuClickEvent">\n          <template v-slot:toolbar_buttons>\n            <vxe-button @click="getUpdateEvent">获取修改</vxe-button>\n          </template>\n        </vxe-grid>\n        ',"\n        export default {\n          data () {\n            return {\n              tableProxy: {\n                ajax: {\n                  // 查询根节点\n                  query: () => XEAjax.get('/api/file/node/list', { parentId: null })\n                }\n              },\n              bodyMenus: [\n                [\n                  {\n                    code: 'clearLoaded',\n                    name: '清除加载状态',\n                    disabled: false\n                  },\n                  {\n                    code: 'reloadNodes',\n                    name: '重新加载子节点',\n                    disabled: false\n                  },\n                  {\n                    code: 'expand',\n                    name: '展开节点',\n                    disabled: false\n                  },\n                  {\n                    code: 'contract',\n                    name: '收起节点',\n                    disabled: false\n                  }\n                ]\n              ],\n              tableColumn: [\n                { field: 'id', title: 'ID', width: 180, treeNode: true },\n                { field: 'name', title: '名称', editRender: { name: 'input' } },\n                { field: 'size', title: '大小', editRender: { name: 'input' } },\n                { field: 'createTime', title: '创建时间', formatter: this.formatterDate },\n                { field: 'updateTime', title: '修改时间', formatter: this.formatterDate }\n              ]\n            }\n          },\n          methods: {\n            formatterDate ({ cellValue }) {\n              return XEUtils.toDateString(cellValue, 'yyyy-MM-dd HH:mm:ss')\n            },\n            loadChildrenMethod ({ row }) {\n              // 异步加载子节点\n              return XEAjax.get('/api/file/node/list', { parentId: row.id })\n            },\n            getUpdateEvent () {\n              let updateRecords = this.$refs.xGrid.getUpdateRecords()\n              this.$XModal.alert(updateRecords.length)\n            },\n            visibleMethod  ({ row, type }) {\n              let xGrid = this.$refs.xGrid\n              if (type === 'body') {\n                this.bodyMenus.forEach(list => {\n                  list.forEach(item => {\n                    if (['clearLoaded', 'reloadNodes'].includes(item.code)) {\n                      item.disabled = !row.hasChild || !xGrid.isTreeExpandLoaded(row)\n                    } else if (['expand', 'contract'].includes(item.code)) {\n                      if (row.hasChild) {\n                        let isExpand = xGrid.isTreeExpandByRow(row)\n                        item.disabled = ['expand'].includes(item.code) ? isExpand : !isExpand\n                      } else {\n                        item.disabled = true\n                      }\n                    }\n                  })\n                })\n              }\n              return true\n            },\n            contextMenuClickEvent ({ menu, row, column }) {\n              let xGrid = this.$refs.xGrid\n              switch (menu.code) {\n                case 'clearLoaded':\n                  xGrid.clearTreeExpandLoaded(row)\n                  break\n                case 'reloadNodes':\n                  xGrid.reloadTreeChilds(row)\n                  break\n                case 'expand':\n                  xGrid.setTreeExpand(row, true)\n                  break\n                case 'contract':\n                  xGrid.setTreeExpand(row, false)\n                  break\n              }\n            }\n          }\n        }\n        "]}},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){c.a.highlightBlock(e)}))},methods:{formatterDate:function(e){var n=e.cellValue;return r.a.toDateString(n,"yyyy-MM-dd HH:mm:ss")},loadChildrenMethod:function(e){var n=e.row;return l.a.get("/api/file/node/list",{parentId:n.id})},getUpdateEvent:function(){var e=this.$refs.xGrid.getUpdateRecords();this.$XModal.alert(e.length)},visibleMethod:function(e){var n=e.row,t=e.type,d=this.$refs.xGrid;return"body"===t&&this.bodyMenus.forEach((function(e){e.forEach((function(e){if(["clearLoaded","reloadNodes"].includes(e.code))e.disabled=!n.hasChild||!d.isTreeExpandLoaded(n);else if(["expand","contract"].includes(e.code))if(n.hasChild){var t=d.isTreeExpandByRow(n);e.disabled=["expand"].includes(e.code)?t:!t}else e.disabled=!0}))})),!0},contextMenuClickEvent:function(e){var n=e.menu,t=e.row,d=this.$refs.xGrid;switch(n.code){case"clearLoaded":d.clearTreeExpandLoaded(t);break;case"reloadNodes":d.reloadTreeChilds(t);break;case"expand":d.setTreeExpand(t,!0);break;case"contract":d.setTreeExpand(t,!1);break}}}},f=u,h=t("2877"),b=Object(h["a"])(f,d,o,!1,null,null,null);n["default"]=b.exports}}]);