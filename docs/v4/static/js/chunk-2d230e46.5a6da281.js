(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d230e46"],{ede6:function(e,n,t){"use strict";t.r(n);var r=t("7a23"),a={class:"tip"},o=Object(r["createTextVNode"])(" 通过表尾来实现合计功能"),s=Object(r["createElementVNode"])("br",null,null,-1),i={class:"red"},d=Object(r["createTextVNode"])("（注："),c=Object(r["createTextVNode"])(" 表尾的数据都是自行生成的，该示例仅供参考）"),l={class:"demo-code"},m=Object(r["createTextVNode"])("      "),u=Object(r["createTextVNode"])("\r\n      "),p=Object(r["createTextVNode"])("\r\n    ");function b(e,n,t,b,g,h){var f=Object(r["resolveComponent"])("table-api-link"),x=Object(r["resolveComponent"])("vxe-grid"),T=Object(r["resolveComponent"])("pre-code");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",null,[Object(r["createElementVNode"])("p",a,[o,s,Object(r["createElementVNode"])("span",i,[d,Object(r["createVNode"])(f,{prop:"footer-method"}),c])]),Object(r["createVNode"])(x,Object(r["normalizeProps"])(Object(r["guardReactiveProps"])(e.gridOptions)),null,16),Object(r["createElementVNode"])("p",l,Object(r["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(r["createElementVNode"])("pre",null,[m,Object(r["createVNode"])(T,{class:"xml"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),u,Object(r["createVNode"])(T,{class:"typescript"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),p])])}t("d3b7"),t("159b"),t("a9e3"),t("d81d"),t("caad");var g=Object(r["defineComponent"])({setup:function(){var e=function(e,n){var t=0;return e.forEach((function(e){t+=Number(e[n])})),t/e.length},n=function(e,n){var t=0;return e.forEach((function(e){t+=Number(e[n])})),t},t=Object(r["reactive"])({border:!0,stripe:!0,resizable:!0,showFooter:!0,height:400,exportConfig:{},toolbarConfig:{export:!0,zoom:!0},columns:[{type:"seq",width:60},{field:"name",title:"app.body.label.name"},{field:"sex",title:"app.body.label.sex"},{field:"age",title:"Age",sortable:!0},{field:"rate",title:"Rate"}],data:[{id:10001,name:"Test1",nickname:"T1",role:"Develop",sex:"Man",age:28,rate:6,address:"Shenzhen"},{id:10002,name:"Test2",nickname:"T2",role:"Test",sex:"Women",age:22,rate:5,address:"Guangzhou"},{id:10003,name:"Test3",nickname:"T3",role:"PM",sex:"Man",age:32,rate:4,address:"Shanghai"},{id:10004,name:"Test4",nickname:"T4",role:"Designer",sex:"Women",age:23,rate:1,address:"Shenzhen"},{id:10005,name:"Test5",nickname:"T5",role:"Develop",sex:"Women",age:30,rate:5,address:"Shanghai"},{id:10006,name:"Test6",nickname:"T6",role:"Designer",sex:"Women",age:21,rate:2,address:"Shenzhen"},{id:10007,name:"Test7",nickname:"T7",role:"Test",sex:"Man",age:29,rate:7,address:"Shenzhen"},{id:10008,name:"Test8",nickname:"T8",role:"Develop",sex:"Man",age:35,rate:5,address:"Shenzhen"}],footerMethod:function(t){var r=t.columns,a=t.data;return[r.map((function(e,t){return 0===t?"和值":["age","rate"].includes(e.property)?n(a,e.property):""})),r.map((function(n,t){return 0===t?"平均":["age","rate"].includes(n.property)?e(a,n.property):""}))]}});return{gridOptions:t,demoCodes:['\n        <vxe-grid v-bind="gridOptions"></vxe-grid>\n        ',"\n        import { defineComponent, reactive } from 'vue'\n        import { VxeGridProps } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const meanNum = (list: any[], field: string) => {\n              let count = 0\n              list.forEach(item => {\n                count += Number(item[field])\n              })\n              return count / list.length\n            }\n\n            const sumNum = (list: any[], field: string) => {\n              let count = 0\n              list.forEach(item => {\n                count += Number(item[field])\n              })\n              return count\n            }\n\n            const gridOptions = reactive<VxeGridProps>({\n              border: true,\n              stripe: true,\n              resizable: true,\n              showFooter: true,\n              height: 400,\n              exportConfig: {},\n              toolbarConfig: {\n                export: true,\n                zoom: true\n              },\n              columns: [\n                { type: 'seq', width: 60 },\n                { field: 'name', title: 'app.body.label.name' },\n                { field: 'sex', title: 'app.body.label.sex' },\n                { field: 'age', title: 'Age', sortable: true },\n                { field: 'rate', title: 'Rate' }\n              ],\n              data: [\n                { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: 'Man', age: 28, rate: 6, address: 'Shenzhen' },\n                { id: 10002, name: 'Test2', nickname: 'T2', role: 'Test', sex: 'Women', age: 22, rate: 5, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', nickname: 'T3', role: 'PM', sex: 'Man', age: 32, rate: 4, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: 'Women', age: 23, rate: 1, address: 'Shenzhen' },\n                { id: 10005, name: 'Test5', nickname: 'T5', role: 'Develop', sex: 'Women', age: 30, rate: 5, address: 'Shanghai' },\n                { id: 10006, name: 'Test6', nickname: 'T6', role: 'Designer', sex: 'Women', age: 21, rate: 2, address: 'Shenzhen' },\n                { id: 10007, name: 'Test7', nickname: 'T7', role: 'Test', sex: 'Man', age: 29, rate: 7, address: 'Shenzhen' },\n                { id: 10008, name: 'Test8', nickname: 'T8', role: 'Develop', sex: 'Man', age: 35, rate: 5, address: 'Shenzhen' }\n              ],\n              footerMethod ({ columns, data }) {\n                return [\n                  columns.map((column, columnIndex) => {\n                    if (columnIndex === 0) {\n                      return '和值'\n                    }\n                    if (['age', 'rate'].includes(column.property)) {\n                      return sumNum(data, column.property)\n                    }\n                    return ''\n                  }),\n                  columns.map((column, columnIndex) => {\n                    if (columnIndex === 0) {\n                      return '平均'\n                    }\n                    if (['age', 'rate'].includes(column.property)) {\n                      return meanNum(data, column.property)\n                    }\n                    return ''\n                  })\n                ]\n              }\n            })\n\n            return {\n              gridOptions\n              ]\n            }\n          }\n        })\n        "]}}}),h=t("6b0d"),f=t.n(h);const x=f()(g,[["render",b]]);n["default"]=x}}]);