(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c550d"],{"3f26":function(e,n,t){"use strict";t.r(n);var a=t("7a23"),s=Object(a["createElementVNode"])("p",{class:"tip"},"基本写法（js）：",-1),r={class:"demo-code"},d=Object(a["createTextVNode"])("      "),o=Object(a["createTextVNode"])("\r\n      "),l=Object(a["createTextVNode"])("\r\n    "),i=Object(a["createElementVNode"])("p",{class:"tip"},"基本写法（ts）：",-1),c={class:"demo-code"},m=Object(a["createTextVNode"])("      "),u=Object(a["createTextVNode"])("\r\n      "),x=Object(a["createTextVNode"])("\r\n    "),p=Object(a["createElementVNode"])("p",{class:"tip"},"setup 写法（js）：",-1),b={class:"demo-code"},g=Object(a["createTextVNode"])("      "),O=Object(a["createTextVNode"])("\r\n      "),f=Object(a["createTextVNode"])("\r\n    "),v=Object(a["createElementVNode"])("p",{class:"tip"},"setup 写法（ts）：",-1),h={class:"demo-code"},j=Object(a["createTextVNode"])("      "),T=Object(a["createTextVNode"])("\r\n      "),V=Object(a["createTextVNode"])("\r\n    "),w=Object(a["createElementVNode"])("p",{class:"tip"},"JSX 写法：",-1),N={class:"demo-code"},D=Object(a["createTextVNode"])("      "),S=Object(a["createTextVNode"])("\r\n    ");function C(e,n,t,C,y,M){var W=Object(a["resolveComponent"])("pre-code");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",null,[Object(a["createElementVNode"])("h2",null,Object(a["toDisplayString"])(e.$t("app.aside.nav.quick")),1),s,Object(a["createElementVNode"])("p",r,Object(a["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(a["createElementVNode"])("pre",null,[d,Object(a["createVNode"])(W,{class:"html"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),o,Object(a["createVNode"])(W,{class:"javascript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),l]),i,Object(a["createElementVNode"])("p",c,Object(a["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(a["createElementVNode"])("pre",null,[m,Object(a["createVNode"])(W,{class:"html"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[2]),1)]})),_:1}),u,Object(a["createVNode"])(W,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[3]),1)]})),_:1}),x]),p,Object(a["createElementVNode"])("p",b,Object(a["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(a["createElementVNode"])("pre",null,[g,Object(a["createVNode"])(W,{class:"html"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[4]),1)]})),_:1}),O,Object(a["createVNode"])(W,{class:"javascript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[5]),1)]})),_:1}),f]),v,Object(a["createElementVNode"])("p",h,Object(a["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(a["createElementVNode"])("pre",null,[j,Object(a["createVNode"])(W,{class:"html"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[6]),1)]})),_:1}),T,Object(a["createVNode"])(W,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[7]),1)]})),_:1}),V]),w,Object(a["createElementVNode"])("p",N,Object(a["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(a["createElementVNode"])("pre",null,[D,Object(a["createVNode"])(W,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[8]),1)]})),_:1}),S])])}var y=Object(a["defineComponent"])({setup:function(){return{demoCodes:['\n        <vxe-table border :data="tableData">\n          <vxe-column type="seq" width="60"></vxe-column>\n          <vxe-column field="name" title="Name">\n            <template #default="{ row }">\n              <span>自定义插槽模板 {{ row.name }}</span>\n            </template>\n          </vxe-column>\n          <vxe-column field="sex" title="Sex"></vxe-column>\n          <vxe-column field="age" title="Age"></vxe-column>\n        </vxe-table>\n\n        <vxe-grid v-bind="gridOptions">\n          <template #name="{ row }">\n            <span>自定义插槽模板 {{ row.name }}</span>\n          </template>\n        </vxe-grid>\n        ',"\n        export default {\n          data () {\n            return {\n              tableData: [\n                { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n                { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n              ],\n              gridOptions: {\n                border: true,\n                columns: [\n                  { type: 'seq', width: 50 },\n                  { field: 'name', title: 'Name', slots: { default: 'name' } },\n                  { field: 'sex', title: 'Sex', showHeaderOverflow: true },\n                  { field: 'address', title: 'Address', showOverflow: true }\n                ],\n                data: [\n                  { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n                  { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n                  { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n                  { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n                ]\n              }\n            }\n          }\n        }\n        ",'\n        <vxe-table border :data="tableData">\n          <vxe-column type="seq" width="60"></vxe-column>\n          <vxe-column field="name" title="Name">\n            <template #default="{ row }">\n              <span>自定义插槽模板 {{ row.name }}</span>\n            </template>\n          </vxe-column>\n          <vxe-column field="sex" title="Sex"></vxe-column>\n          <vxe-column field="age" title="Age"></vxe-column>\n        </vxe-table>\n\n        <vxe-grid v-bind="gridOptions">\n          <template #name="{ row }">\n            <span>自定义插槽模板 {{ row.name }}</span>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent } from 'vue'\n\n        export default defineComponent({\n          data () {\n            return {\n              tableData: [\n                { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n                { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n              ],\n              gridOptions: {\n                border: true,\n                columns: [\n                  { type: 'seq', width: 50 },\n                  { field: 'name', title: 'Name', slots: { default: 'name' } },\n                  { field: 'sex', title: 'Sex', showHeaderOverflow: true },\n                  { field: 'address', title: 'Address', showOverflow: true }\n                ],\n                data: [\n                  { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n                  { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n                  { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n                  { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n                ]\n              }\n            }\n          }\n        })\n        ",'\n        <vxe-table border :data="tableData">\n          <vxe-column type="seq" width="60"></vxe-column>\n          <vxe-column field="name" title="Name">\n            <template #default="{ row }">\n              <span>自定义插槽模板 {{ row.name }}</span>\n            </template>\n          </vxe-column>\n          <vxe-column field="sex" title="Sex"></vxe-column>\n          <vxe-column field="age" title="Age"></vxe-column>\n        </vxe-table>\n\n        <vxe-grid v-bind="gridOptions">\n          <template #name="{ row }">\n            <span>自定义插槽模板 {{ row.name }}</span>\n          </template>\n        </vxe-grid>\n        ',"\n        import { ref, reactive } from 'vue'\n\n        export default {\n          setup () {\n            const tableData = ref([\n              { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n              { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n              { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n              { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n            ])\n\n            const gridOptions = reactive({\n              border: true,\n              columns: [\n                { type: 'seq', width: 50 },\n                { field: 'name', title: 'Name', slots: { default: 'name' } },\n                { field: 'sex', title: 'Sex', showHeaderOverflow: true },\n                { field: 'address', title: 'Address', showOverflow: true }\n              ],\n              data: [\n                { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n                { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n              ]\n            })\n\n            return {\n              tableData,\n              gridOptions\n            }\n          }\n        }\n        ",'\n        <vxe-table border :data="tableData">\n          <vxe-column type="seq" width="60"></vxe-column>\n          <vxe-column field="name" title="Name">\n            <template #default="{ row }">\n              <span>自定义插槽模板 {{ row.name }}</span>\n            </template>\n          </vxe-column>\n          <vxe-column field="sex" title="Sex"></vxe-column>\n          <vxe-column field="age" title="Age"></vxe-column>\n        </vxe-table>\n\n        <vxe-grid v-bind="gridOptions">\n          <template #name="{ row }">\n            <span>自定义插槽模板 {{ row.name }}</span>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent, ref, reactive } from 'vue'\n        import { VxeGridProps } from 'vxe-table'\n\n        interface UserVO {\n          id: number;\n          name: string;\n          role: string;\n          sex: string;\n          age: number;\n          address: string;\n        }\n\n        export default defineComponent({\n          setup () {\n            const tableData = ref<UserVO[]>([\n              { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n              { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n              { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n              { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n            ])\n\n            const gridOptions = reactive<VxeGridProps<UserVO>>({\n              border: true,\n              columns: [\n                { type: 'seq', width: 50 },\n                { field: 'name', title: 'Name', slots: { default: 'name' } },\n                { field: 'sex', title: 'Sex', showHeaderOverflow: true },\n                { field: 'address', title: 'Address', showOverflow: true }\n              ],\n              data: [\n                { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n                { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n              ]\n            })\n\n            return {\n              tableData,\n              gridOptions\n            }\n          }\n        })\n        ","\n        import { defineComponent, ref, reactive } from 'vue'\n        import { VxeTable, VxeColumn, VxeGrid, VxeGridProps } from 'vxe-table'\n\n        interface UserVO {\n          id: number;\n          name: string;\n          role: string;\n          sex: string;\n          age: number;\n          address: string;\n        }\n\n        export default defineComponent({\n          setup () {\n            const tableData = ref<UserVO>([\n              { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n              { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n              { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n              { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n            ])\n\n            const gridOptions = reactive<VxeGridProps<UserVO>>({\n              border: true,\n              columns: [\n                { type: 'seq', width: 50 },\n                {\n                  field: 'name',\n                  title: 'Name',\n                  slots: {\n                    default ({ row }: { row: UserVO }) {\n                      return [\n                        <span>自定义插槽模板 { row.name }</span>\n                      ]\n                    }\n                  }\n                },\n                { field: 'sex', title: 'Sex', showHeaderOverflow: true },\n                { field: 'address', title: 'Address', showOverflow: true }\n              ],\n              data: [\n                { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },\n                { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }\n              ]\n            })\n            \n            return () => {\n              return (\n                <div>\n                  <VxeTable border data={tableData.value}>\n                    <VxeColumn type=\"seq\" width=\"60\"></VxeColumn>\n                    <VxeColumn field=\"name\" title=\"Name\">\n                      {{\n                        default ({ row }: { row: UserVO }) {\n                          return [\n                            <span>自定义插槽模板 { row.name }</span>\n                          ]\n                        }\n                      }}\n                    </VxeColumn>\n                    <VxeColumn field=\"sex\" title=\"Sex\"></VxeColumn>\n                    <VxeColumn field=\"age\" title=\"Age\"></VxeColumn>\n                  </VxeTable>\n\n                  <VxeGrid {...gridOptions}></VxeGrid>\n                </div>\n              )\n            }\n          }\n        })\n        "]}}}),M=t("6b0d"),W=t.n(M);const E=W()(y,[["render",C]]);n["default"]=E}}]);