(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d225681"],{e3eb:function(t,e,r){"use strict";r.r(e);var n=r("7a23"),o={class:"tip"},a=Object(n["createTextVNode"])(" 虚拟滚动渲染，左右固定列"),c=Object(n["createElementVNode"])("br",null,null,-1),i=Object(n["createTextVNode"])(" 大数据不建议使用双向绑定的 "),l=Object(n["createTextVNode"])(" 属性，建议使用 "),d=Object(n["createTextVNode"])("/"),u=Object(n["createTextVNode"])(" 函数"),_=Object(n["createElementVNode"])("br",null,null,-1),w=Object(n["createTextVNode"])(" 对于多选 type="),s=Object(n["createTextVNode"])(" 当数据量海量时应该绑定 "),b=Object(n["createTextVNode"])(" 属性渲染速度更快"),f=Object(n["createElementVNode"])("br",null,null,-1),O=Object(n["createElementVNode"])("span",{class:"red"},"(注：如果要启用横向虚拟滚动，不支持分组表头)",-1),x=Object(n["createTextVNode"])("50列20条"),m=Object(n["createTextVNode"])("100列50条"),j=Object(n["createTextVNode"])("200列100条"),C=Object(n["createTextVNode"])("1k列5k条"),h=Object(n["createTextVNode"])("5k列1w条"),p=Object(n["createTextVNode"])("1w列10w条"),v=Object(n["createTextVNode"])("5w列20w条"),g=Object(n["createTextVNode"])("10w列5w条"),k=Object(n["createTextVNode"])("所有选中"),N=Object(n["createTextVNode"])("清除选中"),V=Object(n["createTextVNode"])("获取选中"),T=Object(n["createTextVNode"])("      "),S=Object(n["createTextVNode"])("\r\n        | Arrow Up ↑ | 匀速向上滚动数据 |\r\n        | Arrow Down ↓ | 匀速向下滚动数据 |\r\n        | Arrow Left ← | 匀速向左滚动数据 |\r\n        | Arrow Right → | 匀速向右滚动数据 |\r\n        | Page Up | 向上翻页滚动 |\r\n        | Page Down | 向下翻页滚动 |\r\n        | Spacebar | 翻页滚动 |\r\n        | Home | 滚动到顶部 |\r\n        | End | 滚动到底部 |\r\n      "),D=Object(n["createTextVNode"])("\r\n    "),A={class:"demo-code"},z=Object(n["createTextVNode"])("      "),y=Object(n["createTextVNode"])("\r\n      "),E=Object(n["createTextVNode"])("\r\n    ");function G(t,e,r,G,P,$){var R=Object(n["resolveComponent"])("table-api-link"),L=Object(n["resolveComponent"])("table-column-api-link"),J=Object(n["resolveComponent"])("vxe-button"),F=Object(n["resolveComponent"])("vxe-grid"),H=Object(n["resolveComponent"])("pre-code");return Object(n["openBlock"])(),Object(n["createElementBlock"])("div",null,[Object(n["createElementVNode"])("p",o,[a,c,i,Object(n["createVNode"])(R,{name:"data"}),l,Object(n["createVNode"])(R,{prop:"loadData"}),d,Object(n["createVNode"])(R,{prop:"loadColumn"}),u,_,w,Object(n["createVNode"])(L,{prop:"checkbox"}),s,Object(n["createVNode"])(R,{prop:"checkField"}),b,f,O]),Object(n["createVNode"])(F,Object(n["mergeProps"])({ref:"xGrid"},t.gridOptions),{toolbar_buttons:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(J,{onClick:e[0]||(e[0]=function(e){return t.loadColumnAndData(50,20)})},{default:Object(n["withCtx"])((function(){return[x]})),_:1}),Object(n["createVNode"])(J,{onClick:e[1]||(e[1]=function(e){return t.loadColumnAndData(100,50)})},{default:Object(n["withCtx"])((function(){return[m]})),_:1}),Object(n["createVNode"])(J,{onClick:e[2]||(e[2]=function(e){return t.loadColumnAndData(200,100)})},{default:Object(n["withCtx"])((function(){return[j]})),_:1}),Object(n["createVNode"])(J,{onClick:e[3]||(e[3]=function(e){return t.loadColumnAndData(1e3,5e3)})},{default:Object(n["withCtx"])((function(){return[C]})),_:1}),Object(n["createVNode"])(J,{onClick:e[4]||(e[4]=function(e){return t.loadColumnAndData(5e3,1e4)})},{default:Object(n["withCtx"])((function(){return[h]})),_:1}),Object(n["createVNode"])(J,{onClick:e[5]||(e[5]=function(e){return t.loadColumnAndData(1e4,1e5)})},{default:Object(n["withCtx"])((function(){return[p]})),_:1}),Object(n["createVNode"])(J,{onClick:e[6]||(e[6]=function(e){return t.loadColumnAndData(5e4,2e5)})},{default:Object(n["withCtx"])((function(){return[v]})),_:1}),Object(n["createVNode"])(J,{onClick:e[7]||(e[7]=function(e){return t.loadColumnAndData(1e5,5e4)})},{default:Object(n["withCtx"])((function(){return[g]})),_:1}),Object(n["createVNode"])(J,{onClick:e[8]||(e[8]=function(e){return t.$refs.xGrid.setAllCheckboxRow(!0)})},{default:Object(n["withCtx"])((function(){return[k]})),_:1}),Object(n["createVNode"])(J,{onClick:e[9]||(e[9]=function(e){return t.$refs.xGrid.clearCheckboxRow()})},{default:Object(n["withCtx"])((function(){return[N]})),_:1}),Object(n["createVNode"])(J,{onClick:t.getSelectEvent},{default:Object(n["withCtx"])((function(){return[V]})),_:1},8,["onClick"])]})),_:1},16),Object(n["createElementVNode"])("pre",null,[T,Object(n["createVNode"])(H,null,{default:Object(n["withCtx"])((function(){return[S]})),_:1}),D]),Object(n["createElementVNode"])("p",A,Object(n["toDisplayString"])(t.$t("app.body.button.showCode")),1),Object(n["createElementVNode"])("pre",null,[z,Object(n["createVNode"])(H,{class:"xml"},{default:Object(n["withCtx"])((function(){return[Object(n["createTextVNode"])(Object(n["toDisplayString"])(t.demoCodes[0]),1)]})),_:1}),y,Object(n["createVNode"])(H,{class:"typescript"},{default:Object(n["withCtx"])((function(){return[Object(n["createTextVNode"])(Object(n["toDisplayString"])(t.demoCodes[1]),1)]})),_:1}),E])])}r("d3b7"),r("e9c4"),r("fb6a"),r("3ca3"),r("ddb0"),r("99af");var P=r("55db"),$=[],R=[],L=Object(n["defineComponent"])({setup:function(){var t=Object(n["reactive"])({border:!0,showOverflow:!0,rowKey:!0,showHeaderOverflow:!0,highlightHoverRow:!0,highlightCurrentRow:!0,height:600,resizable:!0,loading:!1,toolbarConfig:{slots:{buttons:"toolbar_buttons"}},checkboxConfig:{checkField:"checked",labelField:"nickname"}}),e=Object(n["ref"])({}),r=function(t){return new Promise((function(e){setTimeout((function(){var r=$.length;if(r<t)for(var n=r;n<t;n++)$.push({field:"attr"+n,title:0===n?"":"Attr"+n,width:0===n?60:140,type:0===n?"checkbox":null,fixed:n<1?"left":null});var o=JSON.parse(JSON.stringify($.slice(0,t)));e(o)}),100)}))},o=function(t){return new Promise((function(e){setTimeout((function(){var r=R.length;if(r<t)for(var n=r;n<t;n++)R.push({checked:!1,attr0:"attr0_row_"+n,attr1:"attr1_row_"+n,attr2:"attr2_row_"+n,attr3:"attr3_row_"+n,attr4:"attr3_row_"+n,attr5:"attr3_row_"+n,attr10:"attr10_row_"+n,attr11:"attr11_row_"+n,attr12:"attr12_row_"+n,attr13:"attr12_row_"+n,attr14:"attr12_row_"+n,attr50:"attr50_row_"+n,attr51:"attr51_row_"+n,attr52:"attr52_row_"+n,attr53:"attr53_row_"+n,attr54:"attr54_row_"+n,attr100:"attr100_row_"+n,attr101:"attr101_row_"+n,attr102:"attr102_row_"+n,attr103:"attr103_row_"+n,attr105:"attr105_row_"+n,attr104:"attr104_row_"+n,attr106:"attr106_row_"+n,attr107:"attr107_row_"+n,attr400:"attr100_row_"+n,attr401:"attr401_row_"+n,attr402:"attr402_row_"+n,attr403:"attr403_row_"+n,attr404:"attr404_row_"+n,attr405:"attr405_row_"+n,attr406:"attr405_row_"+n,attr407:"attr405_row_"+n,attr1000:"attr100_row_"+n,attr1001:"attr1001_row_"+n,attr1002:"attr1002_row_"+n,attr1003:"attr1003_row_"+n,attr1004:"attr1004_row_"+n,attr1005:"attr1005_row_"+n,attr1006:"attr1005_row_"+n,attr1007:"attr1005_row_"+n,attr10005:"attr10005_row_"+n,attr10006:"attr10005_row_"+n,attr10007:"attr10005_row_"+n,attr150005:"attr100005_row_"+n,attr150006:"attr100005_row_"+n,attr150007:"attr100005_row_"+n});var o=JSON.parse(JSON.stringify(R.slice(0,t)));e(o)}),100)}))},a=function(n,a){t.loading=!0,Promise.all([r(n),o(a)]).then((function(r){var o=r[0],c=r[1],i=Date.now(),l=e.value;l?Promise.all([l.reloadColumn(o),l.reloadData(c)]).then((function(){P["a"].modal.message({content:"渲染 ".concat(n," 列 ").concat(a," 行，用时 ").concat(Date.now()-i,"毫秒"),status:"info"}),t.loading=!1})):t.loading=!1}))},c=function(){var t=e.value,r=t.getCheckboxRecords();P["a"].modal.alert("".concat(r.length))};return Object(n["nextTick"])((function(){a(20,10)})),{xGrid:e,gridOptions:t,loadColumnAndData:a,getSelectEvent:c,demoCodes:['\n        <vxe-grid ref="xGrid" v-bind="gridOptions">\n          <template #toolbar_buttons>\n            <vxe-button @click="loadColumnAndData(50, 20)">50列20条</vxe-button>\n            <vxe-button @click="loadColumnAndData(100, 50)">100列50条</vxe-button>\n            <vxe-button @click="loadColumnAndData(200, 100)">200列100条</vxe-button>\n            <vxe-button @click="loadColumnAndData(1000, 5000)">1k列5k条</vxe-button>\n            <vxe-button @click="loadColumnAndData(5000, 10000)">5k列1w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(10000, 100000)">1w列10w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(50000, 200000)">5w列20w条</vxe-button>\n            <vxe-button @click="loadColumnAndData(100000, 50000)">10w列5w条</vxe-button>\n            <vxe-button @click="$refs.xGrid.setAllCheckboxRow(true)">所有选中</vxe-button>\n            <vxe-button @click="$refs.xGrid.clearCheckboxRow()">清除选中</vxe-button>\n            <vxe-button @click="getSelectEvent">获取选中</vxe-button>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent, nextTick, reactive, ref } from 'vue'\n        import { VXETable, VxeGridInstance, VxeGridProps } from 'vxe-table'\n\n        const columnList: any[] = []\n        const dataList: any[] = []\n\n        export default defineComponent({\n          setup () {\n            const gridOptions = reactive({\n              border: true,\n              showOverflow: true,\n              rowKey: true,\n              showHeaderOverflow: true,\n              highlightHoverRow: true,\n              highlightCurrentRow: true,\n              height: 600,\n              resizable: true,\n              loading: false,\n              toolbarConfig: {\n                slots: {\n                  buttons: 'toolbar_buttons'\n                }\n              },\n              checkboxConfig: {\n                checkField: 'checked',\n                labelField: 'nickname'\n              }\n            } as VxeGridProps)\n\n            const xGrid = ref({} as VxeGridInstance)\n\n            const mockColumns = (colSize: number): Promise<any[]> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const currSize = columnList.length\n                  if (currSize < colSize) {\n                    for (let i = currSize; i < colSize; i++) {\n                      columnList.push({\n                        field: 'attr' + i,\n                        title: i === 0 ? '' : 'Attr' + i,\n                        width: i === 0 ? 60 : 140,\n                        type: i === 0 ? 'checkbox' : null,\n                        fixed: i < 1 ? 'left' : null\n                      })\n                    }\n                  }\n                  // 模拟数据\n                  const result = JSON.parse(JSON.stringify(columnList.slice(0, colSize)))\n                  resolve(result)\n                }, 100)\n              })\n            }\n\n            const mockList = (rowSize: number): Promise<any[]> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const currSize = dataList.length\n                  if (currSize < rowSize) {\n                    for (let i = currSize; i < rowSize; i++) {\n                      dataList.push({\n                        checked: false,\n                        attr0: 'attr0_row_' + i,\n                        attr1: 'attr1_row_' + i,\n                        attr2: 'attr2_row_' + i,\n                        attr3: 'attr3_row_' + i,\n                        attr4: 'attr3_row_' + i,\n                        attr5: 'attr3_row_' + i,\n                        attr10: 'attr10_row_' + i,\n                        attr11: 'attr11_row_' + i,\n                        attr12: 'attr12_row_' + i,\n                        attr13: 'attr12_row_' + i,\n                        attr14: 'attr12_row_' + i,\n                        attr50: 'attr50_row_' + i,\n                        attr51: 'attr51_row_' + i,\n                        attr52: 'attr52_row_' + i,\n                        attr53: 'attr53_row_' + i,\n                        attr54: 'attr54_row_' + i,\n                        attr100: 'attr100_row_' + i,\n                        attr101: 'attr101_row_' + i,\n                        attr102: 'attr102_row_' + i,\n                        attr103: 'attr103_row_' + i,\n                        attr105: 'attr105_row_' + i,\n                        attr104: 'attr104_row_' + i,\n                        attr106: 'attr106_row_' + i,\n                        attr107: 'attr107_row_' + i,\n                        attr400: 'attr100_row_' + i,\n                        attr401: 'attr401_row_' + i,\n                        attr402: 'attr402_row_' + i,\n                        attr403: 'attr403_row_' + i,\n                        attr404: 'attr404_row_' + i,\n                        attr405: 'attr405_row_' + i,\n                        attr406: 'attr405_row_' + i,\n                        attr407: 'attr405_row_' + i,\n                        attr1000: 'attr100_row_' + i,\n                        attr1001: 'attr1001_row_' + i,\n                        attr1002: 'attr1002_row_' + i,\n                        attr1003: 'attr1003_row_' + i,\n                        attr1004: 'attr1004_row_' + i,\n                        attr1005: 'attr1005_row_' + i,\n                        attr1006: 'attr1005_row_' + i,\n                        attr1007: 'attr1005_row_' + i,\n                        attr10005: 'attr10005_row_' + i,\n                        attr10006: 'attr10005_row_' + i,\n                        attr10007: 'attr10005_row_' + i,\n                        attr150005: 'attr100005_row_' + i,\n                        attr150006: 'attr100005_row_' + i,\n                        attr150007: 'attr100005_row_' + i\n                      })\n                    }\n                  }\n                  // 模拟数据\n                  const result = JSON.parse(JSON.stringify(dataList.slice(0, rowSize)))\n                  resolve(result)\n                }, 100)\n              })\n            }\n\n            const loadColumnAndData = (colSize: number, rowSize: number) => {\n              gridOptions.loading = true\n              Promise.all([\n                mockColumns(colSize),\n                mockList(rowSize)\n              ]).then(rest => {\n                const columns = rest[0]\n                const data = rest[1]\n                const startTime = Date.now()\n                const $grid = xGrid.value\n                // 使用函数式加载\n                if ($grid) {\n                  Promise.all([\n                    $grid.reloadColumn(columns),\n                    $grid.reloadData(data)\n                  ]).then(() => {\n                    VXETable.modal.message({ content: `渲染 ${colSize} 列 ${rowSize} 行，用时 ${Date.now() - startTime}毫秒`, status: 'info' })\n                    gridOptions.loading = false\n                  })\n                } else {\n                  gridOptions.loading = false\n                }\n              })\n            }\n\n            const getSelectEvent = () => {\n              const $grid = xGrid.value\n              const selectRecords = $grid.getCheckboxRecords()\n              VXETable.modal.alert(`${selectRecords.length}`)\n            }\n\n            nextTick(() => {\n              loadColumnAndData(20, 10)\n            })\n\n            return {\n              xGrid,\n              gridOptions,\n              loadColumnAndData,\n              getSelectEvent\n            }\n          }\n        }\n        "]}}}),J=r("6b0d"),F=r.n(J);const H=F()(L,[["render",G]]);e["default"]=H}}]);