(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d228e86"],{dad7:function(e,n,t){"use strict";t.r(n);var o=t("7a23"),r={class:"tip"},a=Object(o["createTextVNode"])(" 通过 "),s=Object(o["createTextVNode"])(" 属性配置 "),i=Object(o["createTextVNode"])(" 开启全屏缩放按钮或者直接调用相关方法，按 Esc 可退出全屏"),c=Object(o["createElementVNode"])("br",null,null,-1),d=Object(o["createTextVNode"])(" 还可以手动调用 "),l=Object(o["createTextVNode"])(" 方法最大化表格、"),u=Object(o["createTextVNode"])(" 方法还原表格 "),m=Object(o["createTextVNode"])("表格最大化"),p=Object(o["createTextVNode"])("表格还原"),b=Object(o["createTextVNode"])("切换表格最大化/还原"),x={class:"demo-code"},g=Object(o["createTextVNode"])("      "),f=Object(o["createTextVNode"])("\r\n      "),v=Object(o["createTextVNode"])("\r\n    ");function h(e,n,t,h,O,T){var j=Object(o["resolveComponent"])("grid-api-link"),z=Object(o["resolveComponent"])("vxe-button"),N=Object(o["resolveComponent"])("vxe-grid"),k=Object(o["resolveComponent"])("pre-code");return Object(o["openBlock"])(),Object(o["createElementBlock"])("div",null,[Object(o["createElementVNode"])("p",r,[a,Object(o["createVNode"])(j,{prop:"toolbar"}),s,Object(o["createVNode"])(j,{prop:"zoom"}),i,c,d,Object(o["createVNode"])(j,{prop:"maximize"}),l,Object(o["createVNode"])(j,{prop:"revert"}),u]),Object(o["createVNode"])(N,Object(o["mergeProps"])({ref:"xGrid"},e.gridOptions),{toolbar_buttons:Object(o["withCtx"])((function(){return[Object(o["createVNode"])(z,{onClick:e.maximizeEvent},{default:Object(o["withCtx"])((function(){return[m]})),_:1},8,["onClick"]),Object(o["createVNode"])(z,{onClick:e.revertEvent},{default:Object(o["withCtx"])((function(){return[p]})),_:1},8,["onClick"]),Object(o["createVNode"])(z,{onClick:e.zoomEvent},{default:Object(o["withCtx"])((function(){return[b]})),_:1},8,["onClick"])]})),_:1},16),Object(o["createElementVNode"])("p",x,Object(o["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(o["createElementVNode"])("pre",null,[g,Object(o["createVNode"])(k,{class:"xml"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),f,Object(o["createVNode"])(k,{class:"typescript"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),v])])}t("d3b7"),t("159b"),t("a9e3");var O=Object(o["defineComponent"])({setup:function(){var e=Object(o["ref"])({}),n=function(){return new Promise((function(e){setTimeout((function(){var n=[{id:10001,name:"Test1",nickname:"T1",role:"Develop",sex:"Man",age:28,address:"Shenzhen"},{id:10002,name:"Test2",nickname:"T2",role:"Test",sex:"Women",age:22,address:"Guangzhou"},{id:10003,name:"Test3",nickname:"T3",role:"PM",sex:"Man",age:32,address:"Shanghai"},{id:10004,name:"Test4",nickname:"T4",role:"Designer",sex:"Women",age:23,address:"Shenzhen"},{id:10005,name:"Test5",nickname:"T5",role:"Develop",sex:"Women",age:30,address:"Shanghai"},{id:10006,name:"Test6",nickname:"T6",role:"Designer",sex:"Women",age:21,address:"Shenzhen"},{id:10007,name:"Test7",nickname:"T7",role:"Test",sex:"Man",age:29,address:"Shenzhen"},{id:10008,name:"Test8",nickname:"T8",role:"Develop",sex:"Man",age:35,address:"Shenzhen"}],t={page:{total:200},result:n};e(t)}),500)}))},t=function(){var n=e.value;n.maximize()},r=function(){var n=e.value;n.revert()},a=function(){var n=e.value;n.zoom()},s=function(e,n){var t=0;return e.forEach((function(e){t+=Number(e[n])})),t/e.length},i=Object(o["reactive"])({border:!0,resizable:!0,showOverflow:!0,showFooter:!0,height:530,pagerConfig:{pageSize:20,perfect:!0},toolbarConfig:{perfect:!0,refresh:!0,zoom:!0,custom:!0,slots:{buttons:"toolbar_buttons"}},proxyConfig:{props:{result:"result",total:"page.total"},ajax:{query:function(){return n()}}},columns:[{type:"seq",width:60},{type:"checkbox",width:100},{field:"name",title:"Name"},{field:"age",title:"Age"},{field:"role",title:"Role"},{field:"address",title:"Address"}],footerMethod:function(e){var n=e.columns,t=e.data,o=[];return n.forEach((function(e,n){0===n?o.push("平均"):"age"===e.property?o.push(s(t,"age")):o.push("-")})),[o]}});return{xGrid:e,gridOptions:i,maximizeEvent:t,revertEvent:r,zoomEvent:a,demoCodes:['\n        <vxe-grid ref="xGrid" v-bind="gridOptions">\n          <template #toolbar_buttons>\n            <vxe-button @click="maximizeEvent">表格最大化</vxe-button>\n            <vxe-button @click="revertEvent">表格还原</vxe-button>\n            <vxe-button @click="zoomEvent">切换表格最大化/还原</vxe-button>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VxeGridInstance, VxeGridProps } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const xGrid = ref({} as VxeGridInstance)\n\n            const findList = () => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const list = [\n                    { id: 10001, name: 'Test1', nickname: 'T1', role: 'Develop', sex: 'Man', age: 28, address: 'Shenzhen' },\n                    { id: 10002, name: 'Test2', nickname: 'T2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },\n                    { id: 10003, name: 'Test3', nickname: 'T3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },\n                    { id: 10004, name: 'Test4', nickname: 'T4', role: 'Designer', sex: 'Women', age: 23, address: 'Shenzhen' },\n                    { id: 10005, name: 'Test5', nickname: 'T5', role: 'Develop', sex: 'Women', age: 30, address: 'Shanghai' },\n                    { id: 10006, name: 'Test6', nickname: 'T6', role: 'Designer', sex: 'Women', age: 21, address: 'Shenzhen' },\n                    { id: 10007, name: 'Test7', nickname: 'T7', role: 'Test', sex: 'Man', age: 29, address: 'Shenzhen' },\n                    { id: 10008, name: 'Test8', nickname: 'T8', role: 'Develop', sex: 'Man', age: 35, address: 'Shenzhen' }\n                  ]\n                  const rest = {\n                    page: {\n                      total: 200\n                    },\n                    result: list\n                  }\n                  resolve(rest)\n                }, 500)\n              })\n            }\n\n            const maximizeEvent = () => {\n              const $grid = xGrid.value\n              $grid.maximize()\n            }\n\n            const revertEvent = () => {\n              const $grid = xGrid.value\n              $grid.revert()\n            }\n\n            const zoomEvent = () => {\n              const $grid = xGrid.value\n              $grid.zoom()\n            }\n\n            const meanNum = (list: any[], field: string) => {\n              let count = 0\n              list.forEach(item => {\n                count += Number(item[field])\n              })\n              return count / list.length\n            }\n\n            const gridOptions = reactive<VxeGridProps>({\n              border: true,\n              resizable: true,\n              showOverflow: true,\n              showFooter: true,\n              height: 530,\n              pagerConfig: {\n                pageSize: 20,\n                perfect: true\n              },\n              toolbarConfig: {\n                perfect: true,\n                refresh: true,\n                zoom: true,\n                custom: true,\n                slots: {\n                  // 自定义插槽模板\n                  buttons: 'toolbar_buttons'\n                }\n              },\n              proxyConfig: {\n                props: {\n                  result: 'result', // 配置响应结果列表字段\n                  total: 'page.total' // 配置响应结果总页数字段\n                },\n                ajax: {\n                  query: () => findList()\n                }\n              },\n              columns: [\n                { type: 'seq', width: 60 },\n                { type: 'checkbox', width: 100 },\n                { field: 'name', title: 'Name' },\n                { field: 'age', title: 'Age' },\n                { field: 'role', title: 'Role' },\n                { field: 'address', title: 'Address' }\n              ],\n              footerMethod ({ columns, data }) {\n                const sums: any[] = []\n                columns.forEach((column, columnIndex) => {\n                  if (columnIndex === 0) {\n                    sums.push('平均')\n                  } else {\n                    if (column.property === 'age') {\n                      sums.push(meanNum(data, 'age'))\n                    } else {\n                      sums.push('-')\n                    }\n                  }\n                })\n                // 返回一个二维数组的表尾合计\n                return [sums]\n              }\n            })\n\n            return {\n              xGrid,\n              gridOptions,\n              maximizeEvent,\n              revertEvent,\n              zoomEvent\n            }\n          }\n        }\n        "]}}}),T=t("6b0d"),j=t.n(T);const z=j()(O,[["render",h]]);n["default"]=z}}]);