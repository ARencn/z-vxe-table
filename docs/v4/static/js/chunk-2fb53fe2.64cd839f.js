(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2fb53fe2"],{"71c5":function(e,n,t){"use strict";t.r(n);var a=t("7a23"),c={class:"tip"},i=Object(a["l"])("实现横向树列表"),r=Object(a["j"])("br",null,null,-1),o={class:"red"},d=Object(a["l"])("（注："),l=Object(a["l"])(" ，不能用于树形结构、展开行、固定列，合并的逻辑都是自行实现的，该示例仅供参考）"),m={class:"demo-code"},h=Object(a["l"])("      "),u=Object(a["l"])("\r\n      "),p=Object(a["l"])("\r\n    ");function f(e,n,t,f,s,b){var k=Object(a["L"])("table-api-link"),v=Object(a["L"])("vxe-checkbox"),w=Object(a["L"])("vxe-column"),I=Object(a["L"])("vxe-table"),j=Object(a["L"])("pre-code");return Object(a["D"])(),Object(a["i"])("div",null,[Object(a["j"])("p",c,[i,r,Object(a["j"])("span",o,[d,Object(a["m"])(k,{prop:"span-method"}),l])]),Object(a["m"])(I,{border:"",height:"600","scroll-y":{enabled:!1},"span-method":e.rowspanMethod,data:e.demo1.tableData},{default:Object(a["V"])((function(){return[Object(a["m"])(w,{field:"name1",title:"功能模块"},{default:Object(a["V"])((function(n){var t=n.row;return[Object(a["m"])(v,{modelValue:t.check1,"onUpdate:modelValue":function(e){return t.check1=e},onChange:function(n){return e.check1ChangeEvent(t,t.check1)}},{default:Object(a["V"])((function(){return[Object(a["l"])(Object(a["O"])(t.name1),1)]})),_:2},1032,["modelValue","onUpdate:modelValue","onChange"])]})),_:1}),Object(a["m"])(w,{field:"name2",title:"详细功能"},{default:Object(a["V"])((function(n){var t=n.row;return[Object(a["m"])(v,{modelValue:t.check2,"onUpdate:modelValue":function(e){return t.check2=e},onChange:function(n){return e.check2ChangeEvent(t,t.check2)}},{default:Object(a["V"])((function(){return[Object(a["l"])(Object(a["O"])(t.name2),1)]})),_:2},1032,["modelValue","onUpdate:modelValue","onChange"])]})),_:1}),Object(a["m"])(w,{field:"name3",title:"权限类型"},{default:Object(a["V"])((function(n){var t=n.row;return[Object(a["m"])(v,{modelValue:t.check3,"onUpdate:modelValue":function(e){return t.check3=e},onChange:function(n){return e.check3ChangeEvent(t,t.check3)}},{default:Object(a["V"])((function(){return[Object(a["l"])(Object(a["O"])(t.name3),1)]})),_:2},1032,["modelValue","onUpdate:modelValue","onChange"])]})),_:1}),Object(a["m"])(w,{field:"name4",title:"权限列表"},{default:Object(a["V"])((function(n){var t=n.row;return[Object(a["m"])(v,{modelValue:t.check4,"onUpdate:modelValue":function(e){return t.check4=e},onChange:function(n){return e.check4ChangeEvent(t,t.check4)}},{default:Object(a["V"])((function(){return[Object(a["l"])(Object(a["O"])(t.name4),1)]})),_:2},1032,["modelValue","onUpdate:modelValue","onChange"])]})),_:1})]})),_:1},8,["span-method","data"]),Object(a["j"])("p",m,Object(a["O"])(e.$t("app.body.button.showCode")),1),Object(a["j"])("pre",null,[h,Object(a["m"])(j,{class:"xml"},{default:Object(a["V"])((function(){return[Object(a["l"])(Object(a["O"])(e.demoCodes[0]),1)]})),_:1}),u,Object(a["m"])(j,{class:"typescript"},{default:Object(a["V"])((function(){return[Object(a["l"])(Object(a["O"])(e.demoCodes[1]),1)]})),_:1}),p])])}t("4de4"),t("d3b7"),t("159b"),t("ddb0"),t("99af"),t("b0c0"),t("caad");var s=t("c695"),b=t.n(s),k=Object(a["n"])({setup:function(){var e=Object(a["H"])({tableData:[]}),n=function(n,t){var a=e.tableData.filter((function(e){return e.id3===n.id3&&e.name4===n.name4}));a.forEach((function(e){e.check4=t})),a=e.tableData.filter((function(e){return e.id3===n.id3}));var c=a.every((function(e){return e.check4}));a.forEach((function(e){e.check3=c})),a=e.tableData.filter((function(e){return e.id2===n.id2}));var i=a.every((function(e){return e.check3}));a.forEach((function(e){e.check2=i})),a=e.tableData.filter((function(e){return e.id1===n.id1}));var r=a.every((function(e){return e.check2}));a.forEach((function(e){e.check1=r}))},t=function(t,a){var c=e.tableData.filter((function(e){return e.id2===t.id2&&e.name3===t.name3}));c.forEach((function(e){e.check3=a})),c=e.tableData.filter((function(e){return e.id3===t.id3})),c.forEach((function(e){n(e,a)}))},c=function(n,a){var c=e.tableData.filter((function(e){return e.id1===n.id1&&e.name2===n.name2}));c.forEach((function(e){e.check2=a})),c=e.tableData.filter((function(e){return e.id2===n.id2})),c.forEach((function(e){t(e,a)}))},i=function(n,t){var a=e.tableData.filter((function(e){return e.name1===n.name1}));a.forEach((function(e){e.check1=t})),a=e.tableData.filter((function(e){return e.id1===n.id1})),a.forEach((function(e){c(e,t)}))},r=function(){var e=[{id:"10000",parentId:null,name:"账号管理"},{id:"11000",parentId:"10000",name:"用户管理"},{id:"11100",parentId:"11000",name:"查看"},{id:"11110",parentId:"11100",name:"用户列表"},{id:"11200",parentId:"11000",name:"编辑"},{id:"11210",parentId:"11200",name:"用户列表"},{id:"11220",parentId:"11200",name:"新增用户"},{id:"11300",parentId:"11000",name:"操作"},{id:"11310",parentId:"11300",name:"新增"},{id:"11320",parentId:"11300",name:"删除"},{id:"11330",parentId:"11300",name:"修改"},{id:"12000",parentId:"10000",name:"角色管理"},{id:"12100",parentId:"12000",name:"查看"},{id:"12110",parentId:"12100",name:"角色列表"},{id:"12200",parentId:"12000",name:"编辑"},{id:"122100",parentId:"12200",name:"角色列表"},{id:"12220",parentId:"12200",name:"新增角色"},{id:"12300",parentId:"12000",name:"操作"},{id:"12310",parentId:"12300",name:"新增"},{id:"12320",parentId:"12300",name:"删除"},{id:"12330",parentId:"12300",name:"修改"},{id:"20000",parentId:null,name:"个人中心"},{id:"21000",parentId:"20000",name:"个性化设置"},{id:"21100",parentId:"21000",name:"查看"},{id:"21110",parentId:"21100",name:"信息列表"},{id:"21200",parentId:"21000",name:"操作"},{id:"21210",parentId:"21200",name:"重置信息"},{id:"22000",parentId:"20000",name:"账户管理"},{id:"22100",parentId:"22000",name:"查看"},{id:"22110",parentId:"22100",name:"账户余额"},{id:"22120",parentId:"22100",name:"帐变记录"}];return e},o=function(n){var t={children:"children"},a=[],c={};b.a.eachTree(n,(function(e,n,t,i,r){if(c[e.id]=e,e.keys=r?r.keys.concat([e.id]):[e.id],!e.children||!e.children.length){var o={};e.keys.forEach((function(e,n){var t=n+1,a=c[e];o["check".concat(t)]=!1,o["id".concat(t)]=a.id,o["name".concat(t)]=a.name})),a.push(o)}}),t),e.tableData=a},d=function(e){var n=e.row,t=e._rowIndex,a=e.column,c=e.visibleData,i=["name1","name2","name3"],r=n[a.property];if(r&&i.includes(a.property)){var o=c[t-1],d=c[t+1];if(o&&o[a.property]===r)return{rowspan:0,colspan:0};var l=1;while(d&&d[a.property]===r)d=c[++l+t];if(l>1)return{rowspan:l,colspan:1}}},l=b.a.toArrayTree(r());return o(l),{demo1:e,check1ChangeEvent:i,check2ChangeEvent:c,check3ChangeEvent:t,check4ChangeEvent:n,rowspanMethod:d,demoCodes:['\n        <vxe-table\n          border\n          height="600"\n          :scroll-y="{enabled: false}"\n          :span-method="rowspanMethod"\n          :data="demo1.tableData">\n          <vxe-column field="name1" title="功能模块">\n            <template #default="{ row }">\n              <vxe-checkbox v-model="row.check1" @change="check1ChangeEvent(row, row.check1)">{{ row.name1 }}</vxe-checkbox>\n            </template>\n          </vxe-column>\n          <vxe-column field="name2" title="详细功能">\n            <template #default="{ row }">\n              <vxe-checkbox v-model="row.check2" @change="check2ChangeEvent(row, row.check2)">{{ row.name2 }}</vxe-checkbox>\n            </template>\n          </vxe-column>\n          <vxe-column field="name3" title="权限类型">\n            <template #default="{ row }">\n              <vxe-checkbox v-model="row.check3" @change="check3ChangeEvent(row, row.check3)">{{ row.name3 }}</vxe-checkbox>\n            </template>\n          </vxe-column>\n          <vxe-column field="name4" title="权限列表">\n            <template #default="{ row }">\n              <vxe-checkbox v-model="row.check4" @change="check4ChangeEvent(row, row.check4)">{{ row.name4 }}</vxe-checkbox>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        ',"\n        import { defineComponent, reactive } from 'vue'\n        import { VxeTablePropTypes } from 'vxe-table'\n        import XEUtils from 'xe-utils'\n\n        export default defineComponent({\n          setup () {\n            const demo1 = reactive({\n              tableData: [] as any[]\n            })\n\n            const check4ChangeEvent = (row: any, checked: boolean) => {\n              let childList = demo1.tableData.filter(item => item.id3 === row.id3 && item.name4 === row.name4)\n              childList.forEach(item => {\n                item.check4 = checked\n              })\n              childList = demo1.tableData.filter(item => item.id3 === row.id3)\n              const isChecked3 = childList.every(item => item.check4)\n              childList.forEach(item => {\n                item.check3 = isChecked3\n              })\n              childList = demo1.tableData.filter(item => item.id2 === row.id2)\n              const isChecked2 = childList.every(item => item.check3)\n              childList.forEach(item => {\n                item.check2 = isChecked2\n              })\n              childList = demo1.tableData.filter(item => item.id1 === row.id1)\n              const isChecked1 = childList.every(item => item.check2)\n              childList.forEach(item => {\n                item.check1 = isChecked1\n              })\n            }\n\n            const check3ChangeEvent = (row: any, checked: boolean) => {\n              let childList = demo1.tableData.filter(item => item.id2 === row.id2 && item.name3 === row.name3)\n              childList.forEach(item => {\n                item.check3 = checked\n              })\n              childList = demo1.tableData.filter(item => item.id3 === row.id3)\n              childList.forEach(item => {\n                check4ChangeEvent(item, checked)\n              })\n            }\n\n            const check2ChangeEvent = (row: any, checked: boolean) => {\n              let childList = demo1.tableData.filter(item => item.id1 === row.id1 && item.name2 === row.name2)\n              childList.forEach(item => {\n                item.check2 = checked\n              })\n              childList = demo1.tableData.filter(item => item.id2 === row.id2)\n              childList.forEach(item => {\n                check3ChangeEvent(item, checked)\n              })\n            }\n\n            const check1ChangeEvent = (row: any, checked: boolean) => {\n              let childList = demo1.tableData.filter(item => item.name1 === row.name1)\n              childList.forEach(item => {\n                item.check1 = checked\n              })\n              childList = demo1.tableData.filter(item => item.id1 === row.id1)\n              childList.forEach(item => {\n                check2ChangeEvent(item, checked)\n              })\n            }\n\n            const getList = () => {\n              const list = [\n                { id: '10000', parentId: null, name: '账号管理' },\n                { id: '11000', parentId: '10000', name: '用户管理' },\n                { id: '11100', parentId: '11000', name: '查看' },\n                { id: '11110', parentId: '11100', name: '用户列表' },\n                { id: '11200', parentId: '11000', name: '编辑' },\n                { id: '11210', parentId: '11200', name: '用户列表' },\n                { id: '11220', parentId: '11200', name: '新增用户' },\n                { id: '11300', parentId: '11000', name: '操作' },\n                { id: '11310', parentId: '11300', name: '新增' },\n                { id: '11320', parentId: '11300', name: '删除' },\n                { id: '11330', parentId: '11300', name: '修改' },\n                { id: '12000', parentId: '10000', name: '角色管理' },\n                { id: '12100', parentId: '12000', name: '查看' },\n                { id: '12110', parentId: '12100', name: '角色列表' },\n                { id: '12200', parentId: '12000', name: '编辑' },\n                { id: '122100', parentId: '12200', name: '角色列表' },\n                { id: '12220', parentId: '12200', name: '新增角色' },\n                { id: '12300', parentId: '12000', name: '操作' },\n                { id: '12310', parentId: '12300', name: '新增' },\n                { id: '12320', parentId: '12300', name: '删除' },\n                { id: '12330', parentId: '12300', name: '修改' },\n                { id: '20000', parentId: null, name: '个人中心' },\n                { id: '21000', parentId: '20000', name: '个性化设置' },\n                { id: '21100', parentId: '21000', name: '查看' },\n                { id: '21110', parentId: '21100', name: '信息列表' },\n                { id: '21200', parentId: '21000', name: '操作' },\n                { id: '21210', parentId: '21200', name: '重置信息' },\n                { id: '22000', parentId: '20000', name: '账户管理' },\n                { id: '22100', parentId: '22000', name: '查看' },\n                { id: '22110', parentId: '22100', name: '账户余额' },\n                { id: '22120', parentId: '22100', name: '帐变记录' }\n              ]\n              return list\n            }\n\n            // 将普通树结构转换为横向树列表\n            const toColTreeData = (treeData: any[]) => {\n              const options = { children: 'children' }\n              const list: any[] = []\n              const keyMap: any = {}\n              XEUtils.eachTree(treeData, (item, index, result, paths, parent) => {\n                keyMap[item.id] = item\n                item.keys = parent ? parent.keys.concat([item.id]) : [item.id]\n                if (!item.children || !item.children.length) {\n                  const row: any = {}\n                  item.keys.forEach((key: any, index: number) => {\n                    const level = index + 1\n                    const obj = keyMap[key]\n                    row[`check${level}`] = false\n                    row[`id${level}`] = obj.id\n                    row[`name${level}`] = obj.name\n                  })\n                  list.push(row)\n                }\n              }, options)\n              demo1.tableData = list\n            }\n\n            // 通用行合并函数（将相同多列数据合并为一行）\n            const rowspanMethod: VxeTablePropTypes.SpanMethod = ({ row, _rowIndex, column, visibleData }) => {\n              const fields = ['name1', 'name2', 'name3']\n              const cellValue = row[column.property]\n              if (cellValue && fields.includes(column.property)) {\n                const prevRow = visibleData[_rowIndex - 1]\n                let nextRow = visibleData[_rowIndex + 1]\n                if (prevRow && prevRow[column.property] === cellValue) {\n                  return { rowspan: 0, colspan: 0 }\n                } else {\n                  let countRowspan = 1\n                  while (nextRow && nextRow[column.property] === cellValue) {\n                    nextRow = visibleData[++countRowspan + _rowIndex]\n                  }\n                  if (countRowspan > 1) {\n                    return { rowspan: countRowspan, colspan: 1 }\n                  }\n                }\n              }\n            }\n\n            const treeData = XEUtils.toArrayTree(getList())\n            toColTreeData(treeData)\n\n            return {\n              demo1,\n              check1ChangeEvent,\n              check2ChangeEvent,\n              check3ChangeEvent,\n              check4ChangeEvent,\n              rowspanMethod\n            }\n          }\n        })\n        "]}}}),v=t("6b0d"),w=t.n(v);const I=w()(k,[["render",f]]);n["default"]=I},"99af":function(e,n,t){"use strict";var a=t("23e7"),c=t("da84"),i=t("d039"),r=t("e8b5"),o=t("861d"),d=t("7b0b"),l=t("07fa"),m=t("8418"),h=t("65f0"),u=t("1dde"),p=t("b622"),f=t("2d00"),s=p("isConcatSpreadable"),b=9007199254740991,k="Maximum allowed index exceeded",v=c.TypeError,w=f>=51||!i((function(){var e=[];return e[s]=!1,e.concat()[0]!==e})),I=u("concat"),j=function(e){if(!o(e))return!1;var n=e[s];return void 0!==n?!!n:r(e)},O=!w||!I;a({target:"Array",proto:!0,forced:O},{concat:function(e){var n,t,a,c,i,r=d(this),o=h(r,0),u=0;for(n=-1,a=arguments.length;n<a;n++)if(i=-1===n?r:arguments[n],j(i)){if(c=l(i),u+c>b)throw v(k);for(t=0;t<c;t++,u++)t in i&&m(o,u,i[t])}else{if(u>=b)throw v(k);m(o,u++,i)}return o.length=u,o}})}}]);