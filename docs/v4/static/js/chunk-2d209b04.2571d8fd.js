(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d209b04"],{a9b8:function(e,t,n){"use strict";n.r(t);var o=n("7a23"),a={class:"tip"},d=Object(o["createTextVNode"])("最大高度，通过设置 "),r=Object(o["createTextVNode"])(" 启用，当数据少时自适应"),l={class:"demo-code"},i=Object(o["createTextVNode"])("      "),c=Object(o["createTextVNode"])("\r\n      "),s=Object(o["createTextVNode"])("\r\n    "),m=Object(o["createElementVNode"])("p",{class:"tip"},"当数据超过最大高度时自动显示滚动条",-1),u={class:"demo-code"},b=Object(o["createTextVNode"])("      "),f=Object(o["createTextVNode"])("\r\n      "),p=Object(o["createTextVNode"])("\r\n    ");function x(e,t,n,x,h,g){var v=Object(o["resolveComponent"])("table-api-link"),T=Object(o["resolveComponent"])("vxe-column"),w=Object(o["resolveComponent"])("vxe-table"),j=Object(o["resolveComponent"])("pre-code");return Object(o["openBlock"])(),Object(o["createElementBlock"])("div",null,[Object(o["createElementVNode"])("p",a,[d,Object(o["createVNode"])(v,{prop:"max-height"}),r]),Object(o["createVNode"])(w,{border:"",resizable:"","show-footer":"","show-overflow":"","max-height":"400",loading:e.demo1.loading,data:e.demo1.tableData,"footer-method":e.footerMethod},{default:Object(o["withCtx"])((function(){return[Object(o["createVNode"])(T,{type:"checkbox",width:"60"}),Object(o["createVNode"])(T,{type:"seq",width:"100"}),Object(o["createVNode"])(T,{field:"name",title:"Name",sortable:"",width:"200"}),Object(o["createVNode"])(T,{field:"age",title:"Age",width:"120"}),Object(o["createVNode"])(T,{field:"rate",title:"Rate",width:"120"}),Object(o["createVNode"])(T,{field:"region",title:"Region",width:"200"}),Object(o["createVNode"])(T,{field:"address",title:"Address",width:"300","show-overflow":""}),Object(o["createVNode"])(T,{field:"updateTime",title:"UpdateTime",width:"200"}),Object(o["createVNode"])(T,{field:"createTime",title:"CreateTime",width:"200"})]})),_:1},8,["loading","data","footer-method"]),Object(o["createElementVNode"])("p",l,Object(o["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(o["createElementVNode"])("pre",null,[i,Object(o["createVNode"])(j,{class:"xml"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),c,Object(o["createVNode"])(j,{class:"typescript"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),s]),m,Object(o["createVNode"])(w,{border:"",resizable:"","show-footer":"","show-overflow":"","max-height":"400",loading:e.demo2.loading,data:e.demo2.tableData,"footer-method":e.footerMethod},{default:Object(o["withCtx"])((function(){return[Object(o["createVNode"])(T,{type:"checkbox",width:"60"}),Object(o["createVNode"])(T,{type:"seq",width:"100"}),Object(o["createVNode"])(T,{field:"name",title:"Name",sortable:"",width:"200"}),Object(o["createVNode"])(T,{field:"age",title:"Age",width:"120"}),Object(o["createVNode"])(T,{field:"rate",title:"Rate",width:"120"}),Object(o["createVNode"])(T,{field:"time",title:"Time",width:"200"}),Object(o["createVNode"])(T,{field:"updateTime",title:"UpdateTime",width:"200"}),Object(o["createVNode"])(T,{field:"createTime",title:"CreateTime",width:"200"})]})),_:1},8,["loading","data","footer-method"]),Object(o["createElementVNode"])("p",u,Object(o["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(o["createElementVNode"])("pre",null,[b,Object(o["createVNode"])(j,{class:"xml"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[2]),1)]})),_:1}),f,Object(o["createVNode"])(j,{class:"typescript"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[3]),1)]})),_:1}),p])])}n("d3b7"),n("159b"),n("a9e3"),n("d81d"),n("caad"),n("b680");var h=Object(o["defineComponent"])({setup:function(){var e=Object(o["reactive"])({loading:!1,tableData:[]});e.loading=!0,setTimeout((function(){e.tableData=[{id:10001,name:"Test1",role:"Develop",sex:"0",age:28,amount:888,address:"test abc"},{id:10002,name:"Test2",role:"Test",sex:"1",age:22,amount:666,address:"Guangzhou"},{id:10003,name:"Test3",role:"PM",sex:"1",age:32,amount:89,address:"Shanghai"}],e.loading=!1}),500);var t=Object(o["reactive"])({loading:!1,tableData:[]});t.loading=!0,setTimeout((function(){t.tableData=[{id:10001,name:"Test1",role:"Develop",sex:"0",age:28,amount:888,address:"test abc"},{id:10002,name:"Test2",role:"Test",sex:"1",age:22,amount:666,address:"Guangzhou"},{id:10003,name:"Test3",role:"PM",sex:"1",age:32,amount:89,address:"Shanghai"},{id:10004,name:"Test4",role:"Designer",sex:"0",age:23,amount:1e3,address:"test abc"},{id:10005,name:"Test5",role:"Develop",sex:"0",age:30,amount:999,address:"Shanghai"},{id:10006,name:"Test6",role:"Designer",sex:"0",age:21,amount:998,address:"test abc"},{id:10007,name:"Test7",role:"Test",sex:"1",age:29,amount:2e3,address:"test abc"},{id:10008,name:"Test8",role:"Develop",sex:"1",age:35,amount:999,address:"test abc"},{id:10009,name:"Test9",role:"Test",sex:"1",age:26,amount:2e3,address:"test abc"},{id:100010,name:"Test10",role:"Develop",sex:"1",age:21,amount:666,address:"test abc"}],t.loading=!1}),500);var n=function(e,t){var n=0;return e.forEach((function(e){n+=Number(e[t])})),n/e.length},a=function(e,t){var n=0;return e.forEach((function(e){n+=Number(e[t])})),n},d=function(e){var t=e.columns,o=e.data,d=[t.map((function(e,t){return 0===t?"平均":["age","rate"].includes(e.property)?n(o,e.property).toFixed(2):null})),t.map((function(e,t){return 0===t?"和值":["age","rate"].includes(e.property)?a(o,e.property):null}))];return d};return{demo1:e,demo2:t,footerMethod:d,demoCodes:['\n        <vxe-table\n          border\n          resizable\n          show-footer\n          show-overflow\n          max-height="400"\n          :loading="demo1.loading"\n          :data="demo1.tableData"\n          :footer-method="footerMethod">\n          <vxe-column type="checkbox" width="60"></vxe-column>\n          <vxe-column type="seq" width="100"></vxe-column>\n          <vxe-column field="name" title="Name" sortable width="200"></vxe-column>\n          <vxe-column field="age" title="Age" width="120"></vxe-column>\n          <vxe-column field="rate" title="Rate" width="120"></vxe-column>\n          <vxe-column field="region" title="Region" width="200"></vxe-column>\n          <vxe-column field="address" title="Address" width="300" show-overflow></vxe-column>\n          <vxe-column field="updateTime" title="UpdateTime" width="200"></vxe-column>\n          <vxe-column field="createTime" title="CreateTime" width="200"></vxe-column>\n        </vxe-table>\n        ',"\n        import { defineComponent, reactive } from 'vue'\n        import { VxeTablePropTypes } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const demo1 = reactive({\n              loading: false,\n              tableData: [] as any[]\n            })\n\n            demo1.loading = true\n            setTimeout(() => {\n              demo1.tableData = [\n                { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },\n                { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' }\n              ]\n              demo1.loading = false\n            }, 500)\n\n            const meanNum = (list: any[], field: string) => {\n              let count = 0\n              list.forEach(item => {\n                count += Number(item[field])\n              })\n              return count / list.length\n            }\n\n            const sumNum = (list: any[], field: string) => {\n              let count = 0\n              list.forEach(item => {\n                count += Number(item[field])\n              })\n              return count\n            }\n\n            const footerMethod: VxeTablePropTypes.FooterMethod = ({ columns, data }) => {\n              const footerData = [\n                columns.map((column, columnIndex) => {\n                  if (columnIndex === 0) {\n                    return '平均'\n                  }\n                  if (['age', 'rate'].includes(column.property)) {\n                    return meanNum(data, column.property).toFixed(2)\n                  }\n                  return null\n                }),\n                columns.map((column, columnIndex) => {\n                  if (columnIndex === 0) {\n                    return '和值'\n                  }\n                  if (['age', 'rate'].includes(column.property)) {\n                    return sumNum(data, column.property)\n                  }\n                  return null\n                })\n              ]\n              return footerData\n            }\n\n            return {\n              demo1,\n              footerMethod\n            }\n          }\n        })\n        ",'\n        <vxe-table\n          border\n          resizable\n          show-footer\n          show-overflow\n          max-height="400"\n          :loading="demo2.loading"\n          :data="demo2.tableData"\n          :footer-method="footerMethod">\n          <vxe-column type="checkbox" width="60"></vxe-column>\n          <vxe-column type="seq" width="100"></vxe-column>\n          <vxe-column field="name" title="Name" sortable width="200"></vxe-column>\n          <vxe-column field="age" title="Age" width="120"></vxe-column>\n          <vxe-column field="rate" title="Rate" width="120"></vxe-column>\n          <vxe-column field="time" title="Time" width="200"></vxe-column>\n          <vxe-column field="updateTime" title="UpdateTime" width="200"></vxe-column>\n          <vxe-column field="createTime" title="CreateTime" width="200"></vxe-column>\n        </vxe-table>\n        ',"\n        import { defineComponent, reactive } from 'vue'\n        import { VxeTablePropTypes } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const demo2 = reactive({\n              loading: false,\n              tableData: [] as any[]\n            })\n\n            demo2.loading = true\n            setTimeout(() => {\n              demo2.tableData = [\n                { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, amount: 888, address: 'test abc' },\n                { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, amount: 666, address: 'Guangzhou' },\n                { id: 10003, name: 'Test3', role: 'PM', sex: '1', age: 32, amount: 89, address: 'Shanghai' },\n                { id: 10004, name: 'Test4', role: 'Designer', sex: '0', age: 23, amount: 1000, address: 'test abc' },\n                { id: 10005, name: 'Test5', role: 'Develop', sex: '0', age: 30, amount: 999, address: 'Shanghai' },\n                { id: 10006, name: 'Test6', role: 'Designer', sex: '0', age: 21, amount: 998, address: 'test abc' },\n                { id: 10007, name: 'Test7', role: 'Test', sex: '1', age: 29, amount: 2000, address: 'test abc' },\n                { id: 10008, name: 'Test8', role: 'Develop', sex: '1', age: 35, amount: 999, address: 'test abc' },\n                { id: 10009, name: 'Test9', role: 'Test', sex: '1', age: 26, amount: 2000, address: 'test abc' },\n                { id: 100010, name: 'Test10', role: 'Develop', sex: '1', age: 21, amount: 666, address: 'test abc' }\n              ]\n              demo2.loading = false\n            }, 500)\n\n            const meanNum = (list: any[], field: string) => {\n              let count = 0\n              list.forEach(item => {\n                count += Number(item[field])\n              })\n              return count / list.length\n            }\n\n            const sumNum = (list: any[], field: string) => {\n              let count = 0\n              list.forEach(item => {\n                count += Number(item[field])\n              })\n              return count\n            }\n\n            const footerMethod: VxeTablePropTypes.FooterMethod = ({ columns, data }) => {\n              const footerData = [\n                columns.map((column, columnIndex) => {\n                  if (columnIndex === 0) {\n                    return '平均'\n                  }\n                  if (['age', 'rate'].includes(column.property)) {\n                    return meanNum(data, column.property).toFixed(2)\n                  }\n                  return null\n                }),\n                columns.map((column, columnIndex) => {\n                  if (columnIndex === 0) {\n                    return '和值'\n                  }\n                  if (['age', 'rate'].includes(column.property)) {\n                    return sumNum(data, column.property)\n                  }\n                  return null\n                })\n              ]\n              return footerData\n            }\n\n            return {\n              demo2,\n              footerMethod\n            }\n          }\n        })\n        "]}}}),g=n("6b0d"),v=n.n(g);const T=v()(h,[["render",x]]);t["default"]=T}}]);