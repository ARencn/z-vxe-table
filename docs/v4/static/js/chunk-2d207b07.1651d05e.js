(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d207b07"],{a233:function(e,r,n){"use strict";n.r(r);var t=n("7a23"),o=Object(t["createElementVNode"])("p",{class:"tip"},[Object(t["createTextVNode"])(" 方式1：如果您使用了 vite，借助插件 "),Object(t["createElementVNode"])("a",{class:"link",href:"https://www.npmjs.com/package/vite-plugin-style-import",target:"_blank"},"vite-plugin-style-import"),Object(t["createTextVNode"])(" 可以实现按需加载模块，减少文件体积。 ")],-1),a=Object(t["createTextVNode"])("      "),l=Object(t["createTextVNode"])("\r\n        npm install vite-plugin-style-import -D\r\n      "),u=Object(t["createTextVNode"])("\r\n      "),i=Object(t["createElementVNode"])("div",null,"修改文件 vite.config.ts",-1),s=Object(t["createTextVNode"])("\r\n      "),c=Object(t["createTextVNode"])("\r\n        import { defineConfig } from 'vite'\r\n        import vue from '@vitejs/plugin-vue'\r\n        import styleImport from 'vite-plugin-style-import'\r\n\r\n        export default defineConfig({\r\n          plugins: [\r\n            // ...,\r\n            styleImport({\r\n              libs: [\r\n                {\r\n                  libraryName: 'vxe-table',\r\n                  esModule: true,\r\n                  resolveComponent: (name) => `vxe-table/es/${name}`,\r\n                  resolveStyle: (name) => `vxe-table/es/${name}/style.css`\r\n                }\r\n              ]\r\n            })\r\n          ]\r\n        })\r\n      "),p=Object(t["createTextVNode"])("\r\n      "),b=Object(t["createElementVNode"])("div",null,"最后这样按需引入模块，就可以减小体积了",-1),d=Object(t["createTextVNode"])("\r\n      "),m=Object(t["createTextVNode"])("\r\n        import { App, createApp } = 'vue'\r\n        import 'xe-utils'\r\n        import {\r\n          // 核心\r\n          VXETable,\r\n\r\n          // 表格功能\r\n          Header,\r\n          // Footer,\r\n          // Icon,\r\n          // Filter,\r\n          // Edit,\r\n          // Menu,\r\n          // Export,\r\n          // Keyboard,\r\n          // Validator,\r\n\r\n          // 可选组件\r\n          Column,\r\n          // Colgroup,\r\n          // Grid,\r\n          // Tooltip,\r\n          // Toolbar,\r\n          // Pager,\r\n          // Form,\r\n          // FormItem,\r\n          // FormGather,\r\n          // Checkbox,\r\n          // CheckboxGroup,\r\n          // Radio,\r\n          // RadioGroup,\r\n          // RadioButton,\r\n          // Switch,\r\n          // Input,\r\n          // Select,\r\n          // Optgroup,\r\n          // Option,\r\n          // Textarea,\r\n          // Button,\r\n          // Modal,\r\n          // List,\r\n          // Pulldown,\r\n\r\n          // 表格\r\n          Table\r\n        } from 'vxe-table'\r\n        import zhCN from 'vxe-table/es/locale/lang/zh-CN'\r\n\r\n        // 按需加载的方式默认是不带国际化的，自定义国际化需要自行解析占位符 '{0}'，例如：\r\n        VXETable.setup({\r\n          i18n: (key, args) => XEUtils.toFormatString(XEUtils.get(zhCN, key), args)\r\n        })\r\n\r\n        function useTable (app: App) {\r\n          // 表格功能\r\n          app.use(Header)\r\n          // .use(Footer)\r\n          // .use(Icon)\r\n          // .use(Filter)\r\n          // .use(Edit)\r\n          // .use(Menu)\r\n          // .use(Export)\r\n          // .use(Keyboard)\r\n          // .use(Validator)\r\n\r\n          // 可选组件\r\n          .use(Column)\r\n          // .use(Colgroup)\r\n          // .use(Grid)\r\n          // .use(Tooltip)\r\n          // .use(Toolbar)\r\n          // .use(Pager)\r\n          // .use(Form)\r\n          // .use(FormItem)\r\n          // .use(FormGather)\r\n          // .use(Checkbox)\r\n          // .use(CheckboxGroup)\r\n          // .use(Radio)\r\n          // .use(RadioGroup)\r\n          // .use(RadioButton)\r\n          // .use(Switch)\r\n          // .use(Input)\r\n          // .use(Select)\r\n          // .use(Optgroup)\r\n          // .use(Option)\r\n          // .use(Textarea)\r\n          // .use(Button)\r\n          // .use(Modal)\r\n          // .use(List)\r\n          // .use(Pulldown)\r\n\r\n          // 安装表格\r\n          .use(Table)\r\n\r\n          // 给 vue 实例挂载内部对象，例如：\r\n          // app.config.globalProperties.$XModal = VXETable.modal\r\n          // app.config.globalProperties.$XPrint = VXETable.print\r\n          // app.config.globalProperties.$XSaveFile = VXETable.saveFile\r\n          // app.config.globalProperties.$XReadFile = VXETable.readFile\r\n        }\r\n\r\n        createApp(App).use(useTable).mount('#app')\r\n      "),g=Object(t["createTextVNode"])("\r\n    "),O=Object(t["createElementVNode"])("p",{class:"tip"},[Object(t["createTextVNode"])(" 方式2：如果您使用了 babel，借助插件 "),Object(t["createElementVNode"])("a",{class:"link",href:"https://www.npmjs.com/package/babel-plugin-import",target:"_blank"},"babel-plugin-import"),Object(t["createTextVNode"])(" 可以实现按需加载模块，减少文件体积。 ")],-1),x=Object(t["createTextVNode"])("      "),V=Object(t["createTextVNode"])("\r\n        npm install babel-plugin-import -D\r\n      "),T=Object(t["createTextVNode"])("\r\n      "),j=Object(t["createElementVNode"])("div",null,"修改文件 .babelrc 或 babel.config.js",-1),N=Object(t["createTextVNode"])("\r\n      "),f=Object(t["createTextVNode"])('\r\n        {\r\n          "plugins": [\r\n            [\r\n              "import",\r\n              {\r\n                "libraryName": "vxe-table",\r\n                "style": true // 样式是否也按需加载\r\n              }\r\n            ]\r\n          ]\r\n        }\r\n      '),v=Object(t["createTextVNode"])("\r\n      "),h=Object(t["createElementVNode"])("div",null,"最后这样按需引入模块，就可以减小体积了",-1),E=Object(t["createTextVNode"])("\r\n      "),C=Object(t["createTextVNode"])("\r\n        import { App, createApp } = 'vue'\r\n        import 'xe-utils'\r\n        import {\r\n          // 核心\r\n          VXETable,\r\n\r\n          // 表格功能\r\n          Header,\r\n          // Footer,\r\n          // Icon,\r\n          // Filter,\r\n          // Edit,\r\n          // Menu,\r\n          // Export,\r\n          // Keyboard,\r\n          // Validator,\r\n\r\n          // 可选组件\r\n          Column,\r\n          // Colgroup,\r\n          // Grid,\r\n          // Tooltip,\r\n          // Toolbar,\r\n          // Pager,\r\n          // Form,\r\n          // FormItem,\r\n          // FormGather,\r\n          // Checkbox,\r\n          // CheckboxGroup,\r\n          // Radio,\r\n          // RadioGroup,\r\n          // RadioButton,\r\n          // Switch,\r\n          // Input,\r\n          // Select,\r\n          // Optgroup,\r\n          // Option,\r\n          // Textarea,\r\n          // Button,\r\n          // Modal,\r\n          // List,\r\n          // Pulldown,\r\n\r\n          // 表格\r\n          Table\r\n        } from 'vxe-table'\r\n        import zhCN from 'vxe-table/lib/locale/lang/zh-CN'\r\n\r\n        // 按需加载的方式默认是不带国际化的，自定义国际化需要自行解析占位符 '{0}'，例如：\r\n        VXETable.setup({\r\n          i18n: (key, args) => XEUtils.toFormatString(XEUtils.get(zhCN, key), args)\r\n        })\r\n\r\n        function useTable (app: App) {\r\n          // 表格功能\r\n          app.use(Header)\r\n          // .use(Footer)\r\n          // .use(Icon)\r\n          // .use(Filter)\r\n          // .use(Edit)\r\n          // .use(Menu)\r\n          // .use(Export)\r\n          // .use(Keyboard)\r\n          // .use(Validator)\r\n\r\n          // 可选组件\r\n          .use(Column)\r\n          // .use(Colgroup)\r\n          // .use(Grid)\r\n          // .use(Tooltip)\r\n          // .use(Toolbar)\r\n          // .use(Pager)\r\n          // .use(Form)\r\n          // .use(FormItem)\r\n          // .use(FormGather)\r\n          // .use(Checkbox)\r\n          // .use(CheckboxGroup)\r\n          // .use(Radio)\r\n          // .use(RadioGroup)\r\n          // .use(RadioButton)\r\n          // .use(Switch)\r\n          // .use(Input)\r\n          // .use(Select)\r\n          // .use(Optgroup)\r\n          // .use(Option)\r\n          // .use(Textarea)\r\n          // .use(Button)\r\n          // .use(Modal)\r\n          // .use(List)\r\n          // .use(Pulldown)\r\n\r\n          // 安装表格\r\n          .use(Table)\r\n\r\n          // 给 vue 实例挂载内部对象，例如：\r\n          // app.config.globalProperties.$XModal = VXETable.modal\r\n          // app.config.globalProperties.$XPrint = VXETable.print\r\n          // app.config.globalProperties.$XSaveFile = VXETable.saveFile\r\n          // app.config.globalProperties.$XReadFile = VXETable.readFile\r\n        }\r\n\r\n        createApp(App).use(useTable).mount('#app')\r\n      "),F=Object(t["createTextVNode"])("\r\n    ");function w(e,r){var n=Object(t["resolveComponent"])("pre-code");return Object(t["openBlock"])(),Object(t["createElementBlock"])("div",null,[Object(t["createElementVNode"])("h2",null,Object(t["toDisplayString"])(e.$t("app.aside.nav.use")),1),o,Object(t["createElementVNode"])("pre",null,[a,Object(t["createVNode"])(n,{class:"shell"},{default:Object(t["withCtx"])((function(){return[l]})),_:1}),u,i,s,Object(t["createVNode"])(n,{class:"typescript"},{default:Object(t["withCtx"])((function(){return[c]})),_:1}),p,b,d,Object(t["createVNode"])(n,{class:"typescript"},{default:Object(t["withCtx"])((function(){return[m]})),_:1}),g]),O,Object(t["createElementVNode"])("pre",null,[x,Object(t["createVNode"])(n,{class:"shell"},{default:Object(t["withCtx"])((function(){return[V]})),_:1}),T,j,N,Object(t["createVNode"])(n,{class:"typescript"},{default:Object(t["withCtx"])((function(){return[f]})),_:1}),v,h,E,Object(t["createVNode"])(n,{class:"typescript"},{default:Object(t["withCtx"])((function(){return[C]})),_:1}),F])])}var y=n("6b0d"),X=n.n(y);const k={},P=X()(k,[["render",w]]);r["default"]=P}}]);