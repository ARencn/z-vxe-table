(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c515d"],{"3e1f":function(e,t,n){"use strict";n.r(t);n("b0c0");var r=n("7a23"),o={class:"tip"},a=Object(r["createTextVNode"])("数据代理、固定列、服务端排序、服务端筛选、服务端分页，导出不分页的所有数据，对于分页场景下，如果想要保留选中状态，可以通过设置 "),i=Object(r["createTextVNode"])(" 的 "),l=Object(r["createTextVNode"])(" 属性"),s=Object(r["createElementVNode"])("span",{style:{color:"red"}},[Object(r["createElementVNode"])("img",{src:"https://pic2.zhimg.com/50/v2-f7031359103859e1ed38559715ef5f3f_hd.gif"}),Object(r["createElementVNode"])("p",null,"没有更多数据了！")],-1),c={class:"demo-code"},d=Object(r["createTextVNode"])("      "),u=Object(r["createTextVNode"])("\r\n      "),m=Object(r["createTextVNode"])("\r\n    ");function f(e,t,n,f,p,b){var v=Object(r["resolveComponent"])("table-api-link"),x=Object(r["resolveComponent"])("vxe-input"),g=Object(r["resolveComponent"])("vxe-form-item"),h=Object(r["resolveComponent"])("vxe-button"),y=Object(r["resolveComponent"])("vxe-form"),j=Object(r["resolveComponent"])("vxe-grid"),O=Object(r["resolveComponent"])("pre-code");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",null,[Object(r["createElementVNode"])("p",o,[a,Object(r["createVNode"])(v,{prop:"radio-config"}),i,Object(r["createVNode"])(v,{prop:"reserve"}),l]),Object(r["createVNode"])(j,Object(r["mergeProps"])({ref:"xGrid"},e.gridOptions),{toolbar_buttons:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(y,{data:e.formData,onSubmit:e.searchEvent,onReset:e.resetEvent},{default:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(g,{field:"name"},{default:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(x,{modelValue:e.formData.name,"onUpdate:modelValue":t[0]||(t[0]=function(t){return e.formData.name=t}),type:"text",placeholder:"请输入名称"},null,8,["modelValue"])]})),_:1}),Object(r["createVNode"])(g,null,{default:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(h,{type:"submit",status:"primary",content:"查询"}),Object(r["createVNode"])(h,{type:"reset",content:"重置"})]})),_:1})]})),_:1},8,["data","onSubmit","onReset"])]})),empty:Object(r["withCtx"])((function(){return[s]})),_:1},16),Object(r["createElementVNode"])("p",c,Object(r["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(r["createElementVNode"])("pre",null,[d,Object(r["createVNode"])(O,{class:"xml"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),u,Object(r["createVNode"])(O,{class:"typescript"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),m])])}n("4e82"),n("d3b7"),n("159b"),n("ddb0"),n("a15b"),n("99af"),n("a9e3");var p=n("5502"),b=n("c695"),v=n.n(b),x=Object(r["defineComponent"])({setup:function(){var e=Object(p["b"])(),t=Object(r["computed"])((function(){return e.state.serveApiUrl})),n=Object(r["ref"])({}),o=function(){var e=n.value;e.commitProxy("query")},a=function(){var e=n.value;e.commitProxy("reload")},i=Object(r["reactive"])({name:""}),l=Object(r["reactive"])({resizable:!0,showOverflow:!0,border:"inner",height:548,rowId:"id",printConfig:{columns:[{field:"name"},{field:"email"},{field:"nickname"},{field:"age"},{field:"amount"}]},sortConfig:{trigger:"cell",remote:!0,defaultSort:{field:"name",order:"desc"}},filterConfig:{remote:!0},pagerConfig:{pageSize:15,pageSizes:[5,15,20,50,100,200,500,1e3]},exportConfig:{type:"xlsx",types:["xlsx","csv","html","xml","txt"],modes:["current","all"]},radioConfig:{labelField:"id",reserve:!0,highlight:!0},proxyConfig:{seq:!0,sort:!0,filter:!0,props:{result:"result",total:"page.total"},ajax:{query:function(e){var n=e.page,r=e.sorts,o=e.filters,a=Object.assign({},i),l=r[0];return l&&(a.sort=l.property,a.order=l.order),o.forEach((function(e){var t=e.property,n=e.values;a[t]=n.join(",")})),fetch("".concat(t.value,"/api/pub/page/list/").concat(n.pageSize,"/").concat(n.currentPage,"?").concat(v.a.serialize(a))).then((function(e){return e.json()}))},queryAll:function(){return fetch("".concat(t.value,"/api/pub/all")).then((function(e){return e.json()}))}}},toolbarConfig:{export:!0,print:!0,custom:!0,slots:{buttons:"toolbar_buttons"}},columns:[{type:"seq",width:60,fixed:"left"},{type:"radio",title:"ID",width:120,fixed:"left"},{field:"name",title:"Name",minWidth:160,sortable:!0},{field:"email",title:"Email",minWidth:160},{field:"nickname",title:"Nickname",sortable:!0,minWidth:160},{field:"age",title:"Age",visible:!1,sortable:!0,width:100},{field:"role",title:"Role",sortable:!0,minWidth:160,filters:[{label:"前端开发",value:"前端",checked:!0},{label:"后端开发",value:"后端"},{label:"测试",value:"测试"},{label:"程序员鼓励师",value:"程序员鼓励师"}],filterMultiple:!1},{field:"amount",title:"Amount",width:140,formatter:function(e){var t=e.cellValue;return t?"￥".concat(v.a.commafy(Number(t),{digits:2})):""}},{field:"updateDate",title:"Update Date",visible:!1,width:160,sortable:!0,formatter:function(e){var t=e.cellValue;return v.a.toDateString(t,"yyyy-MM-dd HH:ss:mm")}},{field:"createDate",title:"Create Date",visible:!1,width:160,sortable:!0,formatter:function(e){var t=e.cellValue;return v.a.toDateString(t,"yyyy-MM-dd")}}]});return{xGrid:n,formData:i,gridOptions:l,searchEvent:o,resetEvent:a,demoCodes:['\n        <vxe-grid ref="xGrid" v-bind="gridOptions">\n\n          \x3c!--将表单放在工具栏中--\x3e\n          <template #toolbar_buttons>\n            <vxe-form :data="formData" @submit="searchEvent" @reset="resetEvent">\n              <vxe-form-item field="name">\n                <template #default>\n                  <vxe-input v-model="formData.name" type="text" placeholder="请输入名称"></vxe-input>\n                </template>\n              </vxe-form-item>\n              <vxe-form-item>\n                <template #default>\n                  <vxe-button type="submit" status="primary" content="查询"></vxe-button>\n                  <vxe-button type="reset" content="重置"></vxe-button>\n                </template>\n              </vxe-form-item>\n            </vxe-form>\n          </template>\n\n          \x3c!--自定义空数据模板--\x3e\n          <template #empty>\n            <span style="color: red;">\n              <img src="https://pic2.zhimg.com/50/v2-f7031359103859e1ed38559715ef5f3f_hd.gif">\n              <p>没有更多数据了！</p>\n            </span>\n          </template>\n        </vxe-grid>\n        ',"\n        import { defineComponent, reactive, ref, computed } from 'vue'\n        import { useStore } from 'vuex'\n        import { VxeGridInstance, VxeGridProps } from 'vxe-table'\n        import XEUtils from 'xe-utils'\n\n        export default defineComponent({\n          setup () {\n            const store = useStore()\n            const serveApiUrl = computed(() => store.state.serveApiUrl)\n    \n            const xGrid = ref({} as VxeGridInstance)\n\n            const searchEvent = () => {\n              const $grid = xGrid.value\n              $grid.commitProxy('query')\n            }\n\n            const formData = reactive({\n              name: ''\n            })\n\n            const gridOptions = reactive<VxeGridProps>({\n              resizable: true,\n              showOverflow: true,\n              border: 'inner',\n              height: 548,\n              rowId: 'id',\n              printConfig: {\n                columns: [\n                  { field: 'name' },\n                  { field: 'email' },\n                  { field: 'nickname' },\n                  { field: 'age' },\n                  { field: 'amount' }\n                ]\n              },\n              sortConfig: {\n                trigger: 'cell',\n                remote: true,\n                defaultSort: {\n                  field: 'name',\n                  order: 'desc'\n                }\n              },\n              filterConfig: {\n                remote: true\n              },\n              pagerConfig: {\n                pageSize: 15,\n                pageSizes: [5, 15, 20, 50, 100, 200, 500, 1000]\n              },\n              exportConfig: {\n                // 默认选中类型\n                type: 'xlsx',\n                // 局部自定义类型\n                types: ['xlsx', 'csv', 'html', 'xml', 'txt'],\n                // 自定义数据量列表\n                modes: ['current', 'all']\n              },\n              radioConfig: {\n                labelField: 'id',\n                reserve: true,\n                highlight: true\n              },\n              proxyConfig: {\n                seq: true, // 启用动态序号代理，每一页的序号会根据当前页数变化\n                sort: true, // 启用排序代理，当点击排序时会自动触发 query 行为\n                filter: true, // 启用筛选代理，当点击筛选时会自动触发 query 行为\n                // 对应响应结果 { result: [], page: { total: 100 } }\n                props: {\n                  result: 'result', // 配置响应结果列表字段\n                  total: 'page.total' // 配置响应结果总页数字段\n                },\n                ajax: {\n                  // 接收 Promise 对象\n                  query: ({ page, sorts, filters }) => {\n                    const queryParams: any = Object.assign({}, formData)\n                    // 处理排序条件\n                    const firstSort = sorts[0]\n                    if (firstSort) {\n                      queryParams.sort = firstSort.property\n                      queryParams.order = firstSort.order\n                    }\n                    // 处理筛选条件\n                    filters.forEach(({ property, values }) => {\n                      queryParams[property] = values.join(',')\n                    })\n                    return fetch(`${serveApiUrl.value}/api/pub/page/list/${page.pageSize}/${page.currentPage}?${XEUtils.serialize(queryParams)}`).then(response => response.json())\n                  },\n                  // 被某些特殊功能所触发，例如：导出数据 mode=all 时，会触发该方法并对返回的数据进行导出\n                  queryAll: () => fetch(`${serveApiUrl.value}/api/pub/all`).then(response => response.json())\n                }\n              },\n              toolbarConfig: {\n                export: true,\n                print: true,\n                custom: true,\n                slots: {\n                  buttons: 'toolbar_buttons'\n                }\n              },\n              columns: [\n                { type: 'seq', width: 60, fixed: 'left' },\n                { type: 'radio', title: 'ID', width: 120, fixed: 'left' },\n                { field: 'name', title: 'Name', minWidth: 160, sortable: true },\n                { field: 'email', title: 'Email', minWidth: 160 },\n                { field: 'nickname', title: 'Nickname', sortable: true, minWidth: 160 },\n                { field: 'age', title: 'Age', visible: false, sortable: true, width: 100 },\n                {\n                  field: 'role',\n                  title: 'Role',\n                  sortable: true,\n                  minWidth: 160,\n                  filters: [\n                    { label: '前端开发', value: '前端', checked: true },\n                    { label: '后端开发', value: '后端' },\n                    { label: '测试', value: '测试' },\n                    { label: '程序员鼓励师', value: '程序员鼓励师' }\n                  ],\n                  filterMultiple: false\n                },\n                {\n                  field: 'amount',\n                  title: 'Amount',\n                  width: 140,\n                  formatter ({ cellValue }) {\n                    return cellValue ? `￥${XEUtils.commafy(Number(cellValue), { digits: 2 })}` : ''\n                  }\n                },\n                {\n                  field: 'updateDate',\n                  title: 'Update Date',\n                  visible: false,\n                  width: 160,\n                  sortable: true,\n                  formatter ({ cellValue }) {\n                    return XEUtils.toDateString(cellValue, 'yyyy-MM-dd HH:ss:mm')\n                  }\n                },\n                {\n                  field: 'createDate',\n                  title: 'Create Date',\n                  visible: false,\n                  width: 160,\n                  sortable: true,\n                  formatter ({ cellValue }) {\n                    return XEUtils.toDateString(cellValue, 'yyyy-MM-dd')\n                  }\n                }\n              ]\n            })\n            \n            return {\n              xGrid,\n              formData,\n              gridOptions,\n              searchEvent\n            }\n          }\n        }\n        "]}}}),g=n("6b0d"),h=n.n(g);const y=h()(x,[["render",f]]);t["default"]=y}}]);