(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21e207"],{d3df:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._m(0),n("vxe-table",{attrs:{"max-height":"600",loading:e.loading,data:e.tableData,"sort-config":{remote:!0},"tree-config":{children:"children"}},on:{"sort-change":e.sortChangeEvent}},[n("vxe-table-column",{attrs:{field:"id",title:"ID",width:"80"}}),n("vxe-table-column",{attrs:{field:"name",title:"名称","tree-node":""}}),n("vxe-table-column",{attrs:{field:"size",title:"大小",width:"140"}}),n("vxe-table-column",{attrs:{field:"type",title:"类型",width:"140"}}),n("vxe-table-column",{attrs:{field:"date",title:"修改日期",width:"260",sortable:""}})],1),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},i=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticClass:"tip"},[e._v(" 实现树结构深层排序"),n("br")])}],r=(n("d3b7"),n("159b"),n("a630"),n("3ca3"),n("c695")),o=n.n(r),l=n("1487"),d=n.n(l),s={data:function(){return{filterName:"",loading:!1,originData:[],tableData:[],demoCodes:['\n        <vxe-table\n          max-height="600"\n          :loading="loading"\n          :data="tableData"\n          :sort-config="{remote: true}"\n          :tree-config="{children: \'children\'}"\n          @sort-change="sortChangeEvent">\n          <vxe-table-column field="id" title="ID" width="80"></vxe-table-column>\n          <vxe-table-column field="name" title="名称" tree-node></vxe-table-column>\n          <vxe-table-column field="size" title="大小" width="140"></vxe-table-column>\n          <vxe-table-column field="type" title="类型" width="140"></vxe-table-column>\n          <vxe-table-column field="date" title="修改日期" width="260" sortable></vxe-table-column>\n        </vxe-table>\n        ',"\n        export default {\n          data () {\n            return {\n              loading: false,\n              originData: [],\n              tableData: []\n            }\n          },\n          created () {\n            this.originData = XEUtils.toTreeArray(window.MOCK_TREE_DATA_LIST)\n            this.findList()\n          },\n          methods: {\n            // 模拟后台接口\n            findList (order) {\n              this.loading = true\n              setTimeout(() => {\n                this.loading = false\n                // 将有关联的列表转成树结构\n                if (order === 'asc') {\n                  this.tableData = XEUtils.toArrayTree(this.originData, { key: 'id', parentKey: 'parentId', sortKey: 'date', reverse: false })\n                } else if (order === 'desc') {\n                  this.tableData = XEUtils.toArrayTree(this.originData, { key: 'id', parentKey: 'parentId', sortKey: 'date', reverse: true })\n                } else {\n                  this.tableData = XEUtils.toArrayTree(this.originData, { key: 'id', parentKey: 'parentId' })\n                }\n              }, 300)\n            },\n            sortChangeEvent ({ column, property, order }) {\n              this.findList(order)\n            }\n        }"]}},created:function(){this.originData=o.a.toTreeArray(o.a.clone(window.MOCK_TREE_DATA_LIST,!0)),this.findList()},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){d.a.highlightBlock(e)}))},methods:{findList:function(e){var t=this;this.loading=!0,setTimeout((function(){t.loading=!1,t.tableData="asc"===e?o.a.toArrayTree(t.originData,{key:"id",parentKey:"parentId",sortKey:"date",reverse:!1}):"desc"===e?o.a.toArrayTree(t.originData,{key:"id",parentKey:"parentId",sortKey:"date",reverse:!0}):o.a.toArrayTree(t.originData,{key:"id",parentKey:"parentId"})}),300)},sortChangeEvent:function(e){var t=e.order;this.findList(t)}}},c=s,h=n("2877"),u=Object(h["a"])(c,a,i,!1,null,null,null);t["default"]=u.exports}}]);