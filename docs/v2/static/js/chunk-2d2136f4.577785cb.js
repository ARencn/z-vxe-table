(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2136f4"],{ad50:function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._m(0),n("vxe-grid",{ref:"xGrid",attrs:{border:"","show-overflow":"","keep-source":"",height:"460",loading:e.loading,data:e.tableData,columns:e.tableColumn,"toolbar-config":e.tableToolbar,"edit-config":{trigger:"click",mode:"row"}},on:{"checkbox-change":e.checkboxChangeEvent,"checkbox-all":e.checkboxChangeEvent},scopedSlots:e._u([{key:"top",fn:function(){return[n("Alert",{attrs:{type:"warning",closable:!1,"show-icon":""}},[e._v("已选择 "+e._s(e.selectRecords.length)+" 项")])]},proxy:!0},{key:"toolbar_buttons",fn:function(){return[n("el-button",{on:{click:e.insertEvent}},[e._v("新增")]),n("el-button",{on:{click:e.saveEvent}},[e._v("保存")])]},proxy:!0}])}),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")])],1)},o=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",{staticClass:"tip"},[e._v(" 具体兼容请查看 "),n("a",{staticClass:"link",attrs:{href:"https://github.com/x-extends/vxe-table-plugin-iview/tree/v2",target:"_blank"}},[e._v("vxe-table-plugin-iview")]),e._v(" 插件的 API"),n("br"),n("span",{staticClass:"red"},[e._v("（注：该示例仅供参考，具体逻辑请自行实现）")])])}],r=(n("fb6a"),n("d3b7"),n("159b"),n("a630"),n("3ca3"),n("99af"),n("628a")),l=n.n(r),a=n("1487"),d=n.n(a),s={data:function(){var e=["前端","后端","开发","测试"];return{loading:!1,tableData:[],selectRecords:[],tableColumn:[{type:"checkbox",width:60},{type:"seq",title:"Number",width:80},{field:"name",title:"Number",minWidth:140,editRender:{name:"Input"}},{field:"role",title:"AutoComplete",width:160,editRender:{name:"AutoComplete",props:{data:e,filterMethod:this.roleFilterMethod}}},{field:"age",title:"InputNumber",width:160,editRender:{name:"InputNumber",props:{max:35,min:18}}},{field:"sex",title:"Select",width:140,editRender:{name:"Select",options:[]}},{field:"sex1",title:"Select（不建议放在单元格）",width:260,editRender:{name:"Select",options:[],props:{multiple:!0,clearable:!0}}},{field:"sex2",title:"Select",width:140,editRender:{name:"Select",optionGroups:[],props:{clearable:!0}}},{field:"region",title:"Cascader",width:200,editRender:{name:"Cascader",props:{data:[]}}},{field:"date",title:"DatePicker",width:200,editRender:{name:"DatePicker",props:{type:"date",format:"yyyy/MM/dd"}}},{field:"date1",title:"TimePicker",width:200,editRender:{name:"TimePicker",props:{type:"time"}}},{field:"flag",title:"iSwitch",width:100,cellRender:{name:"iSwitch"}},{field:"rate",title:"Rate",width:200,cellRender:{name:"Rate"}}],tableToolbar:{slots:{buttons:"toolbar_buttons"}},demoCodes:['\n        <vxe-grid\n          border\n          show-overflow\n          keep-source\n          ref="xGrid"\n          height="460"\n          :loading="loading"\n          :data="tableData"\n          :columns="tableColumn"\n          :edit-config="{trigger: \'click\', mode: \'row\'}"\n          @checkbox-change="checkboxChangeEvent"\n          @checkbox-all="checkboxChangeEvent">\n          <template v-slot:top>\n            <Alert type="warning" :closable="false" show-icon>已选择 {{ selectRecords.length }} 项</Alert>\n          </template>\n          <template v-slot:toolbar_buttons>\n            <el-button @click="insertEvent">新增</el-button>\n            <el-button @click="saveEvent">保存</el-button>\n          </template>\n        </vxe-grid>\n        ',"\n        export default {\n          data () {\n            let restaurants = ['前端', '后端', '开发', '测试']\n            return {\n              loading: false,\n              tableData: [],\n              selectRecords: [],\n              tableColumn: [\n                { type: 'checkbox', width: 60 },\n                { type: 'seq', title: 'Number', width: 80 },\n                { field: 'name', title: 'Number', minWidth: 140, editRender: { name: 'Input' } },\n                { field: 'role', title: 'AutoComplete', width: 160, editRender: { name: 'AutoComplete', props: { data: restaurants, filterMethod: this.roleFilterMethod } } },\n                { field: 'age', title: 'InputNumber', width: 160, editRender: { name: 'InputNumber', props: { max: 35, min: 18 } } },\n                { field: 'sex', title: 'Select', width: 140, editRender: { name: 'Select', options: [] } },\n                { field: 'sex1', title: 'Select（不建议放在单元格）', width: 260, editRender: { name: 'Select', options: [], props: { multiple: true, clearable: true } } },\n                { field: 'sex2', title: 'Select', width: 140, editRender: { name: 'Select', optionGroups: [], props: { clearable: true } } },\n                { field: 'region', title: 'Cascader', width: 200, editRender: { name: 'Cascader', props: { data: [] } } },\n                { field: 'date', title: 'DatePicker', width: 200, editRender: { name: 'DatePicker', props: { type: 'date', format: 'yyyy/MM/dd' } } },\n                { field: 'date1', title: 'TimePicker', width: 200, editRender: { name: 'TimePicker', props: { type: 'time' } } },\n                { field: 'flag', title: 'iSwitch', width: 100, cellRender: { name: 'iSwitch' } },\n                { field: 'rate', title: 'Rate', width: 200, cellRender: { name: 'Rate' } }\n              ],\n              tableToolbar: {\n                slots: {\n                  buttons: 'toolbar_buttons'\n                }\n              }\n            }\n          },\n          created () {\n            this.loading = true\n            setTimeout(() => {\n              this.tableData = window.MOCK_DATA_LIST.slice(0, 10)\n              this.loading = false\n            }, 500)\n            this.findSexList()\n            this.findRegionList()\n            this.findSexGroupList()\n          },\n          methods: {\n            findSexList () {\n              return XEAjax.get('/api/conf/sex/list').then(data => {\n                this.tableColumn[5].editRender.options = data\n                this.tableColumn[6].editRender.options = data\n              })\n            },\n            findRegionList () {\n              return XEAjax.get('/api/conf/region/list').then(data => {\n                this.tableColumn[8].editRender.props.data = data\n              })\n            },\n            findSexGroupList () {\n              let sexGroupList = [\n                {\n                  label: '分组1',\n                  options: [\n                    {\n                      label: '男',\n                      value: '1'\n                    }\n                  ]\n                },\n                {\n                  label: '分组2',\n                  options: [\n                    {\n                      label: '女',\n                      value: '0'\n                    }\n                  ]\n                }\n              ]\n              this.tableColumn[7].editRender.optionGroups = sexGroupList\n            },\n            insertEvent () {\n              let xGrid = this.$refs.xGrid\n              let record = {\n                role: '',\n                age: 18,\n                sex1: [],\n                region: [],\n                flag: false,\n                rate: 2\n              }\n              xGrid.insert(record).then(({ row }) => xGrid.setActiveRow(row))\n            },\n            saveEvent () {\n              let { insertRecords, removeRecords, updateRecords } = this.$refs.xGrid.getRecordset()\n              if (insertRecords.length || removeRecords.length || updateRecords.length) {\n                this.$alert(`insertRecords=${insertRecords.length}; removeRecords=${removeRecords.length}; updateRecords=${updateRecords.length}`)\n              } else {\n                this.$alert('数据未改动！')\n              }\n            },\n            roleFilterMethod  (value, option) {\n              return option.toUpperCase().indexOf((value || '').toUpperCase()) !== -1\n            },\n            checkboxChangeEvent () {\n              this.selectRecords = this.$refs.xGrid.getCheckboxRecords()\n            }\n          }\n        }\n        "]}},created:function(){var e=this;this.loading=!0,setTimeout((function(){e.tableData=window.MOCK_DATA_LIST.slice(0,10),e.loading=!1}),500),this.findSexList(),this.findRegionList(),this.findSexGroupList()},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){d.a.highlightBlock(e)}))},methods:{findSexList:function(){var e=this;return l.a.get("/api/conf/sex/list").then((function(t){e.tableColumn[5].editRender.options=t,e.tableColumn[6].editRender.options=t}))},findRegionList:function(){var e=this;return l.a.get("/api/conf/region/list").then((function(t){e.tableColumn[8].editRender.props.data=t}))},findSexGroupList:function(){var e=[{label:"分组1",options:[{label:"男",value:"1"}]},{label:"分组2",options:[{label:"女",value:"0"}]}];this.tableColumn[7].editRender.optionGroups=e},insertEvent:function(){var e=this.$refs.xGrid,t={role:"",age:18,sex1:[],region:[],flag:!1,rate:2};e.insert(t).then((function(t){var n=t.row;return e.setActiveRow(n)}))},saveEvent:function(){var e=this.$refs.xGrid.getRecordset(),t=e.insertRecords,n=e.removeRecords,i=e.updateRecords;t.length||n.length||i.length?this.$alert("insertRecords=".concat(t.length,"; removeRecords=").concat(n.length,"; updateRecords=").concat(i.length)):this.$alert("数据未改动！")},roleFilterMethod:function(e,t){return-1!==t.toUpperCase().indexOf((e||"").toUpperCase())},checkboxChangeEvent:function(){this.selectRecords=this.$refs.xGrid.getCheckboxRecords()}}},c=s,h=n("2877"),p=Object(h["a"])(c,i,o,!1,null,null,null);t["default"]=p.exports}}]);