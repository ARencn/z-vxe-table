(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0cefa0"],{"626d":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("p",{staticClass:"tip"},[e._v("多选树表格")]),n("vxe-virtual-tree",{attrs:{resizable:"","row-key":"","row-id":"id","checkbox-config":{checkField:"checked",halfField:"indeterminate"},"tree-config":{children:"children"},data:e.tableData1,columns:e.tableColumn1},on:{"checkbox-change":e.selectChangeEvent}}),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[0]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[1]))]),e._v("\n  ")]),n("p",{staticClass:"tip"},[e._v("默认选中，通过指定 "),n("virtual-tree-api-link",{attrs:{prop:"checkRowKeys"}}),e._v(" 设置默认选中的行")],1),n("vxe-virtual-tree",{attrs:{resizable:"","row-key":"","row-id":"id",data:e.tableData2,columns:e.tableColumn2,"tree-config":{children:"children"},"checkbox-config":{labelField:"name",checkRowKeys:["122000","20000"],checkField:"checked",halfField:"indeterminate"}},on:{"checkbox-change":e.selectChangeEvent}}),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[2]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[3]))]),e._v("\n  ")]),n("p",{staticClass:"tip"},[e._v("通过 "),n("virtual-tree-api-link",{attrs:{prop:"checkStrictly"}}),e._v(" 设置父子节点不互相关联，默认不显示头部复选框，可以通过 checkbox-config={"),n("virtual-tree-api-link",{attrs:{prop:"showHeader"}}),e._v("} 设置")],1),n("vxe-virtual-tree",{attrs:{resizable:"","row-key":"","row-id":"id",data:e.tableData3,columns:e.tableColumn3,"tree-config":{children:"children"},"checkbox-config":{labelField:"name",checkStrictly:!0,checkField:"checked",halfField:"indeterminate"}}}),n("p",{staticClass:"demo-code"},[e._v(e._s(e.$t("app.body.button.showCode")))]),n("pre",[e._v("    "),n("code",{staticClass:"xml"},[e._v(e._s(e.demoCodes[4]))]),e._v("\n    "),n("code",{staticClass:"javascript"},[e._v(e._s(e.demoCodes[5]))]),e._v("\n  ")])],1)},l=[],i=(n("d3b7"),n("159b"),n("a630"),n("3ca3"),n("caad"),n("c695")),c=n.n(i),o=n("1487"),d=n.n(o),r={data:function(){return{tableData1:[],tableData2:[],tableData3:[],tableColumn1:[{type:"checkbox",treeNode:!0},{field:"name",title:"Name"},{field:"size",title:"Size"},{field:"type",title:"Type"},{field:"date",title:"Date"}],tableColumn2:[{type:"checkbox",title:"Name",width:400,treeNode:!0},{field:"size",title:"Size"},{field:"type",title:"Type"},{field:"date",title:"Date"}],tableColumn3:[{type:"checkbox",title:"Name",width:280,treeNode:!0},{field:"size",title:"Size"},{field:"type",title:"Type"},{field:"date",title:"Date"}],demoCodes:['\n        <vxe-virtual-tree\n          resizable\n          row-key\n          row-id="id"\n          :checkbox-config="{checkField: \'checked\', halfField: \'indeterminate\'}"\n          :tree-config="{children: \'children\'}"\n          :data="tableData1"\n          :columns="tableColumn1"\n          @checkbox-change="selectChangeEvent">\n        </vxe-virtual-tree>\n        ',"\n        export default {\n          data () {\n            return {\n              tableData1: [],\n              tableColumn: [\n                { type: 'checkbox', treeNode: true },\n                { field: 'name', title: 'Name' },\n                { field: 'size', title: 'Size' },\n                { field: 'type', title: 'Type' },\n                { field: 'date', title: 'Date' }\n              ]\n            }\n          },\n          created () {\n            this.tableData1 = window.MOCK_TREE_DATA_LIST\n          },\n          methods: {\n            selectChangeEvent ({ records }) {\n              console.info(`勾选${records.length}个树形节点`, records)\n            }\n          }\n        }\n        ","\n        <vxe-virtual-tree\n          resizable\n          row-key\n          row-id=\"id\"\n          :data=\"tableData2\"\n          :columns=\"tableColumn2\"\n          :tree-config=\"{children: 'children'}\"\n          :checkbox-config=\"{labelField: 'name', checkRowKeys: ['122000', '20000'], checkField: 'checked', halfField: 'indeterminate'}\"\n          @checkbox-change=\"selectChangeEvent\">\n        </vxe-virtual-tree>\n        ","\n        export default {\n          data () {\n            return {\n              tableData2: [],\n              tableColumn: [\n                { type: 'checkbox', title: 'Name', width: 400, treeNode: true },\n                { field: 'size', title: 'Size' },\n                { field: 'type', title: 'Type' },\n                { field: 'date', title: 'Date' }\n              ]\n            }\n          },\n          created () {\n            this.tableData2 = window.MOCK_TREE_DATA_LIST\n          },\n          methods: {\n            selectChangeEvent ({ records }) {\n              console.info(`勾选${records.length}个树形节点`, records)\n            }\n          }\n        }\n        ",'\n        <vxe-virtual-tree\n          resizable\n          row-key\n          row-id="id"\n          :data="tableData3"\n          :columns="tableColumn3"\n          :tree-config="{children: \'children\'}"\n          :checkbox-config="{labelField: \'name\', checkStrictly: true, checkField: \'checked\', halfField: \'indeterminate\'}">\n        </vxe-virtual-tree>\n        ',"\n        export default {\n          data () {\n            return {\n              tableData3: [],\n              tableColumn: [\n                { type: 'checkbox', title: 'Name', width: 280, treeNode: true },\n                { field: 'size', title: 'Size' },\n                { field: 'type', title: 'Type' },\n                { field: 'date', title: 'Date' }\n              ]\n            }\n          },\n          created () {\n            this.tableData3 = window.MOCK_TREE_DATA_LIST\n          }\n        }\n        "]}},created:function(){this.tableData1=c.a.clone(window.MOCK_TREE_DATA_LIST,!0),this.tableData2=c.a.clone(window.MOCK_TREE_DATA_LIST,!0),this.tableData3=c.a.clone(window.MOCK_TREE_DATA_LIST,!0)},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach((function(e){d.a.highlightBlock(e)}))},methods:{checCheckboxkMethod:function(e){var t=e.row;return!["js","mp4"].includes(t.type)},selectChangeEvent:function(e){var t=e.records;console.info("勾选".concat(t.length,"个树形节点"),t)}}},s=r,h=n("2877"),b=Object(h["a"])(s,a,l,!1,null,null,null);t["default"]=b.exports}}]);