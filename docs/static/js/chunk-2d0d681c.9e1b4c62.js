(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d681c"],{"739c":function(e,t,n){"use strict";n.r(t);var r=n("7a23"),o={class:"tip"},a=Object(r["createTextVNode"])(" 完整功能：服务端排序代理、服务端筛选代理、服务端分页代理、服务端增删改查、服务端导入导出"),i=Object(r["createElementVNode"])("br",null,null,-1),l=Object(r["createTextVNode"])(" 还可以通过配置 "),s=Object(r["createTextVNode"])(" 实现动态表单，还可以通过 "),d=Object(r["createTextVNode"])(" 或 "),c=Object(r["createTextVNode"])(" 设置标题提示信息"),p=Object(r["createElementVNode"])("br",null,null,-1),u=Object(r["createTextVNode"])(" 对于分页场景下，如果想要保留选中状态，可以通过设置 "),m=Object(r["createTextVNode"])(" 的 "),f=Object(r["createTextVNode"])(" 属性"),b=Object(r["createElementVNode"])("br",null,null,-1),g=Object(r["createTextVNode"])(" 还可以通过 "),h=Object(r["createTextVNode"])(" 设置个性化列禁止勾选"),v=Object(r["createElementVNode"])("br",null,null,-1),x=Object(r["createTextVNode"])(" 由 "),y=Object(r["createTextVNode"])(" 代理数据转换，只需要配置好数据源即可；非常简单就可以渲染一个表格，从重复写冗余的代码中解放出来 "),O={class:"demo-code"},j=Object(r["createTextVNode"])("      "),N=Object(r["createTextVNode"])("\r\n      "),C=Object(r["createTextVNode"])("\r\n    ");function V(e,t,n,V,R,S){var T=Object(r["resolveComponent"])("grid-api-link"),k=Object(r["resolveComponent"])("table-api-link"),w=Object(r["resolveComponent"])("vxe-grid"),$=Object(r["resolveComponent"])("pre-code");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",null,[Object(r["createElementVNode"])("p",o,[a,i,l,Object(r["createVNode"])(T,{prop:"form-config"}),s,Object(r["createVNode"])(T,{prop:"titlePrefix"}),d,Object(r["createVNode"])(T,{prop:"titleSuffix"}),c,p,u,Object(r["createVNode"])(k,{prop:"checkbox-config"}),m,Object(r["createVNode"])(k,{prop:"reserve"}),f,b,g,Object(r["createVNode"])(k,{prop:"checkMethod"}),h,v,x,Object(r["createVNode"])(T,{name:"vxe-grid"}),y]),Object(r["createVNode"])(w,Object(r["mergeProps"])({ref:"xGrid"},e.gridOptions),null,16),Object(r["createElementVNode"])("p",O,Object(r["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(r["createElementVNode"])("pre",null,[j,Object(r["createVNode"])($,{class:"xml"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),N,Object(r["createVNode"])($,{class:"typescript"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),C])])}n("caad"),n("4e82"),n("d3b7"),n("159b"),n("ddb0"),n("a15b"),n("99af"),n("e9c4"),n("d81d");var R=n("5502"),S=n("55db"),T=n("c695"),k=n.n(T),w=Object(r["defineComponent"])({setup:function(){var e=Object(R["b"])(),t=Object(r["computed"])((function(){return e.state.serveApiUrl})),n=Object(r["ref"])({}),o=Object(r["reactive"])({border:!0,resizable:!0,showHeaderOverflow:!0,showOverflow:!0,highlightHoverRow:!0,keepSource:!0,id:"full_edit_1",height:600,rowId:"id",customConfig:{storage:!0,checkMethod:function(e){var t=e.column;return!["nickname","role"].includes(t.property)}},printConfig:{columns:[{field:"name"},{field:"email"},{field:"nickname"},{field:"age"},{field:"amount"}]},sortConfig:{trigger:"cell",remote:!0},filterConfig:{remote:!0},pagerConfig:{pageSize:10,pageSizes:[5,10,15,20,50,100,200,500,1e3]},formConfig:{titleWidth:100,titleAlign:"right",items:[{field:"name",title:"app.body.label.name",span:8,titlePrefix:{message:"app.body.valid.rName",icon:"fa fa-exclamation-circle"},itemRender:{name:"$input",props:{placeholder:"请输入名称"}}},{field:"email",title:"邮件",span:8,titlePrefix:{useHTML:!0,message:'点击链接：<a class="link" href="https://vxetable.cn" target="_blank">vxe-table官网</a>',icon:"vxe-icon--question"},itemRender:{name:"$input",props:{placeholder:"请输入邮件"}}},{field:"nickname",title:"昵称",span:8,itemRender:{name:"$input",props:{placeholder:"请输入昵称"}}},{field:"role",title:"角色",span:8,folding:!0,itemRender:{name:"$input",props:{placeholder:"请输入角色"}}},{field:"sex",title:"性别",span:8,folding:!0,titleSuffix:{message:"注意，必填信息！",icon:"fa fa-info-circle"},itemRender:{name:"$select",options:[]}},{field:"age",title:"年龄",span:8,folding:!0,itemRender:{name:"$input",props:{type:"number",min:1,max:120,placeholder:"请输入年龄"}}},{span:24,align:"center",collapseNode:!0,itemRender:{name:"$buttons",children:[{props:{type:"submit",content:"app.body.label.search",status:"primary"}},{props:{type:"reset",content:"app.body.label.reset"}}]}}]},toolbarConfig:{buttons:[{code:"insert_actived",name:"新增",icon:"fa fa-plus"},{code:"delete",name:"直接删除",icon:"fa fa-trash-o"},{code:"mark_cancel",name:"删除/取消",icon:"fa fa-trash-o"},{code:"save",name:"app.body.button.save",icon:"fa fa-save",status:"success"}],refresh:!0,import:!0,export:!0,print:!0,zoom:!0,custom:!0},proxyConfig:{seq:!0,sort:!0,filter:!0,form:!0,props:{result:"result",total:"page.total"},ajax:{query:function(e){var n=e.page,r=e.sorts,o=e.filters,a=e.form,i=Object.assign({},a),l=r[0];return l&&(i.sort=l.property,i.order=l.order),o.forEach((function(e){var t=e.property,n=e.values;i[t]=n.join(",")})),fetch("".concat(t.value,"/api/pub/page/list/").concat(n.pageSize,"/").concat(n.currentPage,"?").concat(k.a.serialize(i))).then((function(e){return e.json()}))},delete:function(e){var n=e.body;return fetch("".concat(t.value,"/api/pub/save"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then((function(e){return e.json()}))},save:function(e){var n=e.body;return fetch("".concat(t.value,"/api/pub/save"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then((function(e){return e.json()}))}}},columns:[{type:"checkbox",title:"ID",width:120},{field:"name",title:"Name",sortable:!0,titleHelp:{message:"名称必须填写！"},editRender:{name:"input",attrs:{placeholder:"请输入名称"}}},{field:"role",title:"Role",sortable:!0,titleHelp:{useHTML:!0,content:'点击链接：<a class="link" href="https://vxetable.cn" target="_blank">vxe-table官网</a>'},filters:[{label:"前端开发",value:"前端"},{label:"后端开发",value:"后端"},{label:"测试",value:"测试"},{label:"程序员鼓励师",value:"程序员鼓励师"}],filterMultiple:!1,editRender:{name:"input",attrs:{placeholder:"请输入角色"}}},{field:"email",title:"Email",width:160,editRender:{name:"$input",props:{placeholder:"请输入邮件"}}},{field:"nickname",title:"Nickname",editRender:{name:"input",attrs:{placeholder:"请输入昵称"}}},{field:"sex",title:"Sex",filters:[{label:"男",value:"1"},{label:"女",value:"0"}],editRender:{name:"$select",options:[],props:{placeholder:"请选择性别"}}},{field:"age",title:"Age",visible:!1,sortable:!0,editRender:{name:"$input",props:{type:"number",min:1,max:120}}},{field:"amount",title:"Amount",formatter:function(e){var t=e.cellValue;return t?"￥".concat(k.a.commafy(k.a.toNumber(t),{digits:2})):""},editRender:{name:"$input",props:{type:"float",digits:2,placeholder:"请输入数值"}}},{field:"updateDate",title:"Update Date",width:160,visible:!1,sortable:!0,formatter:function(e){var t=e.cellValue;return k.a.toDateString(t,"yyyy-MM-dd HH:ss:mm")}},{field:"createDate",title:"Create Date",width:160,visible:!1,sortable:!0,formatter:function(e){var t=e.cellValue;return k.a.toDateString(t,"yyyy-MM-dd")}}],importConfig:{remote:!0,types:["xlsx"],modes:["insert"],importMethod:function(e){var r=e.file,o=n.value,a=new FormData;return a.append("file",r),fetch("".concat(t.value,"/api/pub/import"),{method:"POST",body:a}).then((function(e){return e.json()})).then((function(e){S["a"].modal.message({content:"成功导入 ".concat(e.result.insertRows," 条记录！"),status:"success"}),o.commitProxy("query")})).catch((function(){S["a"].modal.message({content:"导入失败，请检查数据是否正确！",status:"error"})}))}},exportConfig:{remote:!0,types:["xlsx"],modes:["current","selected","all"],exportMethod:function(e){var r=e.options,o=n.value,a=o.getProxyInfo(),i={filename:r.filename,sheetName:r.sheetName,isHeader:r.isHeader,original:r.original,mode:r.mode,pager:a?a.pager:null,ids:"selected"===r.mode?r.data.map((function(e){return e.id})):[],fields:r.columns.map((function(e){return{field:e.property,title:e.title}}))};return fetch("".concat(t.value,"/api/pub/export"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then((function(e){return e.json()})).then((function(e){e.id&&(S["a"].modal.message({content:"导出成功，开始下载",status:"success"}),fetch("".concat(t.value,"/api/pub/export/download/").concat(e.id)).then((function(e){e.blob().then((function(e){S["a"].saveFile({filename:"导出数据",type:"xlsx",content:e})}))})))})).catch((function(){S["a"].modal.message({content:"导出失败！",status:"error"})}))}},checkboxConfig:{labelField:"id",reserve:!0,highlight:!0,range:!0},editRules:{name:[{required:!0,message:"app.body.valid.rName"},{min:3,max:50,message:"名称长度在 3 到 50 个字符"}],email:[{required:!0,message:"邮件必须填写"}],role:[{required:!0,message:"角色必须填写"}]},editConfig:{trigger:"click",mode:"row",showStatus:!0}});return Object(r["onMounted"])((function(){var e=[{label:"女",value:"0"},{label:"男",value:"1"}],t=o.formConfig,n=o.columns;if(n){var r=n[5];r&&r.editRender&&(r.editRender.options=e)}if(t&&t.items){var a=t.items[4];a&&a.itemRender&&(a.itemRender.options=e)}})),{xGrid:n,gridOptions:o,demoCodes:["\n        <vxe-grid ref='xGrid' v-bind=\"gridOptions\"></vxe-grid>\n        ","\n        import { defineComponent, onMounted, reactive, ref, computed } from 'vue'\n        import { useStore } from 'vuex'\n        import { VXETable, VxeGridInstance, VxeGridProps } from 'vxe-table'\n        import XEUtils from 'xe-utils'\n\n        export default defineComponent({\n          setup () {\n          const store = useStore()\n          const serveApiUrl = computed(() => store.state.serveApiUrl)\n\n            const xGrid = ref({} as VxeGridInstance)\n\n            const gridOptions = reactive<VxeGridProps>({\n              border: true,\n              resizable: true,\n              showHeaderOverflow: true,\n              showOverflow: true,\n              highlightHoverRow: true,\n              keepSource: true,\n              id: 'full_edit_1',\n              height: 600,\n              rowId: 'id',\n              customConfig: {\n                storage: true,\n                checkMethod ({ column }) {\n                  if (['nickname', 'role'].includes(column.property)) {\n                    return false\n                  }\n                  return true\n                }\n              },\n              printConfig: {\n                columns: [\n                  { field: 'name' },\n                  { field: 'email' },\n                  { field: 'nickname' },\n                  { field: 'age' },\n                  { field: 'amount' }\n                ]\n              },\n              sortConfig: {\n                trigger: 'cell',\n                remote: true\n              },\n              filterConfig: {\n                remote: true\n              },\n              pagerConfig: {\n                pageSize: 10,\n                pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000]\n              },\n              formConfig: {\n                titleWidth: 100,\n                titleAlign: 'right',\n                items: [\n                  { field: 'name', title: 'app.body.label.name', span: 8, titlePrefix: { message: 'app.body.valid.rName', icon: 'fa fa-exclamation-circle' }, itemRender: { name: '$input', props: { placeholder: '请输入名称' } } },\n                  { field: 'email', title: '邮件', span: 8, titlePrefix: { useHTML: true, message: '点击链接：<a class=\"link\" href=\"https://vxetable.cn\" target=\"_blank\">vxe-table官网</a>', icon: 'vxe-icon--question' }, itemRender: { name: '$input', props: { placeholder: '请输入邮件' } } },\n                  { field: 'nickname', title: '昵称', span: 8, itemRender: { name: '$input', props: { placeholder: '请输入昵称' } } },\n                  { field: 'role', title: '角色', span: 8, folding: true, itemRender: { name: '$input', props: { placeholder: '请输入角色' } } },\n                  { field: 'sex', title: '性别', span: 8, folding: true, titleSuffix: { message: '注意，必填信息！', icon: 'fa fa-info-circle' }, itemRender: { name: '$select', options: [] } },\n                  { field: 'age', title: '年龄', span: 8, folding: true, itemRender: { name: '$input', props: { type: 'number', min: 1, max: 120, placeholder: '请输入年龄' } } },\n                  { span: 24, align: 'center', collapseNode: true, itemRender: { name: '$buttons', children: [{ props: { type: 'submit', content: 'app.body.label.search', status: 'primary' } }, { props: { type: 'reset', content: 'app.body.label.reset' } }] } }\n                ]\n              },\n              toolbarConfig: {\n                buttons: [\n                  { code: 'insert_actived', name: '新增', icon: 'fa fa-plus' },\n                  { code: 'delete', name: '直接删除', icon: 'fa fa-trash-o' },\n                  { code: 'mark_cancel', name: '删除/取消', icon: 'fa fa-trash-o' },\n                  { code: 'save', name: 'app.body.button.save', icon: 'fa fa-save', status: 'success' }\n                ],\n                refresh: true,\n                import: true,\n                export: true,\n                print: true,\n                zoom: true,\n                custom: true\n              },\n              proxyConfig: {\n                seq: true, // 启用动态序号代理，每一页的序号会根据当前页数变化\n                sort: true, // 启用排序代理，当点击排序时会自动触发 query 行为\n                filter: true, // 启用筛选代理，当点击筛选时会自动触发 query 行为\n                form: true, // 启用表单代理，当点击表单提交按钮时会自动触发 reload 行为\n                // 对应响应结果 { result: [], page: { total: 100 } }\n                props: {\n                  result: 'result', // 配置响应结果列表字段\n                  total: 'page.total' // 配置响应结果总页数字段\n                },\n                // 只接收Promise，具体实现自由发挥\n                ajax: {\n                  // 当点击工具栏查询按钮或者手动提交指令 query或reload 时会被触发\n                  query: ({ page, sorts, filters, form }) => {\n                    const queryParams: any = Object.assign({}, form)\n                    // 处理排序条件\n                    const firstSort = sorts[0]\n                    if (firstSort) {\n                      queryParams.sort = firstSort.property\n                      queryParams.order = firstSort.order\n                    }\n                    // 处理筛选条件\n                    filters.forEach(({ property, values }) => {\n                      queryParams[property] = values.join(',')\n                    })\n                    return fetch(`${serveApiUrl.value}/api/pub/page/list/${page.pageSize}/${page.currentPage}?${XEUtils.serialize(queryParams)}`).then(response =>  response.json())\n                  },\n                  // 当点击工具栏删除按钮或者手动提交指令 delete 时会被触发\n                  delete: ({ body }) => {\n                    return fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) }).then(response => response.json())\n                  },\n                  // 当点击工具栏保存按钮或者手动提交指令 save 时会被触发\n                  save: ({ body }) => {\n                    return fetch(`${serveApiUrl.value}/api/pub/save`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) }).then(response => response.json())\n                  }\n                }\n                      },\n              columns: [\n                { type: 'checkbox', title: 'ID', width: 120 },\n                { field: 'name', title: 'Name', sortable: true, titleHelp: { message: '名称必须填写！' }, editRender: { name: 'input', attrs: { placeholder: '请输入名称' } } },\n                {\n                  field: 'role',\n                  title: 'Role',\n                  sortable: true,\n                  titleHelp: { useHTML: true, content: '点击链接：<a class=\"link\" href=\"https://vxetable.cn\" target=\"_blank\">vxe-table官网</a>' },\n                  filters: [\n                    { label: '前端开发', value: '前端' },\n                    { label: '后端开发', value: '后端' },\n                    { label: '测试', value: '测试' },\n                    { label: '程序员鼓励师', value: '程序员鼓励师' }\n                  ],\n                  filterMultiple: false,\n                  editRender: { name: 'input', attrs: { placeholder: '请输入角色' } }\n                },\n                { field: 'email', title: 'Email', width: 160, editRender: { name: '$input', props: { placeholder: '请输入邮件' } } },\n                { field: 'nickname', title: 'Nickname', editRender: { name: 'input', attrs: { placeholder: '请输入昵称' } } },\n                {\n                  field: 'sex',\n                  title: 'Sex',\n                  filters: [\n                    { label: '男', value: '1' },\n                    { label: '女', value: '0' }\n                  ],\n                  editRender: { name: '$select', options: [], props: { placeholder: '请选择性别' } }\n                },\n                { field: 'age', title: 'Age', visible: false, sortable: true, editRender: { name: '$input', props: { type: 'number', min: 1, max: 120 } } },\n                {\n                  field: 'amount',\n                  title: 'Amount',\n                  formatter ({ cellValue }) {\n                    return cellValue ? `￥${XEUtils.commafy(XEUtils.toNumber(cellValue), { digits: 2 })}` : ''\n                  },\n                  editRender:\n                  { name: '$input', props: { type: 'float', digits: 2, placeholder: '请输入数值' } }\n                },\n                {\n                  field: 'updateDate',\n                  title: 'Update Date',\n                  width: 160,\n                  visible: false,\n                  sortable: true,\n                  formatter ({ cellValue }) {\n                    return XEUtils.toDateString(cellValue, 'yyyy-MM-dd HH:ss:mm')\n                  }\n                },\n                {\n                  field: 'createDate',\n                  title: 'Create Date',\n                  width: 160,\n                  visible: false,\n                  sortable: true,\n                  formatter ({ cellValue }) {\n                    return XEUtils.toDateString(cellValue, 'yyyy-MM-dd')\n                  }\n                }\n              ],\n              importConfig: {\n                remote: true,\n                types: ['xlsx'],\n                modes: ['insert'],\n                // 自定义服务端导入\n                importMethod ({ file }) {\n                  const $grid = xGrid.value\n                  const formBody = new FormData()\n                  formBody.append('file', file)\n                  return fetch(`${serveApiUrl.value}/api/pub/import`, { method: 'POST', body: formBody }).then(response => response.json()).then(data => {\n                    VXETable.modal.message({ content: `成功导入 ${data.result.insertRows} 条记录！`, status: 'success' })\n                    // 导入完成，刷新表格\n                    $grid.commitProxy('query')\n                  }).catch(() => {\n                    VXETable.modal.message({ content: '导入失败，请检查数据是否正确！', status: 'error' })\n                  })\n                }\n              },\n              exportConfig: {\n                remote: true,\n                types: ['xlsx'],\n                modes: ['current', 'selected', 'all'],\n                // 自定义服务端导出\n                exportMethod ({ options }) {\n                  const $grid = xGrid.value\n                  const proxyInfo = $grid.getProxyInfo()\n                  // 传给服务端的参数\n                  const body = {\n                    filename: options.filename,\n                    sheetName: options.sheetName,\n                    isHeader: options.isHeader,\n                    original: options.original,\n                    mode: options.mode,\n                    pager: proxyInfo ? proxyInfo.pager : null,\n                    ids: options.mode === 'selected' ? options.data.map((item) => item.id) : [],\n                    fields: options.columns.map((column) => {\n                      return {\n                        field: column.property,\n                        title: column.title\n                      }\n                    })\n                  }\n                  // 开始服务端导出\n                  return fetch(`${serveApiUrl.value}/api/pub/export`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(body) }).then(response => response.json()).then(data => {\n                    if (data.id) {\n                      VXETable.modal.message({ content: '导出成功，开始下载', status: 'success' })\n                      // 读取路径，请求文件\n                      fetch(`${serveApiUrl.value}/api/pub/export/download/${data.id}`).then(response => {\n                        response.blob().then(blob => {\n                          // 开始下载\n                          VXETable.saveFile({ filename: '导出数据', type: 'xlsx', content: blob })\n                        })\n                      })\n                    }\n                  }).catch(() => {\n                    VXETable.modal.message({ content: '导出失败！', status: 'error' })\n                  })\n                }\n              },\n              checkboxConfig: {\n                labelField: 'id',\n                reserve: true,\n                highlight: true,\n                range: true\n              },\n              editRules: {\n                name: [\n                  { required: true, message: 'app.body.valid.rName' },\n                  { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n                ],\n                email: [\n                  { required: true, message: '邮件必须填写' }\n                ],\n                role: [\n                  { required: true, message: '角色必须填写' }\n                ]\n              },\n              editConfig: {\n                trigger: 'click',\n                mode: 'row',\n                showStatus: true\n              }\n            })\n\n            onMounted(() => {\n              const sexList = [\n                { label: '女', value: '0' },\n                { label: '男', value: '1' }\n              ]\n              const { formConfig, columns } = gridOptions\n              if (columns) {\n                const sexColumn = columns[5]\n                if (sexColumn && sexColumn.editRender) {\n                  sexColumn.editRender.options = sexList\n                }\n              }\n              if (formConfig && formConfig.items) {\n                const sexItem = formConfig.items[4]\n                if (sexItem && sexItem.itemRender) {\n                  sexItem.itemRender.options = sexList\n                }\n              }\n            })\n\n            return {\n              xGrid,\n              gridOptions\n            }\n          }\n        }\n        "]}}}),$=n("6b0d"),P=n.n($);const E=P()(w,[["render",V]]);t["default"]=E}}]);