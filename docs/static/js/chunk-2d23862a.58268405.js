(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d23862a"],{fec8:function(e,t,n){"use strict";n.r(t);var a=n("7a23"),c=Object(a["createElementVNode"])("h2",null,"由于 vue 3 的机制改变",-1),o=Object(a["createElementVNode"])("p",{class:"tip"}," 😘允许未定义属性直接使用 ",-1),r=Object(a["createTextVNode"])("      "),s=Object(a["createTextVNode"])("\r\n    "),l=Object(a["createElementVNode"])("p",{class:"warn"},[Object(a["createTextVNode"])(" 😱不支持数组直接改变数据源"),Object(a["createElementVNode"])("br"),Object(a["createElementVNode"])("span",{class:"green"},"（注：自带 CRUD 功能不受影响，insert、remove ...等用法保持一致）")],-1),b=Object(a["createTextVNode"])("      "),d=Object(a["createTextVNode"])("\r\n      "),u=Object(a["createTextVNode"])("\r\n    ");function i(e,t,n,i,p,m){var j=Object(a["resolveComponent"])("pre-code");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",null,[c,o,Object(a["createElementVNode"])("pre",null,[r,Object(a["createVNode"])(j,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),s]),l,Object(a["createElementVNode"])("pre",null,[b,Object(a["createVNode"])(j,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),d,Object(a["createVNode"])(j,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[2]),1)]})),_:1}),u])])}var p=Object(a["defineComponent"])({setup:function(){return{demoCodes:["\n        import { defineComponent, ref } from 'vue'\n\n        const tableData = ref([\n          { name: 'test1' },\n          { name: 'test2', sex: '1' }\n        ])\n\n        // 支持动态定义响应属性\n        tableData.value[0].sex = '0'\n        ","\n        import { defineComponent, ref } from 'vue'\n\n        const tableData = ref([])\n\n        // 错误：将不会被响应 push、splice、unshift ...等所有方法都将无效\n        tableData.value.push({ name: 'test1' })\n        // 正确：\n        tableData.value = [...tableData.value, { name: 'test1' }]\n        // 正确：\n        tableData.value = tableData.value.concat([{ name: 'test1' }])\n        ","\n        import { defineComponent, reactive } from 'vue'\n\n        const state = reactive({\n          tableData: []\n        })\n\n        // 错误：将不会被响应 push、splice、unshift ...等所有方法都将无效\n        state.tableData.unshift({ name: 'test1' })\n        // 正确：\n        state.tableData = [{ name: 'test1' }, ...state.tableData]\n        // 正确：\n        state.tableData = [{ name: 'test1' }].concat(state.tableData)\n        "]}}}),m=n("6b0d"),j=n.n(m);const O=j()(p,[["render",i]]);t["default"]=O}}]);