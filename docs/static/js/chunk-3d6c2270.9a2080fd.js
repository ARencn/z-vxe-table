(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3d6c2270"],{"07ac":function(e,t,n){var r=n("23e7"),o=n("6f53").values;r({target:"Object",stat:!0},{values:function(e){return o(e)}})},"1da1":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n("d3b7");function r(e,t,n,r,o,a,c){try{var l=e[a](c),u=l.value}catch(i){return void n(i)}l.done?t(u):Promise.resolve(u).then(r,o)}function o(e){return function(){var t=this,n=arguments;return new Promise((function(o,a){var c=e.apply(t,n);function l(e){r(c,o,a,l,u,"next",e)}function u(e){r(c,o,a,l,u,"throw",e)}l(void 0)}))}}},"6f53":function(e,t,n){var r=n("83ab"),o=n("e330"),a=n("df75"),c=n("fc6a"),l=n("d1e7").f,u=o(l),i=o([].push),s=function(e){return function(t){var n,o=c(t),l=a(o),s=l.length,d=0,b=[];while(s>d)n=l[d++],r&&!u(o,n)||i(b,e?[n,o[n]]:o[n]);return b}};e.exports={entries:s(!0),values:s(!1)}},"7d4f":function(e,t,n){"use strict";n.r(t);n("b0c0");var r=n("7a23"),o=Object(r["createElementVNode"])("p",{class:"tip"},"全键盘操作",-1),a=Object(r["createTextVNode"])("新增操作"),c=Object(r["createTextVNode"])("从第一行插入"),l=Object(r["createTextVNode"])("从最后插入"),u=Object(r["createTextVNode"])("插入到 100 行"),i=Object(r["createTextVNode"])("插入到 400 行"),s=Object(r["createTextVNode"])("删除操作"),d=Object(r["createTextVNode"])("删除选中"),b=Object(r["createTextVNode"])("删除第一行"),x=Object(r["createTextVNode"])("删除最后一行"),f=Object(r["createTextVNode"])("删除第 100 行"),v=Object(r["createTextVNode"])("校验操作"),m=Object(r["createTextVNode"])("快速校验"),p=Object(r["createTextVNode"])("完整快速校验"),g=Object(r["createTextVNode"])("选中行校验"),h=Object(r["createTextVNode"])("获取新增"),w=Object(r["createTextVNode"])("获取删除"),j=Object(r["createTextVNode"])("获取修改"),O=Object(r["createTextVNode"])("滚动操作"),T=Object(r["createTextVNode"])("滚动到第 10 行"),V=Object(r["createTextVNode"])("滚动第 400 行"),C=Object(r["createTextVNode"])("滚动第 1 列"),N=Object(r["createTextVNode"])("滚动第 10 列"),k=Object(r["createTextVNode"])("      "),E=Object(r["createTextVNode"])("\r\n        | Arrow Up ↑ | 移动到当前活动单元格上面的单元格 |\r\n        | Arrow Down ↓ | 移动到当前活动单元格下面的单元格 |\r\n        | Arrow Left ← | 移动到当前活动单元格左边的单元格 |\r\n        | Arrow Right → | 移动到当前活动单元格右边的单元格 |\r\n        | Tab | 移动到当前选中或活动单元格的右侧单元格，如果到最后一列且存在下一行，则从下一行开始移动 |\r\n        | Tab + Shift | 移动到当前选中或活动单元格的左侧单元格，如果到第一列且存在上一行，则从上一行开始移动 |\r\n        | Spacebar | 如果单元格是复选框或单选框则切换勾选状态 |\r\n        | Enter | 取消编辑并移动到当前活动单元格下面的单元格 |\r\n        | Delete | 清空内容 |\r\n        | Backspace | 清空内容并激活选中单元格为编辑状态 |\r\n        | F2 | 激活单元格编辑 |\r\n        | Esc | 取消单元格编辑 |\r\n        | Page Up | 向上翻页滚动 |\r\n        | Page Down | 向下翻页滚动 |\r\n        | Home | 滚动到顶部 |\r\n        | End | 滚动到底部 |\r\n      "),$=Object(r["createTextVNode"])("\r\n    "),y={class:"demo-code"},R=Object(r["createTextVNode"])("      "),_=Object(r["createTextVNode"])("\r\n      "),D=Object(r["createTextVNode"])("\r\n    ");function U(e,t,n,U,S,A){var L=Object(r["resolveComponent"])("vxe-button"),I=Object(r["resolveComponent"])("vxe-toolbar"),X=Object(r["resolveComponent"])("vxe-column"),M=Object(r["resolveComponent"])("vxe-input"),q=Object(r["resolveComponent"])("vxe-table"),P=Object(r["resolveComponent"])("pre-code");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",null,[o,Object(r["createVNode"])(I,{refresh:{query:e.findList}},{buttons:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(L,null,{default:Object(r["withCtx"])((function(){return[a]})),dropdowns:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(L,{type:"text",onClick:t[0]||(t[0]=function(t){return e.insertEvent(null)})},{default:Object(r["withCtx"])((function(){return[c]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[1]||(t[1]=function(t){return e.insertEvent(-1)})},{default:Object(r["withCtx"])((function(){return[l]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[2]||(t[2]=function(t){return e.insertEvent(e.$refs.xTable.getData(100))})},{default:Object(r["withCtx"])((function(){return[u]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[3]||(t[3]=function(t){return e.insertEvent(e.$refs.xTable.getData(400))})},{default:Object(r["withCtx"])((function(){return[i]})),_:1})]})),_:1}),Object(r["createVNode"])(L,null,{default:Object(r["withCtx"])((function(){return[s]})),dropdowns:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(L,{type:"text",onClick:t[4]||(t[4]=function(t){return e.$refs.xTable.removeCheckboxRow()})},{default:Object(r["withCtx"])((function(){return[d]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[5]||(t[5]=function(t){return e.$refs.xTable.remove(e.$refs.xTable.getData(0))})},{default:Object(r["withCtx"])((function(){return[b]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[6]||(t[6]=function(t){return e.$refs.xTable.remove(e.$refs.xTable.getData(e.$refs.xTable.getData().length-1))})},{default:Object(r["withCtx"])((function(){return[x]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[7]||(t[7]=function(t){return e.$refs.xTable.remove(e.$refs.xTable.getData(100))})},{default:Object(r["withCtx"])((function(){return[f]})),_:1})]})),_:1}),Object(r["createVNode"])(L,null,{default:Object(r["withCtx"])((function(){return[v]})),dropdowns:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(L,{type:"text",onClick:e.validEvent},{default:Object(r["withCtx"])((function(){return[m]})),_:1},8,["onClick"]),Object(r["createVNode"])(L,{type:"text",onClick:e.fullValidEvent},{default:Object(r["withCtx"])((function(){return[p]})),_:1},8,["onClick"]),Object(r["createVNode"])(L,{type:"text",onClick:e.selectValidEvent},{default:Object(r["withCtx"])((function(){return[g]})),_:1},8,["onClick"])]})),_:1}),Object(r["createVNode"])(L,{onClick:e.getInsertEvent},{default:Object(r["withCtx"])((function(){return[h]})),_:1},8,["onClick"]),Object(r["createVNode"])(L,{onClick:e.getRemoveEvent},{default:Object(r["withCtx"])((function(){return[w]})),_:1},8,["onClick"]),Object(r["createVNode"])(L,{onClick:e.getUpdateEvent},{default:Object(r["withCtx"])((function(){return[j]})),_:1},8,["onClick"]),Object(r["createVNode"])(L,null,{default:Object(r["withCtx"])((function(){return[O]})),dropdowns:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(L,{type:"text",onClick:t[8]||(t[8]=function(t){return e.$refs.xTable.scrollToRow(e.$refs.xTable.getData(10))})},{default:Object(r["withCtx"])((function(){return[T]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[9]||(t[9]=function(t){return e.$refs.xTable.scrollToRow(e.$refs.xTable.getData(400))})},{default:Object(r["withCtx"])((function(){return[V]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[10]||(t[10]=function(t){return e.$refs.xTable.scrollToColumn(e.$refs.xTable.getColumns(1))})},{default:Object(r["withCtx"])((function(){return[C]})),_:1}),Object(r["createVNode"])(L,{type:"text",onClick:t[11]||(t[11]=function(t){return e.$refs.xTable.scrollToColumn(e.$refs.xTable.getColumns(10))})},{default:Object(r["withCtx"])((function(){return[N]})),_:1})]})),_:1})]})),_:1},8,["refresh"]),Object(r["createVNode"])(q,{border:"",resizable:"","show-overflow":"","keep-source":"",ref:"xTable",height:"300",loading:e.demo1.loading,"edit-rules":e.demo1.validRules,"mouse-config":{selected:!0},"checkbox-config":{checkField:"checked"},"edit-config":{trigger:"dblclick",mode:"cell",showStatus:!0},"keyboard-config":{isArrow:!0,isDel:!0,isEnter:!0,isTab:!0,isEdit:!0}},{default:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(X,{type:"checkbox",width:"60"}),Object(r["createVNode"])(X,{type:"seq",width:"100"}),Object(r["createVNode"])(X,{field:"name",title:"Name",sortable:"",width:"200","edit-render":{autofocus:".vxe-input--inner"}},{edit:Object(r["withCtx"])((function(t){return[Object(r["createVNode"])(M,{modelValue:t.row.name,"onUpdate:modelValue":function(e){return t.row.name=e},type:"text",onChange:function(n){return e.$refs.xTable.updateStatus(t)}},null,8,["modelValue","onUpdate:modelValue","onChange"])]})),_:1},8,["edit-render"]),Object(r["createVNode"])(X,{field:"age",title:"Age",width:"200","edit-render":{autofocus:".vxe-input--inner"}},{edit:Object(r["withCtx"])((function(t){return[Object(r["createVNode"])(M,{modelValue:t.row.age,"onUpdate:modelValue":function(e){return t.row.age=e},type:"text",onChange:function(n){return e.$refs.xTable.updateStatus(t)}},null,8,["modelValue","onUpdate:modelValue","onChange"])]})),_:1},8,["edit-render"]),Object(r["createVNode"])(X,{field:"sex",title:"Sex",width:"200","edit-render":{autofocus:".vxe-input--inner"}},{edit:Object(r["withCtx"])((function(t){return[Object(r["createVNode"])(M,{modelValue:t.row.sex,"onUpdate:modelValue":function(e){return t.row.sex=e},type:"text",onChange:function(n){return e.$refs.xTable.updateStatus(t)}},null,8,["modelValue","onUpdate:modelValue","onChange"])]})),_:1},8,["edit-render"]),Object(r["createVNode"])(X,{field:"rate",title:"Rate",width:"200"}),Object(r["createVNode"])(X,{field:"region",title:"Region",width:"200"}),Object(r["createVNode"])(X,{field:"time",title:"Time",width:"200"}),Object(r["createVNode"])(X,{field:"address",title:"Address",width:"300","show-overflow":""}),Object(r["createVNode"])(X,{field:"updateTime",title:"UpdateTime",width:"200"}),Object(r["createVNode"])(X,{field:"createTime",title:"CreateTime",width:"200"})]})),_:1},8,["loading","edit-rules"]),Object(r["createElementVNode"])("pre",null,[k,Object(r["createVNode"])(P,null,{default:Object(r["withCtx"])((function(){return[E]})),_:1}),$]),Object(r["createElementVNode"])("p",y,Object(r["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(r["createElementVNode"])("pre",null,[R,Object(r["createVNode"])(P,{class:"xml"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),_,Object(r["createVNode"])(P,{class:"typescript"},{default:Object(r["withCtx"])((function(){return[Object(r["createTextVNode"])(Object(r["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),D])])}var S=n("1da1"),A=(n("96cf"),n("d3b7"),n("159b"),n("07ac"),n("99af"),n("d81d"),n("55db")),L=Object(r["defineComponent"])({setup:function(){var e=Object(r["ref"])({}),t=Object(r["reactive"])({loading:!1,validRules:{name:[{required:!0,message:"app.body.valid.rName"},{min:3,max:50,message:"名称长度在 3 到 50 个字符"}],sex:[{required:!0,message:"性别必须填写"}]}}),n=function(e){for(var t=[],n=0;n<e;n++)t.push({checked:!1,name:"名称".concat(n),sex:"0",num:123,age:18,num2:234,rate:3,address:"shenzhen"});return t},o=function(){return t.loading=!0,new Promise((function(r){setTimeout((function(){var o=n(600),a=e.value;a&&a.loadData(o),r(null),t.loading=!1}),300)}))},a=function(){var t=Object(S["a"])(regeneratorRuntime.mark((function t(){var n,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.value,t.next=3,n.validate();case 3:r=t.sent,r?A["a"].modal.message({status:"error",content:"校验不通过！"}):A["a"].modal.message({status:"success",content:"校验成功！"});case 5:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),c=function(){var t=Object(S["a"])(regeneratorRuntime.mark((function t(){var n,o,a;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.value,t.next=3,n.fullValidate();case 3:o=t.sent,o?(a=[],Object.values(o).forEach((function(e){e.forEach((function(e){var t=e.rowIndex,n=e.column,r=e.rules;r.forEach((function(e){a.push("第 ".concat(t+1," 行 ").concat(n.title," 校验错误：").concat(e.message))}))}))})),A["a"].modal.message({status:"error",slots:{default:function(){return[Object(r["createVNode"])("div",{class:"red",style:"max-height: 400px;overflow: auto;"},[a.map((function(e){return Object(r["createVNode"])("div",null,[e])}))])]}}})):A["a"].modal.message({status:"success",content:"校验成功！"});case 5:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),l=function(){var t=Object(S["a"])(regeneratorRuntime.mark((function t(){var n,r,o;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n=e.value,r=n.getCheckboxRecords(),!(r.length>0)){t.next=9;break}return t.next=5,n.validate(r).catch((function(e){return e}));case 5:o=t.sent,o?A["a"].modal.message({status:"error",content:"校验不通过！"}):A["a"].modal.message({status:"success",content:"校验成功！"}),t.next=10;break;case 9:A["a"].modal.message({status:"warning",content:"未选中数据！"});case 10:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),u=function(t){var n=e.value,r={checked:!1};n.insertAt(r,t).then((function(e){var t=e.row;n.setActiveRow(t)}))},i=function(){var t=e.value,n=t.getInsertRecords();A["a"].modal.alert(n.length)},s=function(){var t=e.value,n=t.getRemoveRecords();A["a"].modal.alert(n.length)},d=function(){var t=e.value,n=t.getUpdateRecords();A["a"].modal.alert(n.length)};return o(),{xTable:e,demo1:t,findList:o,validEvent:a,fullValidEvent:c,selectValidEvent:l,insertEvent:u,getInsertEvent:i,getRemoveEvent:s,getUpdateEvent:d,demoCodes:['\n        <vxe-toolbar :refresh="{query: findList}">\n          <template #buttons>\n            <vxe-button>\n              <template #default>新增操作</template>\n              <template #dropdowns>\n                <vxe-button type="text" @click="insertEvent(null)">从第一行插入</vxe-button>\n                <vxe-button type="text" @click="insertEvent(-1)">从最后插入</vxe-button>\n                <vxe-button type="text" @click="insertEvent($refs.xTable.getData(100))">插入到 100 行</vxe-button>\n                <vxe-button type="text" @click="insertEvent($refs.xTable.getData(400))">插入到 400 行</vxe-button>\n              </template>\n            </vxe-button>\n            <vxe-button>\n              <template #default>删除操作</template>\n              <template #dropdowns>\n                <vxe-button type="text" @click="$refs.xTable.removeCheckboxRow()">删除选中</vxe-button>\n                <vxe-button type="text" @click="$refs.xTable.remove($refs.xTable.getData(0))">删除第一行</vxe-button>\n                <vxe-button type="text" @click="$refs.xTable.remove($refs.xTable.getData($refs.xTable.getData().length - 1))">删除最后一行</vxe-button>\n                <vxe-button type="text" @click="$refs.xTable.remove($refs.xTable.getData(100))">删除第 100 行</vxe-button>\n              </template>\n            </vxe-button>\n            <vxe-button>\n              <template #default>校验操作</template>\n              <template #dropdowns>\n                <vxe-button type="text" @click="validEvent">快速校验</vxe-button>\n                <vxe-button type="text" @click="fullValidEvent">完整快速校验</vxe-button>\n                <vxe-button type="text" @click="selectValidEvent">选中行校验</vxe-button>\n              </template>\n            </vxe-button>\n            <vxe-button @click="getInsertEvent">获取新增</vxe-button>\n            <vxe-button @click="getRemoveEvent">获取删除</vxe-button>\n            <vxe-button @click="getUpdateEvent">获取修改</vxe-button>\n            <vxe-button>\n              <template #default>滚动操作</template>\n              <template #dropdowns>\n                <vxe-button type="text" @click="$refs.xTable.scrollToRow($refs.xTable.getData(10))">滚动到第 10 行</vxe-button>\n                <vxe-button type="text" @click="$refs.xTable.scrollToRow($refs.xTable.getData(400))">滚动第 400 行</vxe-button>\n                <vxe-button type="text" @click="$refs.xTable.scrollToColumn($refs.xTable.getColumns(1))">滚动第 1 列</vxe-button>\n                <vxe-button type="text" @click="$refs.xTable.scrollToColumn($refs.xTable.getColumns(10))">滚动第 10 列</vxe-button>\n              </template>\n            </vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-table\n          border\n          resizable\n          show-overflow\n          keep-source\n          ref="xTable"\n          height="300"\n          :loading="demo1.loading"\n          :edit-rules="demo1.validRules"\n          :mouse-config="{selected: true}"\n          :checkbox-config="{checkField: \'checked\'}"\n          :edit-config="{trigger: \'dblclick\', mode: \'cell\', showStatus: true}"\n          :keyboard-config="{isArrow: true, isDel: true, isEnter: true, isTab: true, isEdit: true}">\n          <vxe-column type="checkbox" width="60"></vxe-column>\n          <vxe-column type="seq" width="100"></vxe-column>\n          <vxe-column field="name" title="Name" sortable width="200" :edit-render="{autofocus: \'.vxe-input--inner\'}">\n            <template #edit="scope">\n              <vxe-input v-model="scope.row.name" type="text" @change="$refs.xTable.updateStatus(scope)"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field="age" title="Age" width="200" :edit-render="{autofocus: \'.vxe-input--inner\'}">\n            <template #edit="scope">\n              <vxe-input v-model="scope.row.age" type="text" @change="$refs.xTable.updateStatus(scope)"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field="sex" title="Sex" width="200" :edit-render="{autofocus: \'.vxe-input--inner\'}">\n            <template #edit="scope">\n              <vxe-input v-model="scope.row.sex" type="text" @change="$refs.xTable.updateStatus(scope)"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field="rate" title="Rate" width="200"></vxe-column>\n          <vxe-column field="region" title="Region" width="200"></vxe-column>\n          <vxe-column field="time" title="Time" width="200"></vxe-column>\n          <vxe-column field="address" title="Address" width="300" show-overflow></vxe-column>\n          <vxe-column field="updateTime" title="UpdateTime" width="200"></vxe-column>\n          <vxe-column field="createTime" title="CreateTime" width="200"></vxe-column>\n        </vxe-table>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VXETable, VxeTableInstance, VxeTablePropTypes } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const xTable = ref({} as VxeTableInstance)\n\n            const demo1 = reactive({\n              loading: false,\n              validRules: {\n                name: [\n                  { required: true, message: 'app.body.valid.rName' },\n                  { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n                ],\n                sex: [\n                  { required: true, message: '性别必须填写' }\n                ]\n              } as VxeTablePropTypes.ValidConfig\n            })\n\n            const mockList = (size: number) => {\n              const list: any[] = []\n              for (let index = 0; index < size; index++) {\n                list.push({\n                  checked: false,\n                  name: `名称${index}`,\n                  sex: '0',\n                  num: 123,\n                  age: 18,\n                  num2: 234,\n                  rate: 3,\n                  address: 'shenzhen'\n                })\n              }\n              return list\n            }\n\n            const findList = () => {\n              demo1.loading = true\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const tableData = mockList(600)\n                  // 阻断 vue 对大数组的监听，避免 vue 绑定大数据造成短暂的卡顿\n                  const $table = xTable.value\n                  if ($table) {\n                    $table.loadData(tableData)\n                  }\n                  resolve(null)\n                  demo1.loading = false\n                }, 300)\n              })\n            }\n\n            const validEvent = async () => {\n              const $table = xTable.value\n              const errMap = await $table.validate()\n              if (errMap) {\n                VXETable.modal.message({ status: 'error', content: '校验不通过！' })\n              } else {\n                VXETable.modal.message({ status: 'success', content: '校验成功！' })\n              }\n            }\n\n            const fullValidEvent = async () => {\n              const $table = xTable.value\n              const errMap = await $table.fullValidate()\n              if (errMap) {\n                const msgList: string[] = []\n                Object.values(errMap).forEach((errList) => {\n                  errList.forEach(params => {\n                    const { rowIndex, column, rules } = params\n                    rules.forEach(rule => {\n                      msgList.push(`第 ${rowIndex + 1} 行 ${column.title} 校验错误：${rule.message}`)\n                    })\n                  })\n                })\n                VXETable.modal.message({\n                  status: 'error',\n                  slots: {\n                    default () {\n                      return [\n                        <div class=\"red\" style=\"max-height: 400px;overflow: auto;\">\n                          {\n                            msgList.map(msg => {\n                              return <div>{ msg }</div>\n                            })\n                          }\n                        </div>\n                      ]\n                    }\n                  }\n                })\n              } else {\n                VXETable.modal.message({ status: 'success', content: '校验成功！' })\n              }\n            }\n\n            const selectValidEvent = async () => {\n              const $table = xTable.value\n              const selectRecords = $table.getCheckboxRecords()\n              if (selectRecords.length > 0) {\n                const errMap = await $table.validate(selectRecords).catch(errMap => errMap)\n                if (errMap) {\n                  VXETable.modal.message({ status: 'error', content: '校验不通过！' })\n                } else {\n                  VXETable.modal.message({ status: 'success', content: '校验成功！' })\n                }\n              } else {\n                VXETable.modal.message({ status: 'warning', content: '未选中数据！' })\n              }\n            }\n\n            const insertEvent = (row: any) => {\n              const $table = xTable.value\n              const record = {\n                checked: false\n              }\n              $table.insertAt(record, row).then(({ row }) => {\n                $table.setActiveRow(row)\n              })\n            }\n\n            const getInsertEvent = () => {\n              const $table = xTable.value\n              const insertRecords = $table.getInsertRecords()\n              VXETable.modal.alert(insertRecords.length)\n            }\n\n            const getRemoveEvent = () => {\n              const $table = xTable.value\n              const removeRecords = $table.getRemoveRecords()\n              VXETable.modal.alert(removeRecords.length)\n            }\n\n            const getUpdateEvent = () => {\n              const $table = xTable.value\n              const updateRecords = $table.getUpdateRecords()\n              VXETable.modal.alert(updateRecords.length)\n            }\n\n            findList()\n\n            return {\n              xTable,\n              demo1,\n              findList,\n              validEvent,\n              fullValidEvent,\n              selectValidEvent,\n              insertEvent,\n              getInsertEvent,\n              getRemoveEvent,\n              getUpdateEvent\n            }\n          }\n        })\n        "]}}}),I=n("6b0d"),X=n.n(I);const M=X()(L,[["render",U]]);t["default"]=M}}]);