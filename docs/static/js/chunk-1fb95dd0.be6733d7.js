(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1fb95dd0"],{"857a":function(e,n,t){var o=t("e330"),i=t("1d80"),r=t("577e"),c=/"/g,l=o("".replace);e.exports=function(e,n,t,o){var a=r(i(e)),d="<"+n;return""!==t&&(d+=" "+t+'="'+l(r(o),c,"&quot;")+'"'),d+">"+a+"</"+n+">"}},af03:function(e,n,t){var o=t("d039");e.exports=function(e){return o((function(){var n=""[e]('"');return n!==n.toLowerCase()||n.split('"').length>3}))}},c7cd:function(e,n,t){"use strict";var o=t("23e7"),i=t("857a"),r=t("af03");o({target:"String",proto:!0,forced:r("fixed")},{fixed:function(){return i(this,"tt","","")}})},f1bd:function(e,n,t){"use strict";t.r(n);var o=t("7a23"),i=Object(o["createElementVNode"])("p",{class:"tip"},[Object(o["createTextVNode"])(" 虚拟滚动渲染，更加复杂局部递增数据、局部递增列、固定列"),Object(o["createElementVNode"])("br")],-1),r=Object(o["createTextVNode"])("+20条"),c=Object(o["createTextVNode"])("+50条"),l=Object(o["createTextVNode"])("+100条"),a=Object(o["createTextVNode"])("+300条"),d=Object(o["createTextVNode"])("-20条"),u=Object(o["createTextVNode"])("-50条"),s=Object(o["createTextVNode"])("+10列"),f=Object(o["createTextVNode"])("+30列"),b=Object(o["createTextVNode"])("+50列"),x=Object(o["createTextVNode"])("-10列"),m=Object(o["createTextVNode"])("-20列"),v=Object(o["createTextVNode"])("x=1000,y=2000"),O=Object(o["createTextVNode"])("清除滚动"),g={class:"demo-code"},C=Object(o["createTextVNode"])("      "),p=Object(o["createTextVNode"])("\r\n      "),j=Object(o["createTextVNode"])("\r\n    ");function h(e,n,t,h,k,V){var w=Object(o["resolveComponent"])("vxe-button"),N=Object(o["resolveComponent"])("vxe-toolbar"),y=Object(o["resolveComponent"])("vxe-grid"),T=Object(o["resolveComponent"])("pre-code");return Object(o["openBlock"])(),Object(o["createElementBlock"])("div",null,[i,Object(o["createVNode"])(N,{loading:e.gridOptions.loading},{buttons:Object(o["withCtx"])((function(){return[Object(o["createVNode"])(w,{onClick:n[0]||(n[0]=function(n){return e.loadList(20)})},{default:Object(o["withCtx"])((function(){return[r]})),_:1}),Object(o["createVNode"])(w,{onClick:n[1]||(n[1]=function(n){return e.loadList(50)})},{default:Object(o["withCtx"])((function(){return[c]})),_:1}),Object(o["createVNode"])(w,{onClick:n[2]||(n[2]=function(n){return e.loadList(100)})},{default:Object(o["withCtx"])((function(){return[l]})),_:1}),Object(o["createVNode"])(w,{onClick:n[3]||(n[3]=function(n){return e.loadList(300)})},{default:Object(o["withCtx"])((function(){return[a]})),_:1}),Object(o["createVNode"])(w,{onClick:n[4]||(n[4]=function(n){return e.removeList(20)})},{default:Object(o["withCtx"])((function(){return[d]})),_:1}),Object(o["createVNode"])(w,{onClick:n[5]||(n[5]=function(n){return e.removeList(50)})},{default:Object(o["withCtx"])((function(){return[u]})),_:1}),Object(o["createVNode"])(w,{onClick:n[6]||(n[6]=function(n){return e.loadColumns(10)})},{default:Object(o["withCtx"])((function(){return[s]})),_:1}),Object(o["createVNode"])(w,{onClick:n[7]||(n[7]=function(n){return e.loadColumns(30)})},{default:Object(o["withCtx"])((function(){return[f]})),_:1}),Object(o["createVNode"])(w,{onClick:n[8]||(n[8]=function(n){return e.loadColumns(50)})},{default:Object(o["withCtx"])((function(){return[b]})),_:1}),Object(o["createVNode"])(w,{onClick:n[9]||(n[9]=function(n){return e.removeColumn(10)})},{default:Object(o["withCtx"])((function(){return[x]})),_:1}),Object(o["createVNode"])(w,{onClick:n[10]||(n[10]=function(n){return e.removeColumn(20)})},{default:Object(o["withCtx"])((function(){return[m]})),_:1}),Object(o["createVNode"])(w,{onClick:n[11]||(n[11]=function(n){return e.$refs.xGrid.scrollTo(1e3,2e3)})},{default:Object(o["withCtx"])((function(){return[v]})),_:1}),Object(o["createVNode"])(w,{onClick:n[12]||(n[12]=function(n){return e.$refs.xGrid.clearScroll()})},{default:Object(o["withCtx"])((function(){return[O]})),_:1})]})),_:1},8,["loading"]),Object(o["createVNode"])(y,Object(o["mergeProps"])({ref:"xGrid"},e.gridOptions),null,16),Object(o["createElementVNode"])("p",g,Object(o["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(o["createElementVNode"])("pre",null,[C,Object(o["createVNode"])(T,{class:"xml"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),p,Object(o["createVNode"])(T,{class:"typescript"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),j])])}t("d3b7"),t("c7cd"),t("159b"),t("a630"),t("3ca3"),t("99af"),t("fb6a"),t("ddb0");var k=Object(o["defineComponent"])({setup:function(){var e=Object(o["ref"])({}),n=Object(o["reactive"])({border:!0,showOverflow:!0,showHeaderOverflow:!0,height:500,rowId:"id",checkboxConfig:{checkField:"checked",labelField:"id"},loading:!1}),t=0,i=1,r=[],c=[],l=function(e){return new Promise((function(n){setTimeout((function(){for(var o=[],i=0;i<e;i++){var r=t++,c={field:r?"col_".concat(r):"id",title:r?"标题_".concat(r):"ID",width:140,type:null,fixed:null};r||(c.type="checkbox"),r<2&&(c.fixed="left"),o.push(c)}n(o)}),250)}))},a=function(e){return new Promise((function(n){setTimeout((function(){for(var t=[],o=function(e){var n=i++,o={id:n,checked:!1};Array.from(new Array(1e3)).forEach((function(n,t){o["col_".concat(t)]="内容_".concat(t,"_").concat(e)})),t.push(o)},r=0;r<e;r++)o(r);n(t)}),250)}))},d=function(t){if(n.loading=!0,c.length>t){var o=e.value;c=c.slice(0,c.length-t),o&&o.loadColumn(c),n.loading=!1}},u=function(t){n.loading=!0,l(t).then((function(t){var o=e.value;c=c.concat(t),o&&o.loadColumn(c),n.loading=!1}))},s=function(t){n.loading=!0,setTimeout((function(){if(r.length>t){var o=e.value;r=r.slice(0,r.length-t),o&&o.loadData(r)}n.loading=!1}),100)},f=function(t){n.loading=!0,a(t).then((function(t){var o=e.value;r=r.concat(t),o&&o.loadData(r),n.loading=!1}))},b=function(){n.loading=!0,Promise.all([l(200).then((function(n){var t=e.value;c=c.concat(n),t&&t.loadColumn(c)})),a(600).then((function(n){var t=e.value;r=r.concat(n),t&&t.loadData(r)}))]).then((function(){n.loading=!1}))};return b(),{xGrid:e,gridOptions:n,removeColumn:d,loadColumns:u,removeList:s,loadList:f,demoCodes:['\n        <vxe-toolbar :loading="gridOptions.loading">\n          <template #buttons>\n            <vxe-button @click="loadList(20)">+20条</vxe-button>\n            <vxe-button @click="loadList(50)">+50条</vxe-button>\n            <vxe-button @click="loadList(100)">+100条</vxe-button>\n            <vxe-button @click="loadList(300)">+300条</vxe-button>\n            <vxe-button @click="removeList(20)">-20条</vxe-button>\n            <vxe-button @click="removeList(50)">-50条</vxe-button>\n            <vxe-button @click="loadColumns(10)">+10列</vxe-button>\n            <vxe-button @click="loadColumns(30)">+30列</vxe-button>\n            <vxe-button @click="loadColumns(50)">+50列</vxe-button>\n            <vxe-button @click="removeColumn(10)">-10列</vxe-button>\n            <vxe-button @click="removeColumn(20)">-20列</vxe-button>\n            <vxe-button @click="$refs.xGrid.scrollTo(1000, 2000)">x=1000,y=2000</vxe-button>\n            <vxe-button @click="$refs.xGrid.clearScroll()">清除滚动</vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-grid ref="xGrid" v-bind="gridOptions"></vxe-grid>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VxeGridInstance, VxeGridPropTypes, VxeGridProps } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const xGrid = ref({} as VxeGridInstance)\n\n            const gridOptions = reactive({\n              border: true,\n              showOverflow: true,\n              showHeaderOverflow: true,\n              height: 500,\n              rowId: 'id',\n              checkboxConfig: {\n                checkField: 'checked',\n                labelField: 'id'\n              },\n              loading: false\n            } as VxeGridProps)\n\n            let colIndex = 0\n            let rowIndex = 1\n\n            let allData: any[] = []\n            let allColumn: VxeGridPropTypes.Columns = []\n\n            const findColumnList = (size: number): Promise<VxeGridPropTypes.Columns> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const columns: VxeGridPropTypes.Columns = []\n                  for (let index = 0; index < size; index++) {\n                    const key = colIndex++\n                    const config: any = {\n                      field: key ? `col_${key}` : 'id',\n                      title: key ? `标题_${key}` : 'ID',\n                      width: 140,\n                      type: null,\n                      fixed: null\n                    }\n                    if (!key) {\n                      config.type = 'checkbox'\n                    }\n                    if (key < 2) {\n                      config.fixed = 'left'\n                    }\n                    columns.push(config)\n                  }\n                  resolve(columns)\n                }, 250)\n              })\n            }\n\n            const findDataList = (size: number): Promise<any[]> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const list: any[] = []\n                  for (let index = 0; index < size; index++) {\n                    const key = rowIndex++\n                    const item: any = { id: key, checked: false }\n                    // 由于生成数据比较耗时，所以固定生成1000字段\n                    Array.from(new Array(1000)).forEach((num, cIndex) => {\n                      item[`col_${cIndex}`] = `内容_${cIndex}_${index}`\n                    })\n                    list.push(item)\n                  }\n                  resolve(list)\n                }, 250)\n              })\n            }\n\n            const removeColumn = (size: number) => {\n              gridOptions.loading = true\n              if (allColumn.length > size) {\n                const $grid = xGrid.value\n                allColumn = allColumn.slice(0, allColumn.length - size)\n                if ($grid) {\n                  $grid.loadColumn(allColumn)\n                }\n                gridOptions.loading = false\n              }\n            }\n\n            const loadColumns = (size: number) => {\n              gridOptions.loading = true\n              findColumnList(size).then(data => {\n                const $grid = xGrid.value\n                allColumn = allColumn.concat(data) // 局部追加并保存全量数据\n                if ($grid) {\n                  $grid.loadColumn(allColumn)\n                }\n                gridOptions.loading = false\n              })\n            }\n\n            const removeList = (size: number) => {\n              gridOptions.loading = true\n              setTimeout(() => {\n                if (allData.length > size) {\n                  const $grid = xGrid.value\n                  allData = allData.slice(0, allData.length - size)\n                  if ($grid) {\n                    $grid.loadData(allData)\n                  }\n                }\n                gridOptions.loading = false\n              }, 100)\n            }\n\n            const loadList = (size: number) => {\n              gridOptions.loading = true\n              findDataList(size).then(data => {\n                const $grid = xGrid.value\n                allData = allData.concat(data) // 局部追加并保存全量数据\n                if ($grid) {\n                  $grid.loadData(allData)\n                }\n                gridOptions.loading = false\n              })\n            }\n\n            const init = () => {\n              gridOptions.loading = true\n              Promise.all([\n                findColumnList(200).then(data => {\n                  const $grid = xGrid.value\n                  allColumn = allColumn.concat(data)\n                  if ($grid) {\n                    $grid.loadColumn(allColumn)\n                  }\n                }),\n                findDataList(600).then(data => {\n                  const $grid = xGrid.value\n                  allData = allData.concat(data)\n                  if ($grid) {\n                    $grid.loadData(allData)\n                  }\n                })\n              ]).then(() => {\n                gridOptions.loading = false\n              })\n            }\n\n            init()\n\n            return {\n              xGrid,\n              gridOptions,\n              removeColumn,\n              loadColumns,\n              removeList,\n              loadList\n            }\n          }\n        })\n        "]}}}),V=t("6b0d"),w=t.n(V);const N=w()(k,[["render",h]]);n["default"]=N}}]);