(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2712907e"],{"07ac":function(e,t,n){var a=n("23e7"),r=n("6f53").values;a({target:"Object",stat:!0},{values:function(e){return r(e)}})},"1da1":function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n("d3b7");function a(e,t,n,a,r,o,l){try{var c=e[o](l),s=c.value}catch(u){return void n(u)}c.done?t(s):Promise.resolve(s).then(a,r)}function r(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var l=e.apply(t,n);function c(e){a(l,r,o,c,s,"next",e)}function s(e){a(l,r,o,c,s,"throw",e)}c(void 0)}))}}},"6f53":function(e,t,n){var a=n("83ab"),r=n("e330"),o=n("df75"),l=n("fc6a"),c=n("d1e7").f,s=r(c),u=r([].push),i=function(e){return function(t){var n,r=l(t),c=o(r),i=c.length,d=0,v=[];while(i>d)n=c[d++],a&&!s(r,n)||u(v,e?[n,r[n]]:r[n]);return v}};e.exports={entries:i(!0),values:i(!1)}},bb39:function(e,t,n){"use strict";n.r(t);n("b0c0");var a=n("7a23"),r={class:"tip"},o=Object(a["createTextVNode"])(" 通过调用 "),l=Object(a["createTextVNode"])(" 函数校验数据，"),c=Object(a["createTextVNode"])(" 校验规则配置，如果第一个参数为 true 则全量校验"),s=Object(a["createElementVNode"])("br",null,null,-1),u=Object(a["createElementVNode"])("span",{class:"red"},"（如果不指定数据，则默认只校验临时变动的数据，例如新增或修改...等）",-1),i=Object(a["createTextVNode"])("新增"),d=Object(a["createTextVNode"])("删除选中"),v=Object(a["createTextVNode"])("快速校验"),b=Object(a["createTextVNode"])("完整快速校验"),m=Object(a["createTextVNode"])("全量数据校验"),p=Object(a["createTextVNode"])("选中行校验"),x=Object(a["createTextVNode"])("获取选中"),f=Object(a["createTextVNode"])("获取新增"),g=Object(a["createTextVNode"])("获取删除"),h=Object(a["createTextVNode"])("获取修改"),V={class:"demo-code"},j=Object(a["createTextVNode"])("      "),O=Object(a["createTextVNode"])("\r\n      "),w=Object(a["createTextVNode"])("\r\n    ");function T(e,t,n,T,E,C){var N=Object(a["resolveComponent"])("table-api-link"),k=Object(a["resolveComponent"])("vxe-button"),R=Object(a["resolveComponent"])("vxe-toolbar"),y=Object(a["resolveComponent"])("vxe-column"),$=Object(a["resolveComponent"])("vxe-input"),S=Object(a["resolveComponent"])("vxe-colgroup"),D=Object(a["resolveComponent"])("vxe-table"),_=Object(a["resolveComponent"])("pre-code");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",null,[Object(a["createElementVNode"])("p",r,[o,Object(a["createVNode"])(N,{prop:"validate"}),l,Object(a["createVNode"])(N,{prop:"edit-rules"}),c,s,u]),Object(a["createVNode"])(R,null,{buttons:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(k,{onClick:e.insertEvent},{default:Object(a["withCtx"])((function(){return[i]})),_:1},8,["onClick"]),Object(a["createVNode"])(k,{onClick:t[0]||(t[0]=function(t){return e.$refs.xTable.removeCheckboxRow()})},{default:Object(a["withCtx"])((function(){return[d]})),_:1}),Object(a["createVNode"])(k,{onClick:e.validEvent},{default:Object(a["withCtx"])((function(){return[v]})),_:1},8,["onClick"]),Object(a["createVNode"])(k,{onClick:e.fullValidEvent},{default:Object(a["withCtx"])((function(){return[b]})),_:1},8,["onClick"]),Object(a["createVNode"])(k,{onClick:e.validAllEvent},{default:Object(a["withCtx"])((function(){return[m]})),_:1},8,["onClick"]),Object(a["createVNode"])(k,{onClick:e.selectValidEvent},{default:Object(a["withCtx"])((function(){return[p]})),_:1},8,["onClick"]),Object(a["createVNode"])(k,{onClick:e.getSelectEvent},{default:Object(a["withCtx"])((function(){return[x]})),_:1},8,["onClick"]),Object(a["createVNode"])(k,{onClick:e.getInsertEvent},{default:Object(a["withCtx"])((function(){return[f]})),_:1},8,["onClick"]),Object(a["createVNode"])(k,{onClick:e.getRemoveEvent},{default:Object(a["withCtx"])((function(){return[g]})),_:1},8,["onClick"]),Object(a["createVNode"])(k,{onClick:e.getUpdateEvent},{default:Object(a["withCtx"])((function(){return[h]})),_:1},8,["onClick"])]})),_:1}),Object(a["createVNode"])(D,{border:"","show-overflow":"","keep-source":"",height:"500",ref:"xTable",data:e.tableData,"edit-rules":e.validRules,"edit-config":{trigger:"click",mode:"cell",showStatus:!0}},{default:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(y,{type:"checkbox",width:"60"}),Object(a["createVNode"])(y,{type:"seq",width:"60"}),Object(a["createVNode"])(S,{title:"分组1"},{default:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(y,{field:"name",title:"Name","edit-render":{}},{edit:Object(a["withCtx"])((function(t){return[Object(a["createVNode"])($,{modelValue:t.row.name,"onUpdate:modelValue":function(e){return t.row.name=e},type:"text",onChange:function(n){return e.$refs.xTable.updateStatus(t)}},null,8,["modelValue","onUpdate:modelValue","onChange"])]})),_:1}),Object(a["createVNode"])(y,{field:"role",title:"Role","edit-render":{}},{edit:Object(a["withCtx"])((function(t){return[Object(a["createVNode"])($,{modelValue:t.row.role,"onUpdate:modelValue":function(e){return t.row.role=e},type:"text",onChange:function(n){return e.$refs.xTable.updateStatus(t)}},null,8,["modelValue","onUpdate:modelValue","onChange"])]})),_:1})]})),_:1}),Object(a["createVNode"])(S,{title:"分组2"},{default:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(S,{title:"分组21"},{default:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(y,{field:"sex",title:"Sex","edit-render":{}},{edit:Object(a["withCtx"])((function(t){return[Object(a["createVNode"])($,{modelValue:t.row.sex,"onUpdate:modelValue":function(e){return t.row.sex=e},type:"text",onChange:function(n){return e.$refs.xTable.updateStatus(t)}},null,8,["modelValue","onUpdate:modelValue","onChange"])]})),_:1}),Object(a["createVNode"])(y,{field:"age",title:"Age","edit-render":{}},{edit:Object(a["withCtx"])((function(t){return[Object(a["createVNode"])($,{modelValue:t.row.age,"onUpdate:modelValue":function(e){return t.row.age=e},type:"integer",onChange:function(n){return e.$refs.xTable.updateStatus(t)}},null,8,["modelValue","onUpdate:modelValue","onChange"])]})),_:1}),Object(a["createVNode"])(y,{field:"date",title:"Date","edit-render":{}},{edit:Object(a["withCtx"])((function(t){return[Object(a["createVNode"])($,{modelValue:t.row.date,"onUpdate:modelValue":function(e){return t.row.date=e},type:"date",transfer:"",onChange:function(n){return e.$refs.xTable.updateStatus(t)}},null,8,["modelValue","onUpdate:modelValue","onChange"])]})),_:1})]})),_:1})]})),_:1})]})),_:1},8,["data","edit-rules"]),Object(a["createElementVNode"])("p",V,Object(a["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(a["createElementVNode"])("pre",null,[j,Object(a["createVNode"])(_,{class:"xml"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),O,Object(a["createVNode"])(_,{class:"javascript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),w])])}var E=n("1da1"),C=(n("96cf"),n("d3b7"),n("caad"),n("159b"),n("07ac"),n("99af"),n("d81d"),n("55db")),N=Object(a["defineComponent"])({setup:function(){var e=Object(a["ref"])({}),t=Object(a["ref"])([{id:10001,name:"Test1",role:"Develop",sex:"0",age:28,address:"test abc"},{id:10002,name:"Test2",role:"Test",sex:"1",age:22,address:"Guangzhou"},{id:10003,name:"Test3",role:"PM",sex:"0",age:32,address:"Shanghai"},{id:10004,name:"Test4",role:"Designer",sex:"1",age:23,address:"test abc"},{id:10005,name:"Test5",role:"Develop",sex:"1",age:30,address:"Shanghai"},{id:10006,name:"Test6",role:"Designer",sex:"1",age:21,address:"test abc"}]),n=Object(a["ref"])({name:[{required:!0,message:"app.body.valid.rName"},{validator:function(e){var t=e.cellValue;return new Promise((function(e,n){setTimeout((function(){t&&(t.length<3||t.length>50)?n(new Error("名称长度在 3 到 50 个字符之间")):e()}),100)}))}}],role:[{validator:function(e){var t=e.cellValue;if(t&&!["Develop","Test","Designer","PM"].includes(t))return new Error("角色输入不正确")}}],sex:[{required:!0,message:"性别必须填写"},{pattern:/^[0,1]{1}$/,message:"格式不正确"}],age:[{pattern:"^[0-9]{0,3}$",message:"格式不正确"}]}),r=function(){var t=Object(E["a"])(regeneratorRuntime.mark((function t(){var n,a;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.value,t.next=3,n.validate();case 3:a=t.sent,a?C["a"].modal.message({status:"error",content:"校验不通过！"}):C["a"].modal.message({status:"success",content:"校验成功！"});case 5:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),o=function(){var t=Object(E["a"])(regeneratorRuntime.mark((function t(){var n,r,o;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.value,t.next=3,n.fullValidate();case 3:r=t.sent,r?(o=[],Object.values(r).forEach((function(e){e.forEach((function(e){var t=e.rowIndex,n=e.column,a=e.rules;a.forEach((function(e){o.push("第 ".concat(t+1," 行 ").concat(n.title," 校验错误：").concat(e.message))}))}))})),C["a"].modal.message({status:"error",slots:{default:function(){return[Object(a["createVNode"])("div",{class:"red",style:"max-height: 400px;overflow: auto;"},[o.map((function(e){return Object(a["createVNode"])("div",null,[e])}))])]}}})):C["a"].modal.message({status:"success",content:"校验成功！"});case 5:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),l=function(){var t=Object(E["a"])(regeneratorRuntime.mark((function t(){var n,a;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.value,t.next=3,n.validate(!0);case 3:a=t.sent,a?C["a"].modal.message({status:"error",content:"校验不通过！"}):C["a"].modal.message({status:"success",content:"校验成功！"});case 5:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),c=function(){var t=Object(E["a"])(regeneratorRuntime.mark((function t(){var n,a,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(n=e.value,a=n.getCheckboxRecords(),!(a.length>0)){t.next=9;break}return t.next=5,n.validate(a);case 5:r=t.sent,r?C["a"].modal.message({status:"error",content:"校验不通过！"}):C["a"].modal.message({status:"success",content:"校验成功！"}),t.next=10;break;case 9:C["a"].modal.message({status:"warning",content:"未选中数据！"});case 10:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),s=function(){var t=Object(E["a"])(regeneratorRuntime.mark((function t(){var n,a,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.value,t.next=3,n.insert({});case 3:return a=t.sent,r=a.row,t.next=7,n.validate(r);case 7:t.sent;case 9:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),u=function(){var t=e.value,n=t.getCheckboxRecords();C["a"].modal.alert(n.length)},i=function(){var t=e.value,n=t.getInsertRecords();C["a"].modal.alert(n.length)},d=function(){var t=e.value,n=t.getRemoveRecords();C["a"].modal.alert(n.length)},v=function(){var t=e.value,n=t.getUpdateRecords();C["a"].modal.alert(n.length)};return{xTable:e,tableData:t,validRules:n,validEvent:r,fullValidEvent:o,validAllEvent:l,selectValidEvent:c,insertEvent:s,getSelectEvent:u,getInsertEvent:i,getRemoveEvent:d,getUpdateEvent:v,demoCodes:['\n        <vxe-toolbar>\n          <template #buttons>\n            <vxe-button @click="insertEvent">新增</vxe-button>\n            <vxe-button @click="$refs.xTable.removeCheckboxRow()">删除选中</vxe-button>\n            <vxe-button @click="validEvent">快速校验</vxe-button>\n            <vxe-button @click="fullValidEvent">完整快速校验</vxe-button>\n            <vxe-button @click="validAllEvent">全量数据校验</vxe-button>\n            <vxe-button @click="selectValidEvent">选中行校验</vxe-button>\n            <vxe-button @click="getSelectEvent">获取选中</vxe-button>\n            <vxe-button @click="getInsertEvent">获取新增</vxe-button>\n            <vxe-button @click="getRemoveEvent">获取删除</vxe-button>\n            <vxe-button @click="getUpdateEvent">获取修改</vxe-button>\n          </template>\n        </vxe-toolbar>\n\n        <vxe-table\n          border\n          show-overflow\n          keep-source\n          height="500"\n          ref="xTable"\n          :data="tableData"\n          :edit-rules="validRules"\n          :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}">\n          <vxe-column type="checkbox" width="60"></vxe-column>\n          <vxe-column type="seq" width="60"></vxe-column>\n          <vxe-colgroup title="分组1">\n            <vxe-column field="name" title="Name" :edit-render="{}">\n              <template #edit="scope">\n                <vxe-input v-model="scope.row.name" type="text" @change="$refs.xTable.updateStatus(scope)"></vxe-input>\n              </template>\n            </vxe-column>\n            <vxe-column field="role" title="Role" :edit-render="{}">\n              <template #edit="scope">\n                <vxe-input v-model="scope.row.role" type="text" @change="$refs.xTable.updateStatus(scope)"></vxe-input>\n              </template>\n            </vxe-column>\n          </vxe-colgroup>\n          <vxe-colgroup title="分组2">\n            <vxe-colgroup title="分组21">\n              <vxe-column field="sex" title="Sex" :edit-render="{}">\n                <template #edit="scope">\n                  <vxe-input v-model="scope.row.sex" type="text" @change="$refs.xTable.updateStatus(scope)"></vxe-input>\n                </template>\n              </vxe-column>\n              <vxe-column field="age" title="Age" :edit-render="{}">\n                <template #edit="scope">\n                  <vxe-input v-model="scope.row.age" type="integer" @change="$refs.xTable.updateStatus(scope)"></vxe-input>\n                </template>\n              </vxe-column>\n              <vxe-column field="date" title="Date" :edit-render="{}">\n                <template #edit="scope">\n                  <vxe-input v-model="scope.row.date" type="date" transfer @change="$refs.xTable.updateStatus(scope)"></vxe-input>\n                </template>\n              </vxe-column>\n            </vxe-colgroup>\n          </vxe-colgroup>\n        </vxe-table>\n        ',"\n        import { defineComponent, ref } from 'vue'\n        import { VXETable, VxeTableInstance, VxeTablePropTypes } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const xTable = ref({} as VxeTableInstance)\n\n            const tableData = ref([\n              { id: 10001, name: 'Test1', role: 'Develop', sex: '0', age: 28, address: 'test abc' },\n              { id: 10002, name: 'Test2', role: 'Test', sex: '1', age: 22, address: 'Guangzhou' },\n              { id: 10003, name: 'Test3', role: 'PM', sex: '0', age: 32, address: 'Shanghai' },\n              { id: 10004, name: 'Test4', role: 'Designer', sex: '1', age: 23, address: 'test abc' },\n              { id: 10005, name: 'Test5', role: 'Develop', sex: '1', age: 30, address: 'Shanghai' },\n              { id: 10006, name: 'Test6', role: 'Designer', sex: '1', age: 21, address: 'test abc' }\n            ] as VxeTablePropTypes.Data)\n\n            const validRules = ref({\n              name: [\n                { required: true, message: 'app.body.valid.rName' },\n                {\n                  validator ({ cellValue }) {\n                    // 模拟服务端校验\n                    return new Promise((resolve, reject) => {\n                      setTimeout(() => {\n                        if (cellValue && (cellValue.length < 3 || cellValue.length > 50)) {\n                          reject(new Error('名称长度在 3 到 50 个字符之间'))\n                        } else {\n                          resolve()\n                        }\n                      }, 100)\n                    })\n                  }\n                }\n              ],\n              role: [\n                {\n                  validator ({ cellValue }) {\n                    if (cellValue && !['Develop', 'Test', 'Designer', 'PM'].includes(cellValue)) {\n                      return new Error('角色输入不正确')\n                    }\n                  }\n                }\n              ],\n              sex: [\n                { required: true, message: '性别必须填写' },\n                { pattern: /^[0,1]{1}$/, message: '格式不正确' }\n              ],\n              age: [\n                { pattern: '^[0-9]{0,3}$', message: '格式不正确' }\n              ]\n            } as VxeTablePropTypes.EditRules)\n\n            const validEvent = async () => {\n              const $table = xTable.value\n              const errMap = await $table.validate()\n              if (errMap) {\n                VXETable.modal.message({ status: 'error', content: '校验不通过！' })\n              } else {\n                VXETable.modal.message({ status: 'success', content: '校验成功！' })\n              }\n            }\n\n            const fullValidEvent = async () => {\n              const $table = xTable.value\n              const errMap = await $table.fullValidate()\n              if (errMap) {\n                const msgList: string[] = []\n                Object.values(errMap).forEach((errList: any) => {\n                  errList.forEach((params: any) => {\n                    const { rowIndex, column, rules } = params\n                    rules.forEach((rule: any) => {\n                      msgList.push(`第 ${rowIndex + 1} 行 ${column.title} 校验错误：${rule.message}`)\n                    })\n                  })\n                })\n                VXETable.modal.message({\n                  status: 'error',\n                  slots: {\n                    default () {\n                      return [\n                        <div class=\"red\" style=\"max-height: 400px;overflow: auto;\">\n                          {\n                            msgList.map(msg => <div>{ msg }</div>)\n                          }\n                        </div>\n                      ]\n                    }\n                  }\n                })\n              } else {\n                VXETable.modal.message({ status: 'success', content: '校验成功！' })\n              }\n            }\n\n            const validAllEvent = async () => {\n              const $table = xTable.value\n              const errMap = await $table.validate(true)\n              if (errMap) {\n                VXETable.modal.message({ status: 'error', content: '校验不通过！' })\n              } else {\n                VXETable.modal.message({ status: 'success', content: '校验成功！' })\n              }\n            }\n\n            const selectValidEvent = async () => {\n              const $table = xTable.value\n              const selectRecords = $table.getCheckboxRecords()\n              if (selectRecords.length > 0) {\n                const errMap = await $table.validate(selectRecords)\n                if (errMap) {\n                  VXETable.modal.message({ status: 'error', content: '校验不通过！' })\n                } else {\n                  VXETable.modal.message({ status: 'success', content: '校验成功！' })\n                }\n              } else {\n                VXETable.modal.message({ status: 'warning', content: '未选中数据！' })\n              }\n            }\n\n            const insertEvent = async () => {\n              const $table = xTable.value\n              const { row: newRow } = await $table.insert({})\n              // 插入一条数据并触发校验\n              const errMap = await $table.validate(newRow)\n              if (errMap) {\n\n              }\n            }\n\n            const getSelectEvent = () => {\n              const $table = xTable.value\n              const selectRecords = $table.getCheckboxRecords()\n              VXETable.modal.alert(selectRecords.length)\n            }\n\n            const getInsertEvent = () => {\n              const $table = xTable.value\n              const insertRecords = $table.getInsertRecords()\n              VXETable.modal.alert(insertRecords.length)\n            }\n\n            const getRemoveEvent = () => {\n              const $table = xTable.value\n              const removeRecords = $table.getRemoveRecords()\n              VXETable.modal.alert(removeRecords.length)\n            }\n\n            const getUpdateEvent = () => {\n              const $table = xTable.value\n              const updateRecords = $table.getUpdateRecords()\n              VXETable.modal.alert(updateRecords.length)\n            }\n\n            return {\n              xTable,\n              tableData,\n              validRules,\n              validEvent,\n              fullValidEvent,\n              validAllEvent,\n              selectValidEvent,\n              insertEvent,\n              getSelectEvent,\n              getInsertEvent,\n              getRemoveEvent,\n              getUpdateEvent\n            }\n          }\n        })\n        "]}}}),k=n("6b0d"),R=n.n(k);const y=R()(N,[["render",T]]);t["default"]=y}}]);