(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-282d0988"],{"857a":function(e,n,t){var o=t("e330"),r=t("1d80"),i=t("577e"),c=/"/g,d=o("".replace);e.exports=function(e,n,t,o){var a=i(r(e)),s="<"+n;return""!==t&&(s+=" "+t+'="'+d(i(o),c,"&quot;")+'"'),s+">"+a+"</"+n+">"}},af03:function(e,n,t){var o=t("d039");e.exports=function(e){return o((function(){var n=""[e]('"');return n!==n.toLowerCase()||n.split('"').length>3}))}},b55c:function(e,n,t){"use strict";t.r(n);var o=t("7a23"),r=Object(o["createElementVNode"])("p",{class:"tip"},"显示表尾，服务端计算表尾合计",-1),i={class:"demo-code"},c=Object(o["createTextVNode"])("      "),d=Object(o["createTextVNode"])("\r\n      "),a=Object(o["createTextVNode"])("\r\n    ");function s(e,n,t,s,l,u){var f=Object(o["resolveComponent"])("vxe-grid"),p=Object(o["resolveComponent"])("pre-code");return Object(o["openBlock"])(),Object(o["createElementBlock"])("div",null,[r,Object(o["createVNode"])(f,Object(o["mergeProps"])({ref:"xGrid"},e.gridOptions),null,16),Object(o["createElementVNode"])("p",i,Object(o["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(o["createElementVNode"])("pre",null,[c,Object(o["createVNode"])(p,{class:"xml"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),d,Object(o["createVNode"])(p,{class:"javascript"},{default:Object(o["withCtx"])((function(){return[Object(o["createTextVNode"])(Object(o["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),a])])}t("d3b7"),t("c7cd"),t("159b"),t("a630"),t("3ca3"),t("99af"),t("ddb0");var l=Object(o["defineComponent"])({setup:function(){var e=Object(o["ref"])({}),n=Object(o["ref"])([]),t=Object(o["reactive"])({border:!0,showOverflow:!0,showHeaderOverflow:!0,showFooterOverflow:!0,showFooter:!0,height:500,rowId:"id",loading:!1,checkboxConfig:{checkField:"checked",labelField:"id"},footerMethod:function(){return n.value}}),r=0,i=1,c=function(e){return new Promise((function(n){setTimeout((function(){for(var t=[],o=0;o<e;o++){var i=r++,c={field:i?"col_".concat(i):"id",title:i?"标题_".concat(i):"ID",width:140,type:null,fixed:null};i||(c.type="checkbox"),i<2&&(c.fixed="left"),t.push(c)}n(t)}),250)}))},d=function(e){return new Promise((function(n){setTimeout((function(){for(var t=[],o=function(e){var n=i++,o={id:n,checked:!1};Array.from(new Array(1e3)).forEach((function(n,t){o["col_".concat(t)]="内容_".concat(t,"_").concat(e)})),t.push(o)},r=0;r<e;r++)o(r);n(t)}),250)}))},a=function(){var o=[];t.loading=!0,Promise.all([c(200).then((function(n){var t=e.value;t&&(o=n,t.loadColumn(n))})),d(600).then((function(n){var t=e.value;t&&t.loadData(n)}))]).then((function(){var r=e.value;t.loading=!1;var i=[[]];o.forEach((function(e,n){i[0].push(0===n?"合计":"".concat(n))})),n.value=i,r&&r.updateFooter()}))};return a(),{xGrid:e,gridOptions:t,demoCodes:['\n        <vxe-grid ref="xGrid" v-bind="gridOptions"></vxe-grid>\n        ',"\n        import { defineComponent, reactive, ref } from 'vue'\n        import { VxeGridInstance, VxeGridPropTypes, VxeGridProps } from 'vxe-table'\n\n        export default defineComponent({\n          setup () {\n            const xGrid = ref({} as VxeGridInstance)\n\n            const footerData = ref([] as string[][])\n\n            const gridOptions = reactive({\n              border: true,\n              showOverflow: true,\n              showHeaderOverflow: true,\n              showFooterOverflow: true,\n              showFooter: true,\n              height: 500,\n              rowId: 'id',\n              loading: false,\n              checkboxConfig: {\n                checkField: 'checked',\n                labelField: 'id'\n              },\n              footerMethod () {\n                return footerData.value\n              }\n            } as VxeGridProps)\n\n            let colIndex = 0\n            let rowIndex = 1\n\n            const findColumnList = (size: number): Promise<VxeGridPropTypes.Columns> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const columns: VxeGridPropTypes.Columns = []\n                  for (let index = 0; index < size; index++) {\n                    const key = colIndex++\n                    const config: any = {\n                      field: key ? `col_${key}` : 'id',\n                      title: key ? `标题_${key}` : 'ID',\n                      width: 140,\n                      type: null,\n                      fixed: null\n                    }\n                    if (!key) {\n                      config.type = 'checkbox'\n                    }\n                    if (key < 2) {\n                      config.fixed = 'left'\n                    }\n                    columns.push(config)\n                  }\n                  resolve(columns)\n                }, 250)\n              })\n            }\n\n            const findDataList = (size: number): Promise<any[]> => {\n              return new Promise(resolve => {\n                setTimeout(() => {\n                  const list: any[] = []\n                  for (let index = 0; index < size; index++) {\n                    const key = rowIndex++\n                    const item: any = { id: key, checked: false }\n                    // 由于生成数据比较耗时，所以固定生成1000字段\n                    Array.from(new Array(1000)).forEach((num, cIndex) => {\n                      item[`col_${cIndex}`] = `内容_${cIndex}_${index}`\n                    })\n                    list.push(item)\n                  }\n                  resolve(list)\n                }, 250)\n              })\n            }\n\n            const init = () => {\n              let tableColumn: VxeGridPropTypes.Columns = []\n              gridOptions.loading = true\n              Promise.all([\n                findColumnList(200).then(columns => {\n                  const $grid = xGrid.value\n                  if ($grid) {\n                    tableColumn = columns\n                    $grid.loadColumn(columns)\n                  }\n                }),\n                findDataList(600).then(data => {\n                  const $grid = xGrid.value\n                  if ($grid) {\n                    $grid.loadData(data)\n                  }\n                })\n              ]).then(() => {\n                const $grid = xGrid.value\n                gridOptions.loading = false\n\n                // 计算表尾数据\n                const footList: string[][] = [[]]\n                tableColumn.forEach((column, index) => {\n                  footList[0].push(index === 0 ? '合计' : `${index}`)\n                })\n                footerData.value = footList\n                if ($grid) {\n                  $grid.updateFooter()\n                }\n              })\n            }\n\n            init()\n\n            return {\n              xGrid,\n              gridOptions\n            }\n          }\n        })\n        "]}}}),u=t("6b0d"),f=t.n(u);const p=f()(l,[["render",s]]);n["default"]=p},c7cd:function(e,n,t){"use strict";var o=t("23e7"),r=t("857a"),i=t("af03");o({target:"String",proto:!0,forced:i("fixed")},{fixed:function(){return r(this,"tt","","")}})}}]);