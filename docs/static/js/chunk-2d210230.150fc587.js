(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d210230"],{b738:function(e,t,n){"use strict";n.r(t);var a=n("7a23"),r={class:"tip"},o=Object(a["createTextVNode"])(" 筛选渲染 "),l=Object(a["createStaticVNode"])('，查看 <a class="link" href="https://github.com/x-extends/vxe-table-docs/tree/main/v4/src/plugins/table/renderer" target="_blank">示例的源码</a><span class="red">（具体请自行实现，该示例仅供参考）</span><br> 配置参数：<br> className 自定义容器的 className<br> showFilterFooter 是否显示底部按钮<br> renderFilter (params: { column, columnIndex, columnIndex, $panel }) 内容<br> filterMethod (params: { value, option, cellValue, row, column, $table }) 筛选数据函数<br> filterResetMethod (params: { options, column }) 筛选重置函数<br> filterRecoverMethod (params: { option, column }) 筛选复原函数<br> $panel 对象:<br>   <span class="orange">changeOption(event: Event | null, checked: boolean, option) 更新选项的状态</span><br>   <span class="orange">confirmFilter(event?: Event) 确认筛选</span><br>   <span class="orange">resetFilter(event?: Event) 清除筛选条件</span>',28),s={class:"demo-code"},d=Object(a["createTextVNode"])("      "),i=Object(a["createTextVNode"])("\r\n      "),c=Object(a["createTextVNode"])("\r\n      "),p=Object(a["createTextVNode"])("\r\n    ");function m(e,t,n,m,b,u){var f=Object(a["resolveComponent"])("table-column-api-link"),h=Object(a["resolveComponent"])("vxe-column"),x=Object(a["resolveComponent"])("vxe-table"),v=Object(a["resolveComponent"])("pre-code");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",null,[Object(a["createElementVNode"])("p",r,[o,Object(a["createVNode"])(f,{prop:"filter-render"}),l]),Object(a["createVNode"])(x,{border:"",height:"400",data:e.tableData},{default:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(h,{type:"seq",width:"60"}),Object(a["createVNode"])(h,{field:"name",title:"文本筛选",filters:[{data:null}],"filter-render":{name:"FilterInput"}}),Object(a["createVNode"])(h,{field:"role",title:"实现条件的筛选",filters:[{data:{type:"has",name:""}}],"filter-render":{name:"FilterComplex"}}),Object(a["createVNode"])(h,{field:"age",title:"实现内容的筛选",filters:[{data:{vals:[],sVal:""}}],"filter-render":{name:"FilterContent"}}),Object(a["createVNode"])(h,{field:"address",title:"实现复杂的筛选",sortable:"",filters:[{data:{vals:[],sVal:"",fMenu:"",f1Type:"",f1Val:"",fMode:"and",f2Type:"",f2Val:""}}],"filter-render":{name:"FilterExtend"}})]})),_:1},8,["data"]),Object(a["createElementVNode"])("p",s,Object(a["toDisplayString"])(e.$t("app.body.button.showCode")),1),Object(a["createElementVNode"])("pre",null,[d,Object(a["createVNode"])(v,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[0]),1)]})),_:1}),i,Object(a["createVNode"])(v,{class:"xml"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[1]),1)]})),_:1}),c,Object(a["createVNode"])(v,{class:"typescript"},{default:Object(a["withCtx"])((function(){return[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.demoCodes[2]),1)]})),_:1}),p])])}var b=Object(a["defineComponent"])({setup:function(){var e=Object(a["ref"])([{id:10001,name:"Test1",role:"Develop",sex:"Man",age:"28",address:"Shenzhen"},{id:10002,name:"Test2",role:"Test",sex:"Women",age:"22",address:"Guangzhou"},{id:10003,name:"Test3",role:"PM",sex:"Man",age:"32",address:"Shanghai"},{id:10004,name:"Test4",role:"Designer",sex:"Women",age:"23",address:"Shenzhen"},{id:10005,name:"Test5",role:"Develop",sex:"Women",age:"30",address:"Shanghai"},{id:10006,name:"Test6",role:"Designer",sex:"Women",age:"21",address:"Shenzhen"},{id:10007,name:"Test7",role:"Test",sex:"Man",age:"29",address:"Shenzhen"},{id:10008,name:"Test8",role:"Develop",sex:"Man",age:"35",address:"Shenzhen"}]);return{tableData:e,demoCodes:["\n        import VXETable from 'vxe-table'\n\n        // 创建一个简单的输入框筛选\n        VXETable.renderer.add('FilterInput', {\n          // 筛选模板\n          renderFilter (renderOpts, params) {\n            return [\n              <filter-input params={ params }></filter-input>\n            ]\n          },\n          // 重置数据方法\n          filterResetMethod (params) {\n            const { options } = params\n            options.forEach((option) => {\n              option.data = ''\n            })\n          },\n          // 重置筛选复原方法（当未点击确认时，该选项将被恢复为默认值）\n          filterRecoverMethod ({ option }) {\n            option.data = ''\n          },\n          // 筛选方法\n          filterMethod (params) {\n            const { option, row, column } = params\n            const { data } = option\n            const cellValue = row[column.property]\n            if (cellValue) {\n              return cellValue.indexOf(data) > -1\n            }\n            return false\n          }\n        })\n        ",'\n        <vxe-table\n          border\n          height="400"\n          :data="tableData">\n          <vxe-column type="seq" width="60"></vxe-column>\n          <vxe-column field="name" title="文本筛选" :filters="[{data: null}]" :filter-render="{name: \'FilterInput\'}"></vxe-column>\n          <vxe-column field="role" title="实现条件的筛选" :filters="[{data: {type: \'has\', name: \'\'}}]" :filter-render="{name: \'FilterComplex\'}"></vxe-column>\n          <vxe-column field="age" title="实现内容的筛选" :filters="[{data: {vals: [], sVal: \'\'}}]" :filter-render="{name: \'FilterContent\'}"></vxe-column>\n          <vxe-column field="address" title="实现复杂的筛选" sortable :filters="[{data: {vals: [], sVal: \'\', fMenu: \'\', f1Type:\'\', f1Val: \'\', fMode: \'and\', f2Type: \'\', f2Val: \'\'}}]" :filter-render="{name: \'FilterExtend\'}"></vxe-column>\n        </vxe-table>\n        ',"\n        import { defineComponent, ref } from 'vue'\n\n        export default defineComponent({\n          setup  () {\n            const tableData = ref([\n              { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: '28', address: 'Shenzhen' },\n              { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: '22', address: 'Guangzhou' },\n              { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: '32', address: 'Shanghai' },\n              { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: '23', address: 'Shenzhen' },\n              { id: 10005, name: 'Test5', role: 'Develop', sex: 'Women', age: '30', address: 'Shanghai' },\n              { id: 10006, name: 'Test6', role: 'Designer', sex: 'Women', age: '21', address: 'Shenzhen' },\n              { id: 10007, name: 'Test7', role: 'Test', sex: 'Man', age: '29', address: 'Shenzhen' },\n              { id: 10008, name: 'Test8', role: 'Develop', sex: 'Man', age: '35', address: 'Shenzhen' }\n            ])\n\n            return {\n              tableData\n            }\n          }\n        })\n        "]}}}),u=n("6b0d"),f=n.n(u);const h=f()(b,[["render",m]]);t["default"]=h}}]);